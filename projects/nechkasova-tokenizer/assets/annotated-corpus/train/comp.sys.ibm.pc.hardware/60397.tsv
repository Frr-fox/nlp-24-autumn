from	from	from
:	:	:
eyal@fir.canberra.edu.au	eyal@fir.canberra.edu.au	eyal@fir.canberra.edu.au
(	(	(
eyal	eyal	eyal
lebedinsky	lebedinski	lebedinsky
)	)	)

subject	subject	subject
:	:	:
re	re	re
:	:	:
int15h	int15h	int15h
for	for	for
joysticks	joystick	joystick
is	is	is
slow	slow	slow
.	.	.
.	.	.
.	.	.
.	.	.

organization	organ	organization
:	:	:
info	info	info
sci	sci	sci
&	&	&
eng	eng	eng
,	,	,
university	univers	university
of	of	of
canberra	canberra	canberra
,	,	,
australia	australia	australia

lines	line	line
:	:	:
89	89	89

in	in	in
<	<	<
1ql6i3inn8uh@no-names.nerdc.ufl.edu	1ql6i3inn8uh@no-names.nerdc.ufl.edu	1ql6i3inn8uh@no-names.nerdc.ufl.edu
>	>	>
lioness@oak.circa.ufl.edu	lioness@oak.circa.ufl.edu	lioness@oak.circa.ufl.edu
writes	write	writes
:	:	:

>	>	>
i	i	i
'	'	'
m	m	m
using	use	using
int15h	int15h	int15h
to	to	to
read	read	read
my	my	my
joystick	joystick	joystick
,	,	,
and	and	and
it	it	it
is	is	is
hideously	hideous	hideously
slow	slow	slow
.	.	.

something	someth	something

>	>	>
like	like	like
90	90	90
%	%	%
of	of	of
my	my	my
cpu	cpu	cpu
time	time	time
is	is	is
being	be	being
spent	spent	spent
reading	read	reading
the	the	the
joystick	joystick	joystick
,	,	,
and	and	and
this	this	this

>	>	>
is	is	is
in	in	in
a	a	a
program	program	program
that	that	that
does	doe	doe
nothing	noth	nothing
but	but	but
printf	printf	printf
(	(	(
)	)	)
and	and	and
joyread	joyread	joyread
(	(	(
)	)	)
.	.	.

if	if	if
you	you	you
only	onli	only
do	do	do
read	read	read
/	/	/
print	print	print
then	then	then
there	there	there
is	is	is
no	no	no
reason	reason	reason
for	for	for
the	the	the
joystick	joystick	joystick
stuff	stuff	stuff
not	not	not
to	to	to
take	take	take
90	90	90
%	%	%
of	of	of
the	the	the
time	time	time
even	even	even
if	if	if
it	it	it
is	is	is
efficient	effici	efficient
.	.	.

>	>	>
the	the	the
problem	problem	problem
is	is	is
that	that	that
a	a	a
lot	lot	lot
of	of	of
programs	program	program
trap	trap	trap
int15h	int15h	int15h
(	(	(
like	like	like
smartdrv	smartdrv	smartdrv
)	)	)
and	and	and

>	>	>
so	so	so
it	it	it
is	is	is
a	a	a
slow	slow	slow
as	as	a
hell	hell	hell
interface	interfac	interface
.	.	.

can	can	can
i	i	i
read	read	read
the	the	the
joystick	joystick	joystick
port	port	port
in	in	in

>	>	>
a	a	a
reasonably	reason	reasonably
safe	safe	safe
fashion	fashion	fashion
via	via	via
polling	poll	polling
?	?	?

and	and	and
that	that	that
isn	isn	isn
'	'	'
t	t	t
platform	platform	platform
or	or	or

>	>	>
clockspeed	clockspe	clockspeed
specific	specif	specific
?	?	?

the	the	the
truth	truth	truth
is	is	is
that	that	that
int	int	int
15h	15h	15h
joystick	joystick	joystick
reading	read	reading
is	is	is
slow	slow	slow
.	.	.

i	i	i
read	read	read
it	it	it
directly	direct	directly
from	from	from
the	the	the
hardware	hardwar	hardware
port	port	port
.	.	.

note	note	note
that	that	that
doing	do	doing
so	so	so
exposes	expos	expose
you	you	you
to	to	to
intermittent	intermitt	intermittent
disturbance	disturb	disturbance
from	from	from
interrupts	interrupt	interrupt
,	,	,
so	so	so
you	you	you
may	may	may
want	want	want
to	to	to
read	read	read
(	(	(
say	say	say
)	)	)
twice	twice	twice
in	in	in
a	a	a
row	row	row
and	and	and
keep	keep	keep
the	the	the
lower	lower	lower
results	result	result
.	.	.

don	don	don
'	'	'
t	t	t
just	just	just
turn	turn	turn
interrupts	interrupt	interrupt
off	off	off
,	,	,
it	it	it
may	may	may
prove	prove	prove
detrimental	detriment	detrimental
to	to	to
the	the	the
health	health	health
of	of	of
any	ani	any
high	high	high
speed	speed	speed
comms	comm	comms
and	and	and
other	other	other
devices	devic	device
.	.	.

here	here	here
is	is	is
an	an	an
example	exampl	example
of	of	of
how	how	how
to	to	to
do	do	do
this	this	this
:	:	:

/	/	/
*	*	*
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
joy	joy	joy
.	.	.
c	c	c
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
*	*	*
/	/	/

/	/	/
*	*	*
an	an	an
example	exampl	example
of	of	of
how	how	how
to	to	to
read	read	read
pc	pc	pc
joystick	joystick	joystick
port	port	port
by	by	by
polling	poll	polling
the	the	the
hardware	hardwar	hardware
port	port	port

*	*	*
directly	direct	directly
.	.	.

*	*	*
uses	use	us
inp	inp	inp
(	(	(
)	)	)
/	/	/
outp	outp	outp
(	(	(
)	)	)
for	for	for
byte	byte	byte
port	port	port
access	access	access
.	.	.

*	*	*
will	will	will
timeout	timeout	timeout
when	when	when
'	'	'
int	int	int
count	count	count
=	=	=
0	0	0
'	'	'
counts	count	count
up	up	up
to	to	to
zero	zero	zero
.	.	.

*	*	*
this	this	this
sample	sampl	sample
reads	read	read
one	one	one
port	port	port
(	(	(
a	a	a
is	is	is
presented	present	presented
and	and	and
b	b	b
is	is	is
in	in	in
the	the	the
comments	comment	comment
)	)	)
.	.	.

*	*	*
you	you	you
can	can	can
read	read	read
both	both	both
at	at	at
once	onc	once
by	by	by
merging	merg	merging
the	the	the
two	two	two
,	,	,
but	but	but
it	it	it
will	will	will
time	time	time
out	out	out

*	*	*
when	when	when
either	either	either
joystick	joystick	joystick
is	is	is
not	not	not
connected	connect	connected
.	.	.

*	*	*

*	*	*
there	there	there
is	is	is
no	no	no
need	need	need
to	to	to
optimize	optim	optimize
this	this	this
routine	routin	routine
since	sinc	since
it	it	it
runs	run	run
for	for	for
as	as	a
long	long	long
as	as	a

*	*	*
the	the	the
joystick	joystick	joystick
circuitry	circuitri	circuitry
needs	need	need
.	.	.

*	*	*

*	*	*
written	written	written
by	by	by
eyal	eyal	eyal
lebedinsky	lebedinski	lebedinsky
(	(	(
eyal@ise.canberra.edu.au	eyal@ise.canberra.edu.au	eyal@ise.canberra.edu.au
)	)	)
.	.	.

*	*	*
/	/	/

#	#	#
include	includ	include
<	<	<
stdio	stdio	stdio
.	.	.
h	h	h
>	>	>

#	#	#
include	includ	include
<	<	<
stdlib	stdlib	stdlib
.	.	.
h	h	h
>	>	>

#	#	#
include	includ	include
<	<	<
conio	conio	conio
.	.	.
h	h	h
>	>	>

extern	extern	extern
int	int	int
readjoy	readjoy	readjoy
(	(	(
int	int	int
*	*	*
x	x	x
,	,	,
int	int	int
*	*	*
y	y	y
,	,	,
int	int	int
*	*	*
b1	b1	b1
,	,	,
int	int	int
*	*	*
b2	b2	b2
)	)	)
;	;	;

#	#	#
define	defin	define
joyport	joyport	joyport
0x201	0x201	0x201

#	#	#
define	defin	define
xjoy	xjoy	xjoy
0x01	0x01	0x01
/	/	/
*	*	*
for	for	for
joystick	joystick	joystick
b	b	b
use	use	use
0x04	0x04	0x04
*	*	*
/	/	/

#	#	#
define	defin	define
yjoy	yjoy	yjoy
0x02	0x02	0x02
/	/	/
*	*	*
for	for	for
joystick	joystick	joystick
b	b	b
use	use	use
0x08	0x08	0x08
*	*	*
/	/	/

#	#	#
define	defin	define
xymask	xymask	xymask
(	(	(
xjoy	xjoy	xjoy
|	|	|
yjoy	yjoy	yjoy
)	)	)

#	#	#
define	defin	define
but1	but1	but1
0x10	0x10	0x10
/	/	/
*	*	*
for	for	for
joystick	joystick	joystick
b	b	b
use	use	use
0x40	0x40	0x40
*	*	*
/	/	/

#	#	#
define	defin	define
but2	but2	but2
0x20	0x20	0x20
/	/	/
*	*	*
for	for	for
joystick	joystick	joystick
b	b	b
use	use	use
0x80	0x80	0x80
*	*	*
/	/	/

int	int	int
/	/	/
*	*	*
returns	return	return
0	0	0
if	if	if
ok	ok	ok
*	*	*
/	/	/
readjoy	readjoy	readjoy
(	(	(
int	int	int
*	*	*
x	x	x
,	,	,
int	int	int
*	*	*
y	y	y
,	,	,
int	int	int
*	*	*
b1	b1	b1
,	,	,
int	int	int
*	*	*
b2	b2	b2
)	)	)

{	{	{

register	regist	register
int	int	int
count	count	count
;	;	;

register	regist	register
char	char	char
temp	temp	temp
,	,	,
joy	joy	joy
;	;	;

temp	temp	temp
=	=	=
(	(	(
char	char	char
)	)	)
xymask	xymask	xymask
;	;	;

count	count	count
=	=	=
0	0	0
;	;	;

outp	outp	outp
(	(	(
joyport	joyport	joyport
,	,	,
0	0	0
)	)	)
;	;	;
/	/	/
*	*	*
set	set	set
trigger	trigger	trigger
*	*	*
/	/	/

do	do	do
{	{	{

temp	temp	temp
^	^	^
=	=	=
(	(	(
joy	joy	joy
=	=	=
(	(	(
char	char	char
)	)	)
inp	inp	inp
(	(	(
joyport	joyport	joyport
)	)	)
)	)	)
;	;	;

if	if	if
(	(	(
temp	temp	temp
&	&	&
xjoy	xjoy	xjoy
)	)	)

*	*	*
x	x	x
=	=	=
count	count	count
;	;	;

if	if	if
(	(	(
temp	temp	temp
&	&	&
yjoy	yjoy	yjoy
)	)	)

*	*	*
y	y	y
=	=	=
count	count	count
;	;	;

}	}	}
while	while	while
(	(	(
+	+	+
+	+	+
count	count	count
&	&	&
&	&	&
(	(	(
(	(	(
temp	temp	temp
=	=	=
joy	joy	joy
)	)	)
&	&	&
xymask	xymask	xymask
)	)	)
)	)	)
;	;	;

*	*	*
b1	b1	b1
=	=	=
!	!	!
(	(	(
joy	joy	joy
&	&	&
but1	but1	but1
)	)	)
;	;	;

*	*	*
b2	b2	b2
=	=	=
!	!	!
(	(	(
joy	joy	joy
&	&	&
but2	but2	but2
)	)	)
;	;	;

return	return	return
(	(	(
!	!	!
count	count	count
)	)	)
;	;	;

}	}	}

/	/	/
*	*	*
this	this	this
main	main	main
(	(	(
)	)	)
is	is	is
for	for	for
demonstration	demonstr	demonstration
.	.	.

*	*	*
/	/	/

int	int	int
main	main	main
(	(	(
)	)	)

{	{	{

int	int	int
rc	rc	rc
,	,	,
x	x	x
,	,	,
y	y	y
,	,	,
b1	b1	b1
,	,	,
b2	b2	b2
;	;	;

printf	printf	printf
(	(	(
"	"	"
hit	hit	hit
any	ani	any
key	key	key
to	to	to
exit	exit	exit
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;

while	while	while
(	(	(
!	!	!
kbhit	kbhit	kbhit
(	(	(
)	)	)
)	)	)
{	{	{

rc	rc	rc
=	=	=
readjoy	readjoy	readjoy
(	(	(
&	&	&
x	x	x
,	,	,
&	&	&
y	y	y
,	,	,
&	&	&
b1	b1	b1
,	,	,
&	&	&
b2	b2	b2
)	)	)
;	;	;

printf	printf	printf
(	(	(
"	"	"
\	\	\
r	r	r
%	%	%
d	d	d
%	%	%
3d	3d	3d
%	%	%
3d	3d	3d
%	%	%
d	d	d
%	%	%
d	d	d
"	"	"
,	,	,
rc	rc	rc
,	,	,
x	x	x
,	,	,
y	y	y
,	,	,
b1	b1	b1
,	,	,
b2	b2	b2
)	)	)
;	;	;

}	}	}

}	}	}