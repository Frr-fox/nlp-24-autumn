from	from	from
:	:	:
lusardi@cs.buffalo.edu	lusardi@cs.buffalo.edu	lusardi@cs.buffalo.edu
(	(	(
christopher	christoph	christopher
lusardi	lusardi	lusardi
)	)	)

subject	subject	subject
:	:	:
program	program	program
included	includ	included
:	:	:
2	2	2
edge	edg	edge
detection	detect	detection
algorithms	algorithm	algorithm
!	!	!

article	articl	article
-	-	-
i	i	i
.	.	.
d	d	d
.	.	.
:	:	:
acsu	acsu	acsu
.	.	.
c5jqm6	c5jqm6	c5jqm6
.	.	.
hlg	hlg	hlg
organization	organ	organization
:	:	:
state	state	state
university	univers	university
of	of	of
new	new	new
york	york	york
at	at	at
buffalo	buffalo	buffalo
/	/	/
comp	comp	comp
sci	sci	sci
lines	line	line
:	:	:
142	142	142
nntp	nntp	nntp
-	-	-
posting	post	posting
-	-	-
host	host	host
:	:	:
hadar	hadar	hadar
.	.	.
cs	cs	c
.	.	.
buffalo	buffalo	buffalo
.	.	.
edu	edu	edu

/	/	/
*	*	*

this	this	this
program	program	program
doesn	doesn	doesn
'	'	'
t	t	t
detect	detect	detect
edges	edg	edge
with	with	with
compass	compass	compass
operators	oper	operator
and	and	and
a	a	a
laplacian	laplacian	laplacian
operator	oper	operator
.	.	.

it	it	it
should	should	should
output	output	output
2	2	2
raw	raw	raw
grey	grey	grey
-	-	-
scale	scale	scale
images	imag	image
with	with	with
edges	edg	edge
.	.	.

the	the	the
output	output	output
doesn	doesn	doesn
'	'	'
t	t	t
look	look	look
like	like	like
edges	edg	edge
at	at	at
all	all	all
.	.	.

in	in	in
novicee	novice	novicee
terms	term	term
,	,	,
how	how	how
do	do	do
i	i	i
correct	correct	correct
the	the	the
errors	error	error
?	?	?

any	ani	any
improvements	improv	improvement
are	are	are
welcome	welcom	welcome
.	.	.

(	(	(
i	i	i
'	'	'
ll	ll	ll
even	even	even
accept	accept	accept
your	your	your
corrected	correct	corrected
code	code	code
.	.	.
)	)	)

(	(	(
if	if	if
i	i	i
convolve	convolv	convolve
the	the	the
input	input	input
.	.	.
image	imag	image
with	with	with
a	a	a
digital	digit	digital
gaussian	gaussian	gaussian
[	[	[
7	7	7
by	by	by
7	7	7
]	]	]
to	to	to
remove	remov	remove
noise	nois	noise
,	,	,
will	will	will
i	i	i
get	get	get
an	an	an
improvement	improv	improvement
with	with	with
the	the	the
laplacian	laplacian	laplacian
.	.	.
)	)	)

-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
2	2	2
types	type	type
of	of	of
edge	edg	edge
detection	detect	detection
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
*	*	*
/	/	/

#	#	#
include	includ	include
<	<	<
stdio	stdio	stdio
.	.	.
h	h	h
>	>	>

#	#	#
include	includ	include
<	<	<
math	math	math
.	.	.
h	h	h
>	>	>

#	#	#
define	defin	define
imagewidth	imagewidth	imagewidth
300	300	300

#	#	#
define	defin	define
imageheight	imageheight	imageheight
300	300	300

unsigned	unsign	unsigned
char	char	char
input_image	input_imag	input_image
[	[	[
imageheight	imageheight	imageheight
]	]	]
[	[	[
imagewidth	imagewidth	imagewidth
]	]	]
;	;	;

unsigned	unsign	unsigned
char	char	char
angles_wanted	angles_w	angles_wanted
[	[	[
imageheight	imageheight	imageheight
]	]	]
[	[	[
imagewidth	imagewidth	imagewidth
]	]	]
;	;	;
unsigned	unsign	unsigned
char	char	char
magnitude_image	magnitude_imag	magnitude_image
[	[	[
imageheight	imageheight	imageheight
]	]	]
[	[	[
imagewidth	imagewidth	imagewidth
]	]	]
;	;	;

int	int	int
laplace_op1	laplace_op1	laplace_op1
[	[	[
3	3	3
]	]	]
[	[	[
3	3	3
]	]	]
=	=	=
{	{	{
0	0	0
,	,	,
-	-	-
1	1	1
,	,	,
0	0	0
,	,	,
-	-	-
1	1	1
,	,	,
4	4	4
,	,	,
-	-	-
1	1	1
,	,	,
0	0	0
,	,	,
-	-	-
1	1	1
,	,	,
0	0	0
}	}	}
;	;	;

int	int	int
compass_op1	compass_op1	compass_op1
[	[	[
3	3	3
]	]	]
[	[	[
3	3	3
]	]	]
=	=	=
{	{	{
1	1	1
,	,	,
1	1	1
,	,	,
1	1	1
,	,	,
0	0	0
,	,	,
0	0	0
,	,	,
0	0	0
,	,	,
-	-	-
1	1	1
,	,	,
-	-	-
1	1	1
,	,	,
-	-	-
1	1	1
}	}	}
;	;	;
int	int	int
compass_op2	compass_op2	compass_op2
[	[	[
3	3	3
]	]	]
[	[	[
3	3	3
]	]	]
=	=	=
{	{	{
1	1	1
,	,	,
1	1	1
,	,	,
0	0	0
,	,	,
1	1	1
,	,	,
0	0	0
,	,	,
-	-	-
1	1	1
,	,	,
0	0	0
,	,	,
-	-	-
1	1	1
,	,	,
-	-	-
1	1	1
}	}	}
;	;	;
int	int	int
compass_op3	compass_op3	compass_op3
[	[	[
3	3	3
]	]	]
[	[	[
3	3	3
]	]	]
=	=	=
{	{	{
1	1	1
,	,	,
0	0	0
,	,	,
-	-	-
1	1	1
,	,	,
1	1	1
,	,	,
0	0	0
,	,	,
-	-	-
1	1	1
,	,	,
1	1	1
,	,	,
0	0	0
,	,	,
-	-	-
1	1	1
}	}	}
;	;	;
int	int	int
compass_op4	compass_op4	compass_op4
[	[	[
3	3	3
]	]	]
[	[	[
3	3	3
]	]	]
=	=	=
{	{	{
0	0	0
,	,	,
-	-	-
1	1	1
,	,	,
-	-	-
1	1	1
,	,	,
1	1	1
,	,	,
0	0	0
,	,	,
-	-	-
1	1	1
,	,	,
1	1	1
,	,	,
1	1	1
,	,	,
0	0	0
}	}	}
;	;	;
int	int	int
compass_op5	compass_op5	compass_op5
[	[	[
3	3	3
]	]	]
[	[	[
3	3	3
]	]	]
=	=	=
{	{	{
-	-	-
1	1	1
,	,	,
-	-	-
1	1	1
,	,	,
-	-	-
1	1	1
,	,	,
0	0	0
,	,	,
0	0	0
,	,	,
0	0	0
,	,	,
1	1	1
,	,	,
1	1	1
,	,	,
1	1	1
}	}	}
;	;	;
int	int	int
compass_op6	compass_op6	compass_op6
[	[	[
3	3	3
]	]	]
[	[	[
3	3	3
]	]	]
=	=	=
{	{	{
-	-	-
1	1	1
,	,	,
-	-	-
1	1	1
,	,	,
0	0	0
,	,	,
-	-	-
1	1	1
,	,	,
0	0	0
,	,	,
1	1	1
,	,	,
0	0	0
,	,	,
1	1	1
,	,	,
1	1	1
}	}	}
;	;	;
int	int	int
compass_op7	compass_op7	compass_op7
[	[	[
3	3	3
]	]	]
[	[	[
3	3	3
]	]	]
=	=	=
{	{	{
-	-	-
1	1	1
,	,	,
0	0	0
,	,	,
1	1	1
,	,	,
-	-	-
1	1	1
,	,	,
0	0	0
,	,	,
1	1	1
,	,	,
-	-	-
1	1	1
,	,	,
0	0	0
,	,	,
1	1	1
}	}	}
;	;	;
int	int	int
compass_op8	compass_op8	compass_op8
[	[	[
3	3	3
]	]	]
[	[	[
3	3	3
]	]	]
=	=	=
{	{	{
0	0	0
,	,	,
1	1	1
,	,	,
1	1	1
,	,	,
-	-	-
1	1	1
,	,	,
0	0	0
,	,	,
1	1	1
,	,	,
-	-	-
1	1	1
,	,	,
-	-	-
1	1	1
,	,	,
0	0	0
}	}	}
;	;	;

void	void	void
compass	compass	compass
(	(	(
row	row	row
,	,	,
col	col	col
)	)	)
int	int	int
row	row	row
,	,	,
col	col	col
;	;	;

{	{	{

int	int	int
value	valu	value
;	;	;

int	int	int
op_rows	op_row	op_rows
,	,	,
op_cols	op_col	op_cols
;	;	;

int	int	int
compass1	compass1	compass1
,	,	,
compass2	compass2	compass2
,	,	,
compass3	compass3	compass3
,	,	,
compass4	compass4	compass4
;	;	;

int	int	int
compass5	compass5	compass5
,	,	,
compass6	compass6	compass6
,	,	,
compass7	compass7	compass7
,	,	,
compass8	compass8	compass8
;	;	;

compass1	compass1	compass1
=	=	=
compass2	compass2	compass2
=	=	=
compass3	compass3	compass3
=	=	=
compass4	compass4	compass4
=	=	=
0	0	0
;	;	;

compass5	compass5	compass5
=	=	=
compass6	compass6	compass6
=	=	=
compass7	compass7	compass7
=	=	=
compass8	compass8	compass8
=	=	=
0	0	0
;	;	;

for	for	for
(	(	(
op_rows	op_row	op_rows
=	=	=
-	-	-
1	1	1
;	;	;
op_rows	op_row	op_rows
<	<	<
2	2	2
;	;	;
op_rows	op_row	op_rows
+	+	+
+	+	+
)	)	)

for	for	for
(	(	(
op_cols	op_col	op_cols
=	=	=
-	-	-
1	1	1
;	;	;
op_cols	op_col	op_cols
<	<	<
2	2	2
;	;	;
op_cols	op_col	op_cols
+	+	+
+	+	+
)	)	)

{	{	{

if	if	if
(	(	(
(	(	(
(	(	(
row	row	row
+	+	+
op_rows	op_row	op_rows
)	)	)
>	>	>
=	=	=
0	0	0
)	)	)
&	&	&
&	&	&
(	(	(
(	(	(
col	col	col
+	+	+
op_cols	op_col	op_cols
)	)	)
>	>	>
=	=	=
0	0	0
)	)	)
)	)	)

{	{	{

compass1	compass1	compass1
+	+	+
=	=	=
(	(	(
(	(	(
int	int	int
)	)	)
input_image	input_imag	input_image
[	[	[
row	row	row
+	+	+
op_rows	op_row	op_rows
]	]	]
[	[	[
col	col	col
+	+	+
op_cols	op_col	op_cols
]	]	]
)	)	)
*	*	*

compass_op1	compass_op1	compass_op1
[	[	[
op_rows	op_row	op_rows
+	+	+
1	1	1
]	]	]
[	[	[
op_cols	op_col	op_cols
+	+	+
1	1	1
]	]	]
;	;	;

compass2	compass2	compass2
+	+	+
=	=	=
(	(	(
(	(	(
int	int	int
)	)	)
input_image	input_imag	input_image
[	[	[
row	row	row
+	+	+
op_rows	op_row	op_rows
]	]	]
[	[	[
col	col	col
+	+	+
op_cols	op_col	op_cols
]	]	]
)	)	)
*	*	*

compass_op2	compass_op2	compass_op2
[	[	[
op_rows	op_row	op_rows
+	+	+
1	1	1
]	]	]
[	[	[
op_cols	op_col	op_cols
+	+	+
1	1	1
]	]	]
;	;	;

compass3	compass3	compass3
+	+	+
=	=	=
(	(	(
(	(	(
int	int	int
)	)	)
input_image	input_imag	input_image
[	[	[
row	row	row
+	+	+
op_rows	op_row	op_rows
]	]	]
[	[	[
col	col	col
+	+	+
op_cols	op_col	op_cols
]	]	]
)	)	)
*	*	*

compass_op3	compass_op3	compass_op3
[	[	[
op_rows	op_row	op_rows
+	+	+
1	1	1
]	]	]
[	[	[
op_cols	op_col	op_cols
+	+	+
1	1	1
]	]	]
;	;	;

compass4	compass4	compass4
+	+	+
=	=	=
(	(	(
(	(	(
int	int	int
)	)	)
input_image	input_imag	input_image
[	[	[
row	row	row
+	+	+
op_rows	op_row	op_rows
]	]	]
[	[	[
col	col	col
+	+	+
op_cols	op_col	op_cols
]	]	]
)	)	)
*	*	*

compass_op4	compass_op4	compass_op4
[	[	[
op_rows	op_row	op_rows
+	+	+
1	1	1
]	]	]
[	[	[
op_cols	op_col	op_cols
+	+	+
1	1	1
]	]	]
;	;	;

compass5	compass5	compass5
+	+	+
=	=	=
(	(	(
(	(	(
int	int	int
)	)	)
input_image	input_imag	input_image
[	[	[
row	row	row
+	+	+
op_rows	op_row	op_rows
]	]	]
[	[	[
col	col	col
+	+	+
op_cols	op_col	op_cols
]	]	]
)	)	)
*	*	*

compass_op5	compass_op5	compass_op5
[	[	[
op_rows	op_row	op_rows
+	+	+
1	1	1
]	]	]
[	[	[
op_cols	op_col	op_cols
+	+	+
1	1	1
]	]	]
;	;	;

compass6	compass6	compass6
+	+	+
=	=	=
(	(	(
(	(	(
int	int	int
)	)	)
input_image	input_imag	input_image
[	[	[
row	row	row
+	+	+
op_rows	op_row	op_rows
]	]	]
[	[	[
col	col	col
+	+	+
op_cols	op_col	op_cols
]	]	]
)	)	)
*	*	*

compass_op6	compass_op6	compass_op6
[	[	[
op_rows	op_row	op_rows
+	+	+
1	1	1
]	]	]
[	[	[
op_cols	op_col	op_cols
+	+	+
1	1	1
]	]	]
;	;	;

compass7	compass7	compass7
+	+	+
=	=	=
(	(	(
(	(	(
int	int	int
)	)	)
input_image	input_imag	input_image
[	[	[
row	row	row
+	+	+
op_rows	op_row	op_rows
]	]	]
[	[	[
col	col	col
+	+	+
op_cols	op_col	op_cols
]	]	]
)	)	)
*	*	*

compass_op7	compass_op7	compass_op7
[	[	[
op_rows	op_row	op_rows
+	+	+
1	1	1
]	]	]
[	[	[
op_cols	op_col	op_cols
+	+	+
1	1	1
]	]	]
;	;	;

compass8	compass8	compass8
+	+	+
=	=	=
(	(	(
(	(	(
int	int	int
)	)	)
input_image	input_imag	input_image
[	[	[
row	row	row
+	+	+
op_rows	op_row	op_rows
]	]	]
[	[	[
col	col	col
+	+	+
op_cols	op_col	op_cols
]	]	]
)	)	)
*	*	*

compass_op8	compass_op8	compass_op8
[	[	[
op_rows	op_row	op_rows
+	+	+
1	1	1
]	]	]
[	[	[
op_cols	op_col	op_cols
+	+	+
1	1	1
]	]	]
;	;	;

}	}	}

}	}	}

if	if	if
(	(	(
compass1	compass1	compass1
<	<	<
compass2	compass2	compass2
)	)	)

value	valu	value
=	=	=
compass2	compass2	compass2
;	;	;

else	els	else

value	valu	value
=	=	=
compass1	compass1	compass1
;	;	;

if	if	if
(	(	(
value	valu	value
<	<	<
compass3	compass3	compass3
)	)	)

value	valu	value
=	=	=
compass3	compass3	compass3
;	;	;

if	if	if
(	(	(
value	valu	value
<	<	<
compass4	compass4	compass4
)	)	)

value	valu	value
=	=	=
compass4	compass4	compass4
;	;	;

if	if	if
(	(	(
value	valu	value
<	<	<
compass5	compass5	compass5
)	)	)

value	valu	value
=	=	=
compass5	compass5	compass5
;	;	;

if	if	if
(	(	(
value	valu	value
<	<	<
compass6	compass6	compass6
)	)	)

value	valu	value
=	=	=
compass6	compass6	compass6
;	;	;

if	if	if
(	(	(
value	valu	value
<	<	<
compass7	compass7	compass7
)	)	)

value	valu	value
=	=	=
compass7	compass7	compass7
;	;	;

if	if	if
(	(	(
value	valu	value
<	<	<
compass8	compass8	compass8
)	)	)

value	valu	value
=	=	=
compass8	compass8	compass8
;	;	;

magnitude_image	magnitude_imag	magnitude_image
[	[	[
row	row	row
]	]	]
[	[	[
col	col	col
]	]	]
=	=	=
(	(	(
char	char	char
)	)	)
value	valu	value
;	;	;

}	}	}

void	void	void
laplace1	laplace1	laplace1
(	(	(
row	row	row
,	,	,
col	col	col
)	)	)
int	int	int
row	row	row
,	,	,
col	col	col
;	;	;

{	{	{

int	int	int
op_rows	op_row	op_rows
,	,	,
op_cols	op_col	op_cols
;	;	;

magnitude_image	magnitude_imag	magnitude_image
[	[	[
row	row	row
]	]	]
[	[	[
col	col	col
]	]	]
=	=	=
0	0	0
;	;	;

for	for	for
(	(	(
op_rows	op_row	op_rows
=	=	=
-	-	-
1	1	1
;	;	;
op_rows	op_row	op_rows
<	<	<
2	2	2
;	;	;
op_rows	op_row	op_rows
+	+	+
+	+	+
)	)	)

for	for	for
(	(	(
op_cols	op_col	op_cols
=	=	=
-	-	-
1	1	1
;	;	;
op_cols	op_col	op_cols
<	<	<
2	2	2
;	;	;
op_cols	op_col	op_cols
+	+	+
+	+	+
)	)	)

if	if	if
(	(	(
(	(	(
(	(	(
row	row	row
+	+	+
op_rows	op_row	op_rows
)	)	)
>	>	>
=	=	=
0	0	0
)	)	)
&	&	&
&	&	&
(	(	(
(	(	(
col	col	col
+	+	+
op_cols	op_col	op_cols
)	)	)
>	>	>
=	=	=
0	0	0
)	)	)
)	)	)

magnitude_image	magnitude_imag	magnitude_image
[	[	[
row	row	row
]	]	]
[	[	[
col	col	col
]	]	]
=	=	=

(	(	(
char	char	char
)	)	)
(	(	(
(	(	(
int	int	int
)	)	)
magnitude_image	magnitude_imag	magnitude_image
[	[	[
row	row	row
]	]	]
[	[	[
col	col	col
]	]	]
+	+	+

(	(	(
(	(	(
int	int	int
)	)	)
input_image	input_imag	input_image
[	[	[
row	row	row
+	+	+
op_rows	op_row	op_rows
]	]	]
[	[	[
col	col	col
+	+	+
op_cols	op_col	op_cols
]	]	]
*	*	*

laplace_op1	laplace_op1	laplace_op1
[	[	[
op_rows	op_row	op_rows
+	+	+
1	1	1
]	]	]
[	[	[
op_cols	op_col	op_cols
+	+	+
1	1	1
]	]	]
)	)	)
)	)	)
;	;	;

}	}	}

main	main	main
(	(	(
)	)	)

{	{	{

file	file	file
*	*	*
original_image_fp	original_image_fp	original_image_fp
;	;	;

file	file	file
*	*	*
laplace1_mag_fp	laplace1_mag_fp	laplace1_mag_fp
,	,	,
*	*	*
laplace2_mag_fp	laplace2_mag_fp	laplace2_mag_fp
,	,	,
*	*	*
laplace3_mag_fp	laplace3_mag_fp	laplace3_mag_fp
;	;	;

file	file	file
*	*	*
compass_mag_fp	compass_mag_fp	compass_mag_fp
;	;	;

int	int	int
row	row	row
,	,	,
col	col	col
,	,	,
algo_count	algo_count	algo_count
;	;	;

original_image_fp	original_image_fp	original_image_fp
=	=	=
fopen	fopen	fopen
(	(	(
"	"	"
input	input	input
.	.	.
image	imag	image
"	"	"
,	,	,
"	"	"
rb	rb	rb
"	"	"
)	)	)
;	;	;

laplace1_mag_fp	laplace1_mag_fp	laplace1_mag_fp
=	=	=
fopen	fopen	fopen
(	(	(
"	"	"
laplace1_magnitude	laplace1_magnitud	laplace1_magnitude
"	"	"
,	,	,
"	"	"
wb	wb	wb
"	"	"
)	)	)
;	;	;

compass_mag_fp	compass_mag_fp	compass_mag_fp
=	=	=
fopen	fopen	fopen
(	(	(
"	"	"
compass_magnitude	compass_magnitud	compass_magnitude
"	"	"
,	,	,
"	"	"
wb	wb	wb
"	"	"
)	)	)
;	;	;

fread	fread	fread
(	(	(
(	(	(
unsigned	unsign	unsigned
char	char	char
*	*	*
)	)	)
input_image	input_imag	input_image
,	,	,
sizeof	sizeof	sizeof
(	(	(
unsigned	unsign	unsigned
char	char	char
)	)	)
,	,	,
imageheight	imageheight	imageheight
*	*	*
imagewidth	imagewidth	imagewidth
,	,	,
original_image_fp	original_image_fp	original_image_fp
)	)	)
;	;	;

for	for	for
(	(	(
algo_count	algo_count	algo_count
=	=	=
0	0	0
;	;	;
algo_count	algo_count	algo_count
<	<	<
2	2	2
;	;	;
algo_count	algo_count	algo_count
+	+	+
+	+	+
)	)	)

{	{	{

for	for	for
(	(	(
row	row	row
=	=	=
0	0	0
;	;	;
row	row	row
<	<	<
imageheight	imageheight	imageheight
;	;	;
row	row	row
+	+	+
+	+	+
)	)	)

for	for	for
(	(	(
col	col	col
=	=	=
0	0	0
;	;	;
col	col	col
<	<	<
imagewidth	imagewidth	imagewidth
;	;	;
col	col	col
+	+	+
+	+	+
)	)	)

if	if	if
(	(	(
!	!	!
algo_count	algo_count	algo_count
)	)	)

laplace1	laplace1	laplace1
(	(	(
row	row	row
,	,	,
col	col	col
)	)	)
;	;	;

else	els	else

compass	compass	compass
(	(	(
row	row	row
,	,	,
col	col	col
)	)	)
;	;	;

if	if	if
(	(	(
!	!	!
algo_count	algo_count	algo_count
)	)	)

fwrite	fwrite	fwrite
(	(	(
magnitude_image	magnitude_imag	magnitude_image
,	,	,
sizeof	sizeof	sizeof
(	(	(
char	char	char
)	)	)
,	,	,
imageheight	imageheight	imageheight
*	*	*
imagewidth	imagewidth	imagewidth
,	,	,
laplace1_mag_fp	laplace1_mag_fp	laplace1_mag_fp
)	)	)
;	;	;

else	els	else

fwrite	fwrite	fwrite
(	(	(
magnitude_image	magnitude_imag	magnitude_image
,	,	,
sizeof	sizeof	sizeof
(	(	(
char	char	char
)	)	)
,	,	,
imageheight	imageheight	imageheight
*	*	*
imagewidth	imagewidth	imagewidth
,	,	,
compass_mag_fp	compass_mag_fp	compass_mag_fp
)	)	)
;	;	;

}	}	}

}	}	}

-	-	-
-	-	-

|	|	|
.	.	.
-	-	-
,	,	,
#	#	#
#	#	#
#	#	#
|	|	|
for	for	for
a	a	a
lot	lot	lot
of	of	of
.	.	.
au	au	au
music	music	music
:	:	:
ftp	ftp	ftp
sounds	sound	sound
.	.	.
sdsu	sdsu	sdsu
.	.	.
edu	edu	edu

|	|	|
/	/	/
/	/	/
__	__	__
,	,	,
_	_	_
#	#	#
#	#	#
#	#	#
|	|	|
then	then	then
cat	cat	cat
file	file	file
.	.	.
au	au	au
>	>	>
/	/	/
dev	dev	dev
/	/	/
audio	audio	audio

|	|	|
\	\	\
_	_	_
>	>	>
/	/	/
>	>	>
_	_	_
/	/	/
(	(	(
_	_	_
/	/	/
\	\	\
_	_	_
/	/	/
<	<	<
>	>	>
_	_	_
|	|	|
ub	ub	ub
library	librari	library
catalog	catalog	catalog
:	:	:
telnet	telnet	telnet
bison	bison	bison
.	.	.
acsu	acsu	acsu
.	.	.
buffalo	buffalo	buffalo
.	.	.
edu	edu	edu

|	|	|
_	_	_
14261	14261	14261
_	_	_
|	|	|
(	(	(
when	when	when
in	in	in
doubt	doubt	doubt
ask	ask	ask
:	:	:
xarchie	xarchi	xarchie
,	,	,
xgopher	xgopher	xgopher
,	,	,
or	or	or
xwais	xwai	xwais
.	.	.
)	)	)