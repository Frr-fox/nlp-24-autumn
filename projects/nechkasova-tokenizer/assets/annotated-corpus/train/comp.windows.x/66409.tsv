from	from	from
:	:	:
chongo@toad.com	chongo@toad.com	chongo@toad.com
(	(	(
landon	landon	landon
c	c	c
.	.	.

noll	noll	noll
)	)	)
subject	subject	subject
:	:	:
reposting	repost	reposting
:	:	:
10th	10th	10th
international	intern	international
obfuscated	obfusc	obfuscated
c	c	c
code	code	code
contest	contest	contest
rules	rule	rule
(	(	(
2	2	2
of	of	of
2	2	2
)	)	)
expires	expir	expires
:	:	:
8	8	8
may	may	may
93	93	93
00	00	00
:	:	:
00	00	00
:	:	:
00	00	00
gmt	gmt	gmt
reply	repli	reply
-	-	-
to	to	to
:	:	:
chongo@toad.com	chongo@toad.com	chongo@toad.com
(	(	(
landon	landon	landon
c	c	c
.	.	.

noll	noll	noll
)	)	)
distribution	distribut	distribution
:	:	:
world	world	world
organization	organ	organization
:	:	:
nebula	nebula	nebula
consultants	consult	consultant
in	in	in
san	san	san
francisco	francisco	francisco
lines	line	line
:	:	:
1409	1409	1409
keywords	keyword	keywords
:	:	:
ioccc	ioccc	ioccc

we	we	we
have	have	have
received	receiv	received
a	a	a
number	number	number
of	of	of
requests	request	request
for	for	for
a	a	a
reposting	repost	reposting
of	of	of
the	the	the
international	intern	international
obfuscated	obfusc	obfuscated
c	c	c
code	code	code
contest	contest	contest
rules	rule	rule
and	and	and
guidelines	guidelin	guideline
.	.	.

also	also	also
some	some	some
people	peopl	people
requested	request	requested
that	that	that
these	these	these
rules	rule	rule
be	be	be
posted	post	posted
to	to	to
a	a	a
wider	wider	wider
set	set	set
of	of	of
groups	group	group
.	.	.

sorry	sorri	sorry
for	for	for
the	the	the
cross	cross	cross
posting	post	posting
.	.	.

some	some	some
technical	technic	technical
clarifications	clarif	clarification
were	were	were
made	made	made
to	to	to
the	the	the
rules	rule	rule
and	and	and
guidelines	guidelin	guideline
.	.	.

(	(	(
see	see	see
the	the	the
diff	diff	diff
marks	mark	mark
at	at	at
the	the	the
right	right	right
hand	hand	hand
edge	edg	edge
)	)	)
the	the	the
rules	rule	rule
and	and	and
guidelines	guidelin	guideline
for	for	for
this	this	this
year	year	year
remain	remain	remain
the	the	the
same	same	same
,	,	,
so	so	so
people	peopl	people
who	who	who
have	have	have
already	alreadi	already
or	or	or
are	are	are
in	in	in
the	the	the
process	process	process
of	of	of
submitting	submit	submitting
entries	entri	entry
for	for	for
the	the	the
1993	1993	1993
ioccc	ioccc	ioccc
need	need	need
not	not	not
worry	worri	worry
about	about	about
these	these	these
changes	chang	change
.	.	.

chongo	chongo	chongo
<	<	<
landon	landon	landon
curt	curt	curt
noll	noll	noll
>	>	>
/	/	/
\	\	\
cc	cc	cc
/	/	/
\	\	\
chongo@toad.com	chongo@toad.com	chongo@toad.com
larry	larri	larry
bassel	bassel	bassel
lab@sun.com	lab@sun.com	lab@sun.com

=	=	=
-	-	-
=	=	=

#	#	#
!	!	!
/	/	/
bin	bin	bin
/	/	/
sh	sh	sh

#	#	#
this	this	this
is	is	is
part	part	part
02	02	02
of	of	of
a	a	a
multipart	multipart	multipart
archive	archiv	archive

#	#	#
=	=	=
=	=	=
=	=	=
=	=	=
=	=	=
=	=	=
=	=	=
=	=	=
=	=	=
=	=	=
=	=	=
=	=	=
=	=	=
mkentry	mkentri	mkentry
.	.	.
c	c	c
=	=	=
=	=	=
=	=	=
=	=	=
=	=	=
=	=	=
=	=	=
=	=	=
=	=	=
=	=	=
=	=	=
=	=	=
=	=	=
=	=	=
echo	echo	echo
"	"	"
x	x	x
-	-	-
extracting	extract	extracting
mkentry	mkentri	mkentry
.	.	.
c	c	c
(	(	(
text	text	text
)	)	)
"	"	"
sed	sed	sed
'	'	'
s	s	s
/	/	/
^	^	^
x	x	x
/	/	/
/	/	/
'	'	'
<	<	<
<	<	<
'	'	'
shar_eof	shar_eof	shar_eof
'	'	'
>	>	>
mkentry	mkentri	mkentry
.	.	.
c	c	c
&	&	&
&	&	&
x	x	x
/	/	/
*	*	*
@	@	@
(	(	(
#	#	#
)	)	)
mkentry	mkentri	mkentry
.	.	.
c	c	c
1	1	1
.	.	.
25	25	25
4	4	4
/	/	/
5	5	5
/	/	/
93	93	93
15	15	15
:	:	:
58	58	58
:	:	:
08	08	08
*	*	*
/	/	/
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
copyright	copyright	copyright
(	(	(
c	c	c
)	)	)
landon	landon	landon
curt	curt	curt
noll	noll	noll
&	&	&
larry	larri	larry
bassel	bassel	bassel
,	,	,
1993	1993	1993
.	.	.

x	x	x
*	*	*
all	all	all
rights	right	right
reserved	reserv	reserved
.	.	.

permission	permiss	permission
for	for	for
personal	person	personal
,	,	,
education	educ	education
or	or	or
non	non	non
-	-	-
profit	profit	profit
use	use	use
x	x	x
*	*	*
is	is	is
granted	grant	granted
provided	provid	provided
this	this	this
this	this	this
copyright	copyright	copyright
and	and	and
notice	notic	notice
are	are	are
included	includ	included
in	in	in
its	it	it
x	x	x
*	*	*
entirety	entireti	entirety
and	and	and
remains	remain	remains
unaltered	unalt	unaltered
.	.	.

all	all	all
other	other	other
uses	use	us
must	must	must
receive	receiv	receive
prior	prior	prior
x	x	x
*	*	*
permission	permiss	permission
in	in	in
writing	write	writing
from	from	from
both	both	both
landon	landon	landon
curt	curt	curt
noll	noll	noll
and	and	and
larry	larri	larry
bassel	bassel	bassel
.	.	.

x	x	x
*	*	*
/	/	/
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
mkentry	mkentri	mkentry
-	-	-
make	make	make
an	an	an
international	intern	international
obfuscated	obfusc	obfuscated
c	c	c
code	code	code
contest	contest	contest
entry	entri	entry
x	x	x
*	*	*
x	x	x
*	*	*
usage	usag	usage
:	:	:
x	x	x
*	*	*
mkentry	mkentri	mkentry
-	-	-
r	r	r
remarks	remark	remark
-	-	-
b	b	b
build	build	build
-	-	-
p	p	p
prog	prog	prog
.	.	.
c	c	c
-	-	-
o	o	o
ioccc	ioccc	ioccc
.	.	.
entry	entri	entry
x	x	x
*	*	*
x	x	x
*	*	*
-	-	-
r	r	r
remarks	remark	remark
file	file	file
with	with	with
remarks	remark	remark
about	about	about
the	the	the
entry	entri	entry
x	x	x
*	*	*
-	-	-
b	b	b
build	build	build
file	file	file
containing	contain	containing
how	how	how
prog	prog	prog
.	.	.
c	c	c
should	should	should
be	be	be
built	built	built
x	x	x
*	*	*
-	-	-
p	p	p
prog	prog	prog
.	.	.
c	c	c
the	the	the
obfuscated	obfusc	obfuscated
program	program	program
source	sourc	source
file	file	file
x	x	x
*	*	*
-	-	-
o	o	o
ioccc	ioccc	ioccc
.	.	.
entry	entri	entry
ioccc	ioccc	ioccc
entry	entri	entry
output	output	output
file	file	file
x	x	x
*	*	*
x	x	x
*	*	*
compile	compil	compile
by	by	by
:	:	:
x	x	x
*	*	*
cc	cc	cc
mkentry	mkentri	mkentry
.	.	.
c	c	c
-	-	-
o	o	o
mkentry	mkentri	mkentry
x	x	x
*	*	*
/	/	/
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
placed	place	placed
in	in	in
the	the	the
public	public	public
domain	domain	domain
by	by	by
landon	landon	landon
curt	curt	curt
noll	noll	noll
,	,	,
1992	1992	1992
.	.	.

x	x	x
*	*	*
x	x	x
*	*	*
this	this	this
software	softwar	software
is	is	is
provided	provid	provided
`	`	`
`	`	`
as	as	a
is	is	is
'	'	'
'	'	'
and	and	and
without	without	without
any	ani	any
express	express	express
or	or	or
implied	impli	implied
x	x	x
*	*	*
warranties	warranti	warranty
,	,	,
including	includ	including
,	,	,
without	without	without
limitation	limit	limitation
,	,	,
the	the	the
implied	impli	implied
warranties	warranti	warranty
of	of	of
x	x	x
*	*	*
merchantability	merchant	merchantability
and	and	and
fitness	fit	fitness
for	for	for
a	a	a
particular	particular	particular
purpose	purpos	purpose
.	.	.

x	x	x
*	*	*
/	/	/
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
warning	warn	warning
:	:	:
x	x	x
*	*	*
x	x	x
*	*	*
this	this	this
program	program	program
attempts	attempt	attempt
to	to	to
implement	implement	implement
the	the	the
ioccc	ioccc	ioccc
rules	rule	rule
.	.	.

every	everi	every
attempt	attempt	attempt
x	x	x
*	*	*
has	has	ha
been	been	been
made	made	made
to	to	to
make	make	make
sure	sure	sure
that	that	that
this	this	this
program	program	program
produces	produc	produce
an	an	an
entry	entri	entry
that	that	that
x	x	x
*	*	*
conforms	conform	conforms
to	to	to
the	the	the
contest	contest	contest
rules	rule	rule
.	.	.

in	in	in
all	all	all
cases	case	case
,	,	,
where	where	where
this	this	this
program	program	program
x	x	x
*	*	*
differs	differ	differs
from	from	from
the	the	the
contest	contest	contest
rules	rule	rule
,	,	,
the	the	the
contest	contest	contest
rules	rule	rule
will	will	will
be	be	be
used	use	used
.	.	.

be	be	be
x	x	x
*	*	*
sure	sure	sure
to	to	to
check	check	check
with	with	with
the	the	the
contest	contest	contest
rules	rule	rule
before	befor	before
submitting	submit	submitting
an	an	an
entry	entri	entry
.	.	.

x	x	x
*	*	*
x	x	x
*	*	*
for	for	for
more	more	more
information	inform	information
:	:	:
x	x	x
*	*	*
x	x	x
*	*	*
you	you	you
may	may	may
contact	contact	contact
the	the	the
judges	judg	judge
by	by	by
sending	send	sending
email	email	email
to	to	to
the	the	the
following	follow	following
address	address	address
:	:	:
x	x	x
*	*	*
x	x	x
*	*	*
.	.	.
.	.	.
.	.	.
!	!	!
{	{	{
apple	appl	apple
,	,	,
pyramid	pyramid	pyramid
,	,	,
sun	sun	sun
,	,	,
uunet	uunet	uunet
}	}	}
!	!	!
hoptoad	hoptoad	hoptoad
!	!	!
judges	judg	judge
(	(	(
not	not	not
the	the	the
address	address	address
for	for	for
x	x	x
*	*	*
judges@toad.com	judges@toad.com	judges@toad.com
submitting	submit	submitting
entries	entri	entry
)	)	)
x	x	x
*	*	*
x	x	x
*	*	*
questions	question	question
and	and	and
comments	comment	comment
about	about	about
the	the	the
contest	contest	contest
are	are	are
welcome	welcom	welcome
.	.	.

x	x	x
*	*	*
x	x	x
*	*	*
the	the	the
rules	rule	rule
and	and	and
the	the	the
guidelines	guidelin	guideline
may	may	may
(	(	(
and	and	and
often	often	often
do	do	do
)	)	)
change	chang	change
from	from	from
year	year	year
to	to	to
x	x	x
*	*	*
year	year	year
.	.	.

you	you	you
should	should	should
be	be	be
sure	sure	sure
you	you	you
have	have	have
the	the	the
current	current	current
rules	rule	rule
and	and	and
guidelines	guidelin	guideline
x	x	x
*	*	*
prior	prior	prior
to	to	to
submitting	submit	submitting
entries	entri	entry
.	.	.

to	to	to
obtain	obtain	obtain
them	them	them
,	,	,
send	send	send
email	email	email
to	to	to
the	the	the
address	address	address
x	x	x
*	*	*
above	abov	above
and	and	and
use	use	use
the	the	the
subject	subject	subject
'	'	'
send	send	send
rules	rule	rule
'	'	'
.	.	.

x	x	x
*	*	*
x	x	x
*	*	*
one	one	one
may	may	may
obtain	obtain	obtain
winners	winner	winner
of	of	of
previous	previous	previous
contests	contest	contest
(	(	(
1984	1984	1984
to	to	to
date	date	date
)	)	)
,	,	,
via	via	via
ftp	ftp	ftp
from	from	from
:	:	:
x	x	x
*	*	*
x	x	x
*	*	*
host	host	host
:	:	:
ftp	ftp	ftp
.	.	.
uu	uu	uu
.	.	.
net	net	net
(	(	(
192	192	192
.	.	.
48	48	48
.	.	.
96	96	96
.	.	.
9	9	9
)	)	)
x	x	x
*	*	*
user	user	user
:	:	:
anonymous	anonym	anonymous
x	x	x
*	*	*
pass	pass	pas
:	:	:
yourname	yournam	yourname
@	@	@
yourhost	yourhost	yourhost
x	x	x
*	*	*
dir	dir	dir
:	:	:
~	~	~
/	/	/
pub	pub	pub
/	/	/
ioccc	ioccc	ioccc
x	x	x
*	*	*
x	x	x
*	*	*
as	as	a
a	a	a
last	last	last
resort	resort	resort
,	,	,
previous	previous	previous
winners	winner	winner
may	may	may
be	be	be
obtained	obtain	obtained
by	by	by
sending	send	sending
email	email	email
x	x	x
*	*	*
to	to	to
the	the	the
above	abov	above
address	address	address
.	.	.

please	pleas	please
use	use	use
the	the	the
subject	subject	subject
'	'	'
send	send	send
year	year	year
winners	winner	winner
'	'	'
,	,	,
x	x	x
*	*	*
where	where	where
year	year	year
is	is	is
a	a	a
single	singl	single
4	4	4
digit	digit	digit
year	year	year
,	,	,
a	a	a
year	year	year
range	rang	range
,	,	,
or	or	or
'	'	'
all	all	all
'	'	'
.	.	.

x	x	x
*	*	*
x	x	x
*	*	*
because	becaus	because
contest	contest	contest
rules	rule	rule
change	chang	change
from	from	from
year	year	year
to	to	to
year	year	year
,	,	,
one	one	one
should	should	should
only	onli	only
use	use	use
this	this	this
x	x	x
*	*	*
program	program	program
for	for	for
the	the	the
year	year	year
that	that	that
it	it	it
was	was	wa
intended	intend	intended
.	.	.

be	be	be
sure	sure	sure
that	that	that
the	the	the
rule_year	rule_year	rule_year
x	x	x
*	*	*
define	defin	define
below	below	below
matches	match	match
this	this	this
current	current	current
year	year	year
.	.	.

x	x	x
*	*	*
/	/	/
x	x	x
x	x	x
#	#	#
include	includ	include
<	<	<
stdio	stdio	stdio
.	.	.
h	h	h
>	>	>
x	x	x
#	#	#
include	includ	include
<	<	<
ctype	ctype	ctype
.	.	.
h	h	h
>	>	>
x	x	x
#	#	#
include	includ	include
<	<	<
time	time	time
.	.	.
h	h	h
>	>	>
x	x	x
#	#	#
include	includ	include
<	<	<
sys	sys	sys
/	/	/
types	type	type
.	.	.
h	h	h
>	>	>
x	x	x
#	#	#
include	includ	include
<	<	<
sys	sys	sys
/	/	/
stat	stat	stat
.	.	.
h	h	h
>	>	>
x	x	x
x	x	x
/	/	/
*	*	*
logic	logic	logic
*	*	*
/	/	/
x	x	x
#	#	#
ifndef	ifndef	ifndef
true	true	true
x	x	x
#	#	#
define	defin	define
true	true	true
1	1	1
x	x	x
#	#	#
endif	endif	endif
/	/	/
*	*	*
true	true	true
*	*	*
/	/	/
x	x	x
#	#	#
ifndef	ifndef	ifndef
false	fals	false
x	x	x
#	#	#
define	defin	define
false	fals	false
0	0	0
x	x	x
#	#	#
endif	endif	endif
/	/	/
*	*	*
false	fals	false
*	*	*
/	/	/
x	x	x
#	#	#
define	defin	define
eof_ok	eof_ok	eof_ok
true	true	true
x	x	x
#	#	#
define	defin	define
eof_not_ok	eof_not_ok	eof_not_ok
false	fals	false
x	x	x
x	x	x
/	/	/
*	*	*
global	global	global
limits	limit	limit
*	*	*
/	/	/
x	x	x
#	#	#
define	defin	define
rule_year	rule_year	rule_year
1993	1993	1993
/	/	/
*	*	*
note	note	note
:	:	:
should	should	should
match	match	match
the	the	the
current	current	current
year	year	year
*	*	*
/	/	/
x	x	x
#	#	#
define	defin	define
start_date	start_dat	start_date
"	"	"
1mar92	1mar92	1mar92
0	0	0
:	:	:
00	00	00
utc	utc	utc
"	"	"
/	/	/
*	*	*
first	first	first
confirmation	confirm	confirmation
received	receiv	received
*	*	*
/	/	/
x	x	x
#	#	#
define	defin	define
max_col	max_col	max_col
79	79	79
/	/	/
*	*	*
max	max	max
column	column	column
a	a	a
line	line	line
should	should	should
hit	hit	hit
*	*	*
/	/	/
x	x	x
#	#	#
define	defin	define
max_build_size	max_build_s	max_build_size
256	256	256
/	/	/
*	*	*
max	max	max
how	how	how
to	to	to
build	build	build
size	size	size
*	*	*
/	/	/
x	x	x
#	#	#
define	defin	define
max_program_size	max_program_s	max_program_size
3217	3217	3217
/	/	/
*	*	*
max	max	max
program	program	program
source	sourc	source
size	size	size
*	*	*
/	/	/
x	x	x
#	#	#
define	defin	define
max_program_size2	max_program_size2	max_program_size2
1536	1536	1536
/	/	/
*	*	*
max	max	max
program	program	program
source	sourc	source
size	size	size
not	not	not
counting	count	counting
x	x	x
whitespace	whitespac	whitespace
and	and	and
{	{	{
}	}	}
;	;	;
not	not	not
followed	follow	followed
by	by	by
x	x	x
whitespace	whitespac	whitespace
or	or	or
eof	eof	eof
*	*	*
/	/	/
x	x	x
#	#	#
define	defin	define
max_title_len	max_title_len	max_title_len
12	12	12
/	/	/
*	*	*
max	max	max
chars	char	char
in	in	in
the	the	the
title	titl	title
*	*	*
/	/	/
x	x	x
#	#	#
define	defin	define
max_entry_len	max_entry_len	max_entry_len
1	1	1
/	/	/
*	*	*
max	max	max
length	length	length
in	in	in
the	the	the
entry	entri	entry
input	input	input
line	line	line
*	*	*
/	/	/
x	x	x
#	#	#
define	defin	define
max_entry	max_entri	max_entry
8	8	8
/	/	/
*	*	*
max	max	max
number	number	number
of	of	of
entries	entri	entry
per	per	per
person	person	person
per	per	per
year	year	year
*	*	*
/	/	/
x	x	x
#	#	#
define	defin	define
max_file_len	max_file_len	max_file_len
1024	1024	1024
/	/	/
*	*	*
max	max	max
filename	filenam	filename
length	length	length
for	for	for
a	a	a
info	info	info
file	file	file
*	*	*
/	/	/
x	x	x
x	x	x
/	/	/
*	*	*
where	where	where
to	to	to
send	send	send
entries	entri	entry
*	*	*
/	/	/
x	x	x
#	#	#
define	defin	define
entry_addr1	entry_addr1	entry_addr1
"	"	"
.	.	.
.	.	.
.	.	.
!	!	!
{	{	{
apple	appl	apple
,	,	,
pyramid	pyramid	pyramid
,	,	,
sun	sun	sun
,	,	,
uunet	uunet	uunet
}	}	}
!	!	!
hoptoad	hoptoad	hoptoad
!	!	!
obfuscate	obfusc	obfuscate
"	"	"
x	x	x
#	#	#
define	defin	define
entry_addr2	entry_addr2	entry_addr2
"	"	"
obfuscate@toad.com	obfuscate@toad.com	obfuscate@toad.com
"	"	"
x	x	x
x	x	x
/	/	/
*	*	*
uuencode	uuencod	uuencode
process	process	process
-	-	-
assumes	assum	assumes
ascii	ascii	ascii
*	*	*
/	/	/
x	x	x
#	#	#
define	defin	define
uuencode	uuencod	uuencode
(	(	(
c	c	c
)	)	)
(	(	(
encode_str	encode_str	encode_str
[	[	[
(	(	(
int	int	int
)	)	)
(	(	(
c	c	c
)	)	)
&	&	&
0xff	0xff	0xff
]	]	]
)	)	)
x	x	x
#	#	#
define	defin	define
uuencode_len	uuencode_len	uuencode_len
45	45	45
/	/	/
*	*	*
max	max	max
uuencode	uuencod	uuencode
chunk	chunk	chunk
size	size	size
*	*	*
/	/	/
x	x	x
#	#	#
define	defin	define
uuinfo_mode	uuinfo_mod	uuinfo_mode
0444	0444	0444
/	/	/
*	*	*
mode	mode	mode
of	of	of
an	an	an
info	info	info
file	file	file
'	'	'
s	s	s
uuencode	uuencod	uuencode
file	file	file
*	*	*
/	/	/
x	x	x
#	#	#
define	defin	define
uubuild_mode	uubuild_mod	uubuild_mode
0444	0444	0444
/	/	/
*	*	*
mode	mode	mode
of	of	of
the	the	the
build	build	build
file	file	file
'	'	'
s	s	s
uuencode	uuencod	uuencode
file	file	file
*	*	*
/	/	/
x	x	x
#	#	#
define	defin	define
uubuild_name	uubuild_nam	uubuild_name
"	"	"
build	build	build
"	"	"
/	/	/
*	*	*
name	name	name
for	for	for
the	the	the
build	build	build
file	file	file
'	'	'
s	s	s
uuencode	uuencod	uuencode
file	file	file
*	*	*
/	/	/
x	x	x
#	#	#
define	defin	define
uuprog_mode	uuprog_mod	uuprog_mode
0444	0444	0444
/	/	/
*	*	*
mode	mode	mode
of	of	of
the	the	the
program	program	program
'	'	'
s	s	s
uuencode	uuencod	uuencode
file	file	file
*	*	*
/	/	/
x	x	x
#	#	#
define	defin	define
uuprog_name	uuprog_nam	uuprog_name
"	"	"
prog	prog	prog
.	.	.
c	c	c
"	"	"
/	/	/
*	*	*
name	name	name
for	for	for
the	the	the
program	program	program
'	'	'
s	s	s
uuencode	uuencod	uuencode
file	file	file
*	*	*
/	/	/
x	x	x
x	x	x
/	/	/
*	*	*
encode_str	encode_str	encode_str
[	[	[
(	(	(
char	char	char
)	)	)
val	val	val
]	]	]
is	is	is
the	the	the
uuencoded	uuencod	uuencoded
character	charact	character
of	of	of
val	val	val
*	*	*
/	/	/
xchar	xchar	xchar
encode_str	encode_str	encode_str
[	[	[
256	256	256
+	+	+
1	1	1
]	]	]
=	=	=
"	"	"
`	`	`
!	!	!
\	\	\
"	"	"
#	#	#
$	$	$
%	%	%
&	&	&
'	'	'
(	(	(
)	)	)
*	*	*
+	+	+
,	,	,
-	-	-
.	.	.
/	/	/
0123456789	0123456789	0123456789
:	:	:
;	;	;
<	<	<
=	=	=
>	>	>
?	?	?
@	@	@
abcdefghijklmnopqrstuvwxyz	abcdefghijklmnopqrstuvwxyz	abcdefghijklmnopqrstuvwxyz
[	[	[
\	\	\
\	\	\
]	]	]
^	^	^
_	_	_
!	!	!
\	\	\
"	"	"
#	#	#
$	$	$
%	%	%
&	&	&
'	'	'
(	(	(
)	)	)
*	*	*
+	+	+
,	,	,
-	-	-
.	.	.
/	/	/
0123456789	0123456789	0123456789
:	:	:
;	;	;
<	<	<
=	=	=
>	>	>
?	?	?
@	@	@
abcdefghijklmnopqrstuvwxyz	abcdefghijklmnopqrstuvwxyz	abcdefghijklmnopqrstuvwxyz
[	[	[
\	\	\
\	\	\
]	]	]
^	^	^
_	_	_
!	!	!
\	\	\
"	"	"
#	#	#
$	$	$
%	%	%
&	&	&
'	'	'
(	(	(
)	)	)
*	*	*
+	+	+
,	,	,
-	-	-
.	.	.
/	/	/
0123456789	0123456789	0123456789
:	:	:
;	;	;
<	<	<
=	=	=
>	>	>
?	?	?
@	@	@
abcdefghijklmnopqrstuvwxyz	abcdefghijklmnopqrstuvwxyz	abcdefghijklmnopqrstuvwxyz
[	[	[
\	\	\
\	\	\
]	]	]
^	^	^
_	_	_
!	!	!
\	\	\
"	"	"
#	#	#
$	$	$
%	%	%
&	&	&
'	'	'
(	(	(
)	)	)
*	*	*
+	+	+
,	,	,
-	-	-
.	.	.
/	/	/
0123456789	0123456789	0123456789
:	:	:
;	;	;
<	<	<
=	=	=
>	>	>
?	?	?
@	@	@
abcdefghijklmnopqrstuvwxyz	abcdefghijklmnopqrstuvwxyz	abcdefghijklmnopqrstuvwxyz
[	[	[
\	\	\
\	\	\
]	]	]
^	^	^
_	_	_
"	"	"
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
global	global	global
declarations	declar	declaration
*	*	*
/	/	/
xchar	xchar	xchar
*	*	*
program	program	program
;	;	;
/	/	/
*	*	*
our	our	our
name	name	name
*	*	*
/	/	/
xlong	xlong	xlong
start_time	start_tim	start_time
;	;	;
/	/	/
*	*	*
the	the	the
startup	startup	startup
time	time	time
*	*	*
/	/	/
x	x	x
x	x	x
/	/	/
*	*	*
forward	forward	forward
declarations	declar	declaration
*	*	*
/	/	/
xvoid	xvoid	xvoid
parse_args	parse_arg	parse_args
(	(	(
)	)	)
;	;	;
xvoid	xvoid	xvoid
usage	usag	usage
(	(	(
)	)	)
;	;	;
xfile	xfile	xfile
*	*	*
open_remark	open_remark	open_remark
(	(	(
)	)	)
;	;	;
xfile	xfile	xfile
*	*	*
open_build	open_build	open_build
(	(	(
)	)	)
;	;	;
xfile	xfile	xfile
*	*	*
open_program	open_program	open_program
(	(	(
)	)	)
;	;	;
xfile	xfile	xfile
*	*	*
open_output	open_output	open_output
(	(	(
)	)	)
;	;	;
xvoid	xvoid	xvoid
output_entry	output_entri	output_entry
(	(	(
)	)	)
;	;	;
xvoid	xvoid	xvoid
output_remark	output_remark	output_remark
(	(	(
)	)	)
;	;	;
xvoid	xvoid	xvoid
output_author	output_author	output_author
(	(	(
)	)	)
;	;	;
xvoid	xvoid	xvoid
output_info	output_info	output_info
(	(	(
)	)	)
;	;	;
xvoid	xvoid	xvoid
output_build	output_build	output_build
(	(	(
)	)	)
;	;	;
xvoid	xvoid	xvoid
output_program	output_program	output_program
(	(	(
)	)	)
;	;	;
xvoid	xvoid	xvoid
output_end	output_end	output_end
(	(	(
)	)	)
;	;	;
xint	xint	xint
get_line	get_lin	get_line
(	(	(
)	)	)
;	;	;
xvoid	xvoid	xvoid
output_till_dot	output_till_dot	output_till_dot
(	(	(
)	)	)
;	;	;
xint	xint	xint
col_len	col_len	col_len
(	(	(
)	)	)
;	;	;
xvoid	xvoid	xvoid
check_io	check_io	check_io
(	(	(
)	)	)
;	;	;
xvoid	xvoid	xvoid
uuencode	uuencod	uuencode
(	(	(
)	)	)
;	;	;
x	x	x
xmain	xmain	xmain
(	(	(
argc	argc	argc
,	,	,
argv	argv	argv
)	)	)
x	x	x
int	int	int
argc	argc	argc
;	;	;
/	/	/
*	*	*
arg	arg	arg
count	count	count
*	*	*
/	/	/
x	x	x
char	char	char
*	*	*
*	*	*
argv	argv	argv
;	;	;
/	/	/
*	*	*
the	the	the
args	arg	args
*	*	*
/	/	/
x	x	x
{	{	{
x	x	x
file	file	file
*	*	*
remark	remark	remark
=	=	=
null	null	null
;	;	;
/	/	/
*	*	*
open	open	open
remarks	remark	remark
stream	stream	stream
*	*	*
/	/	/
x	x	x
file	file	file
*	*	*
build	build	build
=	=	=
null	null	null
;	;	;
/	/	/
*	*	*
open	open	open
build	build	build
file	file	file
stream	stream	stream
*	*	*
/	/	/
x	x	x
file	file	file
*	*	*
prog	prog	prog
=	=	=
null	null	null
;	;	;
/	/	/
*	*	*
open	open	open
program	program	program
stream	stream	stream
*	*	*
/	/	/
x	x	x
file	file	file
*	*	*
output	output	output
=	=	=
null	null	null
;	;	;
/	/	/
*	*	*
open	open	open
output	output	output
stream	stream	stream
*	*	*
/	/	/
x	x	x
char	char	char
*	*	*
rname	rname	rname
=	=	=
null	null	null
;	;	;
/	/	/
*	*	*
file	file	file
with	with	with
remarks	remark	remark
about	about	about
the	the	the
entry	entri	entry
*	*	*
/	/	/
x	x	x
char	char	char
*	*	*
bname	bname	bname
=	=	=
null	null	null
;	;	;
/	/	/
*	*	*
file	file	file
containing	contain	containing
how	how	how
prog	prog	prog
.	.	.
c	c	c
should	should	should
be	be	be
built	built	built
*	*	*
/	/	/
x	x	x
char	char	char
*	*	*
pname	pname	pname
=	=	=
null	null	null
;	;	;
/	/	/
*	*	*
the	the	the
obfuscated	obfusc	obfuscated
program	program	program
source	sourc	source
file	file	file
*	*	*
/	/	/
x	x	x
char	char	char
*	*	*
oname	onam	oname
=	=	=
null	null	null
;	;	;
/	/	/
*	*	*
ioccc	ioccc	ioccc
entry	entri	entry
output	output	output
file	file	file
*	*	*
/	/	/
x	x	x
struct	struct	struct
tm	tm	tm
*	*	*
tm	tm	tm
;	;	;
/	/	/
*	*	*
startup	startup	startup
time	time	time
structure	structur	structure
*	*	*
/	/	/
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
check	check	check
on	on	on
the	the	the
year	year	year
x	x	x
*	*	*
/	/	/
x	x	x
start_time	start_tim	start_time
=	=	=
time	time	time
(	(	(
(	(	(
long	long	long
*	*	*
)	)	)
0	0	0
)	)	)
;	;	;
x	x	x
tm	tm	tm
=	=	=
gmtime	gmtime	gmtime
(	(	(
&	&	&
start_time	start_tim	start_time
)	)	)
;	;	;
x	x	x
if	if	if
(	(	(
tm	tm	tm
-	-	-
>	>	>
tm_year	tm_year	tm_year
!	!	!
=	=	=
rule_year	rule_year	rule_year
-	-	-
1900	1900	1900
)	)	)
{	{	{
x	x	x
fprintf	fprintf	fprintf
(	(	(
stderr	stderr	stderr
,	,	,
x	x	x
"	"	"
%	%	%
s	s	s
:	:	:
warning	warn	warning
:	:	:
this	this	this
program	program	program
applies	appli	applies
to	to	to
%	%	%
d	d	d
,	,	,
which	which	which
may	may	may
differ	differ	differ
from	from	from
%	%	%
d	d	d
\	\	\
n	n	n
\	\	\
n	n	n
"	"	"
,	,	,
x	x	x
argv	argv	argv
[	[	[
0	0	0
]	]	]
,	,	,
rule_year	rule_year	rule_year
,	,	,
1900	1900	1900
+	+	+
tm	tm	tm
-	-	-
>	>	>
tm_year	tm_year	tm_year
)	)	)
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
parse	pars	parse
the	the	the
command	command	command
line	line	line
args	arg	args
x	x	x
*	*	*
/	/	/
x	x	x
parse_args	parse_arg	parse_args
(	(	(
argc	argc	argc
,	,	,
argv	argv	argv
,	,	,
&	&	&
rname	rname	rname
,	,	,
&	&	&
bname	bname	bname
,	,	,
&	&	&
pname	pname	pname
,	,	,
&	&	&
oname	onam	oname
)	)	)
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
open	open	open
/	/	/
check	check	check
the	the	the
input	input	input
and	and	and
output	output	output
files	file	file
x	x	x
*	*	*
x	x	x
*	*	*
we	we	we
open	open	open
and	and	and
truncate	truncat	truncate
the	the	the
output	output	output
file	file	file
first	first	first
,	,	,
in	in	in
case	case	case
it	it	it
is	is	is
the	the	the
same	same	same
x	x	x
*	*	*
as	as	a
one	one	one
of	of	of
the	the	the
input	input	input
files	file	file
.	.	.

x	x	x
*	*	*
/	/	/
x	x	x
output	output	output
=	=	=
open_output	open_output	open_output
(	(	(
oname	onam	oname
)	)	)
;	;	;
x	x	x
remark	remark	remark
=	=	=
open_remark	open_remark	open_remark
(	(	(
rname	rname	rname
)	)	)
;	;	;
x	x	x
build	build	build
=	=	=
open_build	open_build	open_build
(	(	(
bname	bname	bname
)	)	)
;	;	;
x	x	x
prog	prog	prog
=	=	=
open_program	open_program	open_program
(	(	(
pname	pname	pname
)	)	)
;	;	;
x	x	x
if	if	if
(	(	(
output	output	output
=	=	=
=	=	=
null	null	null
|	|	|
|	|	|
remark	remark	remark
=	=	=
=	=	=
null	null	null
|	|	|
|	|	|
build	build	build
=	=	=
=	=	=
null	null	null
|	|	|
|	|	|
prog	prog	prog
=	=	=
=	=	=
null	null	null
)	)	)
{	{	{
x	x	x
exit	exit	exit
(	(	(
1	1	1
)	)	)
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
output	output	output
each	each	each
section	section	section
x	x	x
*	*	*
/	/	/
x	x	x
output_entry	output_entri	output_entry
(	(	(
output	output	output
,	,	,
oname	onam	oname
)	)	)
;	;	;
x	x	x
output_remark	output_remark	output_remark
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
remark	remark	remark
,	,	,
rname	rname	rname
)	)	)
;	;	;
x	x	x
output_author	output_author	output_author
(	(	(
output	output	output
,	,	,
oname	onam	oname
)	)	)
;	;	;
x	x	x
output_info	output_info	output_info
(	(	(
output	output	output
,	,	,
oname	onam	oname
)	)	)
;	;	;
x	x	x
output_build	output_build	output_build
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
build	build	build
,	,	,
bname	bname	bname
)	)	)
;	;	;
x	x	x
output_program	output_program	output_program
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
prog	prog	prog
,	,	,
pname	pname	pname
)	)	)
;	;	;
x	x	x
output_end	output_end	output_end
(	(	(
output	output	output
,	,	,
oname	onam	oname
)	)	)
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
flush	flush	flush
the	the	the
output	output	output
x	x	x
*	*	*
/	/	/
x	x	x
if	if	if
(	(	(
fflush	fflush	fflush
(	(	(
output	output	output
)	)	)
=	=	=
=	=	=
eof	eof	eof
)	)	)
{	{	{
x	x	x
fprintf	fprintf	fprintf
(	(	(
stderr	stderr	stderr
,	,	,
"	"	"
%	%	%
s	s	s
:	:	:
flush	flush	flush
error	error	error
in	in	in
%	%	%
s	s	s
:	:	:
"	"	"
,	,	,
program	program	program
,	,	,
oname	onam	oname
)	)	)
;	;	;
x	x	x
perror	perror	perror
(	(	(
"	"	"
"	"	"
)	)	)
;	;	;
x	x	x
exit	exit	exit
(	(	(
2	2	2
)	)	)
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
final	final	final
words	word	word
x	x	x
*	*	*
/	/	/
x	x	x
printf	printf	printf
(	(	(
"	"	"
\	\	\
nyour	nyour	nyour
entry	entri	entry
can	can	can
be	be	be
found	found	found
in	in	in
%	%	%
s	s	s
.	.	.

you	you	you
should	should	should
check	check	check
this	this	this
file	file	file
\	\	\
n	n	n
"	"	"
,	,	,
x	x	x
oname	onam	oname
)	)	)
;	;	;
x	x	x
printf	printf	printf
(	(	(
"	"	"
correct	correct	correct
any	ani	any
problems	problem	problem
and	and	and
verify	verifi	verify
that	that	that
the	the	the
uudecode	uudecod	uudecode
utility	util	utility
will	will	will
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
printf	printf	printf
(	(	(
"	"	"
correctly	correct	correctly
decode	decod	decode
your	your	your
build	build	build
file	file	file
and	and	and
program	program	program
.	.	.
\	\	\
n	n	n
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
printf	printf	printf
(	(	(
"	"	"
this	this	this
program	program	program
has	has	ha
been	been	been
provided	provid	provided
as	as	a
a	a	a
guide	guid	guide
for	for	for
submitters	submitt	submitter
.	.	.

in	in	in
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
printf	printf	printf
(	(	(
"	"	"
cases	case	case
where	where	where
it	it	it
conflicts	conflict	conflict
with	with	with
the	the	the
rules	rule	rule
,	,	,
the	the	the
rules	rule	rule
shall	shall	shall
apply	appli	apply
.	.	.
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
printf	printf	printf
(	(	(
"	"	"
it	it	it
is	is	is
your	your	your
responsibility	respons	responsibility
to	to	to
ensure	ensur	ensure
that	that	that
your	your	your
entry	entri	entry
conforms	conform	conforms
to	to	to
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
printf	printf	printf
(	(	(
"	"	"
the	the	the
current	current	current
rules	rule	rule
.	.	.
\	\	\
n	n	n
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
printf	printf	printf
(	(	(
"	"	"
email	email	email
your	your	your
entries	entri	entry
to	to	to
:	:	:
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
printf	printf	printf
(	(	(
"	"	"
\	\	\
t	t	t
%	%	%
s	s	s
\	\	\
n	n	n
"	"	"
,	,	,
entry_addr1	entry_addr1	entry_addr1
)	)	)
;	;	;
x	x	x
printf	printf	printf
(	(	(
"	"	"
\	\	\
t	t	t
%	%	%
s	s	s
\	\	\
n	n	n
\	\	\
n	n	n
"	"	"
,	,	,
entry_addr2	entry_addr2	entry_addr2
)	)	)
;	;	;
x	x	x
printf	printf	printf
(	(	(
"	"	"
please	pleas	please
use	use	use
the	the	the
following	follow	following
subject	subject	subject
when	when	when
you	you	you
email	email	email
your	your	your
entry	entri	entry
:	:	:
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
printf	printf	printf
(	(	(
"	"	"
\	\	\
tioccc	tioccc	tioccc
entry	entri	entry
\	\	\
n	n	n
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
/	/	/
*	*	*
all	all	all
done	done	done
*	*	*
/	/	/
x	x	x
exit	exit	exit
(	(	(
0	0	0
)	)	)
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
parse_args	parse_arg	parse_args
-	-	-
parse	pars	parse
the	the	the
command	command	command
line	line	line
args	arg	args
x	x	x
*	*	*
x	x	x
*	*	*
given	given	given
the	the	the
command	command	command
line	line	line
args	arg	args
,	,	,
this	this	this
function	function	function
parses	pars	parses
them	them	them
and	and	and
sets	set	set
the	the	the
x	x	x
*	*	*
required	requir	required
name	name	name
flags	flag	flag
.	.	.

this	this	this
function	function	function
will	will	will
return	return	return
only	onli	only
if	if	if
the	the	the
command	command	command
x	x	x
*	*	*
line	line	line
syntax	syntax	syntax
is	is	is
correct	correct	correct
.	.	.

x	x	x
*	*	*
/	/	/
xvoid	xvoid	xvoid
xparse_args	xparse_arg	xparse_args
(	(	(
argc	argc	argc
,	,	,
argv	argv	argv
,	,	,
rname	rname	rname
,	,	,
bname	bname	bname
,	,	,
pname	pname	pname
,	,	,
oname	onam	oname
)	)	)
x	x	x
int	int	int
argc	argc	argc
;	;	;
/	/	/
*	*	*
arg	arg	arg
count	count	count
*	*	*
/	/	/
x	x	x
char	char	char
*	*	*
*	*	*
argv	argv	argv
;	;	;
/	/	/
*	*	*
the	the	the
args	arg	args
*	*	*
/	/	/
x	x	x
char	char	char
*	*	*
*	*	*
rname	rname	rname
;	;	;
/	/	/
*	*	*
file	file	file
with	with	with
remarks	remark	remark
about	about	about
the	the	the
entry	entri	entry
*	*	*
/	/	/
x	x	x
char	char	char
*	*	*
*	*	*
bname	bname	bname
;	;	;
/	/	/
*	*	*
file	file	file
containing	contain	containing
how	how	how
prog	prog	prog
.	.	.
c	c	c
should	should	should
be	be	be
built	built	built
*	*	*
/	/	/
x	x	x
char	char	char
*	*	*
*	*	*
pname	pname	pname
;	;	;
/	/	/
*	*	*
the	the	the
obfuscated	obfusc	obfuscated
program	program	program
source	sourc	source
file	file	file
*	*	*
/	/	/
x	x	x
char	char	char
*	*	*
*	*	*
oname	onam	oname
;	;	;
/	/	/
*	*	*
ioccc	ioccc	ioccc
entry	entri	entry
output	output	output
file	file	file
*	*	*
/	/	/
x	x	x
{	{	{
x	x	x
char	char	char
*	*	*
optarg	optarg	optarg
;	;	;
/	/	/
*	*	*
-	-	-
flag	flag	flag
option	option	option
operand	operand	operand
*	*	*
/	/	/
x	x	x
int	int	int
flagname	flagnam	flagname
;	;	;
/	/	/
*	*	*
the	the	the
name	name	name
of	of	of
the	the	the
-	-	-
flag	flag	flag
*	*	*
/	/	/
x	x	x
int	int	int
i	i	i
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
not	not	not
everyone	everyon	everyone
has	has	ha
getopt	getopt	getopt
,	,	,
so	so	so
we	we	we
must	must	must
parse	pars	parse
args	arg	args
by	by	by
hand	hand	hand
.	.	.

x	x	x
*	*	*
/	/	/
x	x	x
program	program	program
=	=	=
argv	argv	argv
[	[	[
0	0	0
]	]	]
;	;	;
x	x	x
for	for	for
(	(	(
i	i	i
=	=	=
1	1	1
;	;	;
i	i	i
<	<	<
argc	argc	argc
;	;	;
+	+	+
+	+	+
i	i	i
)	)	)
{	{	{
x	x	x
x	x	x
/	/	/
*	*	*
determine	determin	determine
the	the	the
flagname	flagnam	flagname
*	*	*
/	/	/
x	x	x
if	if	if
(	(	(
argv	argv	argv
[	[	[
i	i	i
]	]	]
[	[	[
0	0	0
]	]	]
!	!	!
=	=	=
'	'	'
-	-	-
'	'	'
)	)	)
{	{	{
x	x	x
usage	usag	usage
(	(	(
1	1	1
)	)	)
;	;	;
x	x	x
/	/	/
*	*	*
notreached	notreach	notreached
*	*	*
/	/	/
x	x	x
}	}	}
x	x	x
flagname	flagnam	flagname
=	=	=
(	(	(
int	int	int
)	)	)
argv	argv	argv
[	[	[
i	i	i
]	]	]
[	[	[
1	1	1
]	]	]
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
determine	determin	determine
the	the	the
flag	flag	flag
'	'	'
s	s	s
operand	operand	operand
*	*	*
/	/	/
x	x	x
if	if	if
(	(	(
flagname	flagnam	flagname
!	!	!
=	=	=
'	'	'
\	\	\
0	0	0
'	'	'
&	&	&
&	&	&
argv	argv	argv
[	[	[
i	i	i
]	]	]
[	[	[
2	2	2
]	]	]
!	!	!
=	=	=
'	'	'
\	\	\
0	0	0
'	'	'
)	)	)
{	{	{
x	x	x
optarg	optarg	optarg
=	=	=
&	&	&
argv	argv	argv
[	[	[
i	i	i
]	]	]
[	[	[
2	2	2
]	]	]
;	;	;
x	x	x
}	}	}
else	els	else
{	{	{
x	x	x
if	if	if
(	(	(
i	i	i
+	+	+
1	1	1
>	>	>
=	=	=
argc	argc	argc
)	)	)
{	{	{
x	x	x
usage	usag	usage
(	(	(
2	2	2
)	)	)
;	;	;
x	x	x
/	/	/
*	*	*
notreached	notreach	notreached
*	*	*
/	/	/
x	x	x
}	}	}
else	els	else
{	{	{
x	x	x
optarg	optarg	optarg
=	=	=
argv	argv	argv
[	[	[
+	+	+
+	+	+
i	i	i
]	]	]
;	;	;
x	x	x
}	}	}
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
save	save	save
the	the	the
flag	flag	flag
'	'	'
s	s	s
operand	operand	operand
in	in	in
the	the	the
correct	correct	correct
global	global	global
variable	variabl	variable
*	*	*
/	/	/
x	x	x
switch	switch	switch
(	(	(
flagname	flagnam	flagname
)	)	)
{	{	{
x	x	x
case	case	case
'	'	'
r	r	r
'	'	'
:	:	:
x	x	x
*	*	*
rname	rname	rname
=	=	=
optarg	optarg	optarg
;	;	;
x	x	x
break	break	break
;	;	;
x	x	x
case	case	case
'	'	'
b	b	b
'	'	'
:	:	:
x	x	x
*	*	*
bname	bname	bname
=	=	=
optarg	optarg	optarg
;	;	;
x	x	x
break	break	break
;	;	;
x	x	x
case	case	case
'	'	'
p	p	p
'	'	'
:	:	:
x	x	x
*	*	*
pname	pname	pname
=	=	=
optarg	optarg	optarg
;	;	;
x	x	x
break	break	break
;	;	;
x	x	x
case	case	case
'	'	'
o	o	o
'	'	'
:	:	:
x	x	x
*	*	*
oname	onam	oname
=	=	=
optarg	optarg	optarg
;	;	;
x	x	x
break	break	break
;	;	;
x	x	x
default	default	default
:	:	:
x	x	x
usage	usag	usage
(	(	(
3	3	3
)	)	)
;	;	;
x	x	x
/	/	/
*	*	*
notreached	notreach	notreached
*	*	*
/	/	/
x	x	x
}	}	}
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
verify	verifi	verify
that	that	that
we	we	we
have	have	have
all	all	all
of	of	of
the	the	the
required	requir	required
flags	flag	flag
x	x	x
*	*	*
/	/	/
x	x	x
if	if	if
(	(	(
*	*	*
rname	rname	rname
=	=	=
=	=	=
null	null	null
|	|	|
|	|	|
*	*	*
bname	bname	bname
=	=	=
=	=	=
null	null	null
|	|	|
|	|	|
*	*	*
pname	pname	pname
=	=	=
=	=	=
null	null	null
|	|	|
|	|	|
*	*	*
oname	onam	oname
=	=	=
=	=	=
null	null	null
)	)	)
{	{	{
x	x	x
usage	usag	usage
(	(	(
4	4	4
)	)	)
;	;	;
x	x	x
/	/	/
*	*	*
notreached	notreach	notreached
*	*	*
/	/	/
x	x	x
}	}	}
x	x	x
return	return	return
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
usage	usag	usage
-	-	-
print	print	print
a	a	a
usage	usag	usage
message	messag	message
and	and	and
exit	exit	exit
x	x	x
*	*	*
x	x	x
*	*	*
this	this	this
function	function	function
does	doe	doe
not	not	not
return	return	return
.	.	.

x	x	x
*	*	*
/	/	/
xvoid	xvoid	xvoid
xusage	xusag	xusage
(	(	(
exitval	exitv	exitval
)	)	)
x	x	x
int	int	int
exitval	exitv	exitval
;	;	;
/	/	/
*	*	*
exit	exit	exit
with	with	with
this	this	this
value	valu	value
*	*	*
/	/	/
x	x	x
{	{	{
x	x	x
fprintf	fprintf	fprintf
(	(	(
stderr	stderr	stderr
,	,	,
x	x	x
"	"	"
usage	usag	usage
:	:	:
%	%	%
s	s	s
-	-	-
r	r	r
remarks	remark	remark
-	-	-
b	b	b
build	build	build
-	-	-
p	p	p
prog	prog	prog
.	.	.
c	c	c
-	-	-
o	o	o
ioccc	ioccc	ioccc
.	.	.
entry	entri	entry
\	\	\
n	n	n
\	\	\
n	n	n
"	"	"
,	,	,
program	program	program
)	)	)
;	;	;
x	x	x
fprintf	fprintf	fprintf
(	(	(
stderr	stderr	stderr
,	,	,
"	"	"
\	\	\
t	t	t
-	-	-
r	r	r
remarks	remark	remark
\	\	\
tfile	tfile	tfile
with	with	with
remarks	remark	remark
about	about	about
the	the	the
entry	entri	entry
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
fprintf	fprintf	fprintf
(	(	(
stderr	stderr	stderr
,	,	,
"	"	"
\	\	\
t	t	t
-	-	-
b	b	b
build	build	build
\	\	\
tfile	tfile	tfile
containing	contain	containing
how	how	how
prog	prog	prog
.	.	.
c	c	c
should	should	should
be	be	be
built	built	built
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
fprintf	fprintf	fprintf
(	(	(
stderr	stderr	stderr
,	,	,
"	"	"
\	\	\
t	t	t
-	-	-
p	p	p
prog	prog	prog
.	.	.
c	c	c
\	\	\
tthe	tthe	tthe
obfuscated	obfusc	obfuscated
program	program	program
source	sourc	source
file	file	file
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
fprintf	fprintf	fprintf
(	(	(
stderr	stderr	stderr
,	,	,
"	"	"
\	\	\
t	t	t
-	-	-
o	o	o
ioccc	ioccc	ioccc
.	.	.
entry	entri	entry
\	\	\
tioccc	tioccc	tioccc
entry	entri	entry
output	output	output
file	file	file
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
exit	exit	exit
(	(	(
exitval	exitv	exitval
)	)	)
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
open_remark	open_remark	open_remark
-	-	-
open	open	open
/	/	/
check	check	check
the	the	the
remark	remark	remark
file	file	file
x	x	x
*	*	*
x	x	x
*	*	*
the	the	the
remark	remark	remark
file	file	file
should	should	should
be	be	be
indented	indent	indented
by	by	by
4	4	4
spaces	space	space
,	,	,
and	and	and
should	should	should
not	not	not
extend	extend	extend
x	x	x
*	*	*
beyond	beyond	beyond
column	column	column
max_col	max_col	max_col
.	.	.

these	these	these
are	are	are
not	not	not
requirements	requir	requirement
,	,	,
so	so	so
we	we	we
only	onli	only
warn	warn	warn
.	.	.

x	x	x
*	*	*
x	x	x
*	*	*
this	this	this
function	function	function
returns	return	return
null	null	null
on	on	on
i	i	i
/	/	/
o	o	o
or	or	or
format	format	format
error	error	error
.	.	.

x	x	x
*	*	*
/	/	/
xfile	xfile	xfile
*	*	*
xopen_remark	xopen_remark	xopen_remark
(	(	(
filename	filenam	filename
)	)	)
x	x	x
char	char	char
*	*	*
filename	filenam	filename
;	;	;
x	x	x
{	{	{
x	x	x
file	file	file
*	*	*
stream	stream	stream
;	;	;
/	/	/
*	*	*
the	the	the
opened	open	opened
file	file	file
stream	stream	stream
*	*	*
/	/	/
x	x	x
char	char	char
buf	buf	buf
[	[	[
bufsiz	bufsiz	bufsiz
+	+	+
1	1	1
]	]	]
;	;	;
/	/	/
*	*	*
input	input	input
buffer	buffer	buffer
*	*	*
/	/	/
x	x	x
int	int	int
toolong	toolong	toolong
=	=	=
0	0	0
;	;	;
/	/	/
*	*	*
number	number	number
of	of	of
lines	line	line
that	that	that
are	are	are
too	too	too
long	long	long
*	*	*
/	/	/
x	x	x
int	int	int
non_indent	non_ind	non_indent
=	=	=
0	0	0
;	;	;
/	/	/
*	*	*
number	number	number
of	of	of
lines	line	line
not	not	not
indented	indent	indented
by	by	by
4	4	4
spaces	space	space
*	*	*
/	/	/
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
open	open	open
the	the	the
remark	remark	remark
input	input	input
file	file	file
x	x	x
*	*	*
/	/	/
x	x	x
stream	stream	stream
=	=	=
fopen	fopen	fopen
(	(	(
filename	filenam	filename
,	,	,
"	"	"
r	r	r
"	"	"
)	)	)
;	;	;
x	x	x
if	if	if
(	(	(
stream	stream	stream
=	=	=
=	=	=
null	null	null
)	)	)
{	{	{
x	x	x
fprintf	fprintf	fprintf
(	(	(
stderr	stderr	stderr
,	,	,
"	"	"
%	%	%
s	s	s
:	:	:
cannot	cannot	cannot
open	open	open
remark	remark	remark
file	file	file
:	:	:
%	%	%
s	s	s
:	:	:
"	"	"
,	,	,
x	x	x
program	program	program
,	,	,
filename	filenam	filename
)	)	)
;	;	;
x	x	x
perror	perror	perror
(	(	(
"	"	"
"	"	"
)	)	)
;	;	;
x	x	x
return	return	return
(	(	(
null	null	null
)	)	)
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
look	look	look
at	at	at
each	each	each
line	line	line
x	x	x
*	*	*
/	/	/
x	x	x
while	while	while
(	(	(
fgets	fget	fgets
(	(	(
buf	buf	buf
,	,	,
bufsiz	bufsiz	bufsiz
,	,	,
stream	stream	stream
)	)	)
!	!	!
=	=	=
null	null	null
)	)	)
{	{	{
x	x	x
x	x	x
/	/	/
*	*	*
count	count	count
lines	line	line
that	that	that
do	do	do
not	not	not
start	start	start
with	with	with
4	4	4
spaces	space	space
*	*	*
/	/	/
x	x	x
if	if	if
(	(	(
buf	buf	buf
[	[	[
0	0	0
]	]	]
!	!	!
=	=	=
'	'	'
\	\	\
n	n	n
'	'	'
&	&	&
&	&	&
strncmp	strncmp	strncmp
(	(	(
buf	buf	buf
,	,	,
"	"	"
"	"	"
,	,	,
4	4	4
)	)	)
!	!	!
=	=	=
0	0	0
)	)	)
{	{	{
x	x	x
+	+	+
+	+	+
non_indent	non_ind	non_indent
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
count	count	count
long	long	long
lines	line	line
*	*	*
/	/	/
x	x	x
if	if	if
(	(	(
col_len	col_len	col_len
(	(	(
buf	buf	buf
)	)	)
>	>	>
max_col	max_col	max_col
)	)	)
{	{	{
x	x	x
/	/	/
*	*	*
found	found	found
a	a	a
line	line	line
that	that	that
is	is	is
too	too	too
long	long	long
*	*	*
/	/	/
x	x	x
+	+	+
+	+	+
toolong	toolong	toolong
;	;	;
x	x	x
}	}	}
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
watch	watch	watch
for	for	for
i	i	i
/	/	/
o	o	o
errors	error	error
*	*	*
/	/	/
x	x	x
check_io	check_io	check_io
(	(	(
stream	stream	stream
,	,	,
filename	filenam	filename
,	,	,
eof_ok	eof_ok	eof_ok
)	)	)
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
note	note	note
long	long	long
lines	line	line
if	if	if
needed	need	needed
*	*	*
/	/	/
x	x	x
if	if	if
(	(	(
toolong	toolong	toolong
>	>	>
0	0	0
)	)	)
{	{	{
x	x	x
fprintf	fprintf	fprintf
(	(	(
stderr	stderr	stderr
,	,	,
x	x	x
"	"	"
%	%	%
s	s	s
:	:	:
warning	warn	warning
:	:	:
%	%	%
d	d	d
line	line	line
(	(	(
s	s	s
)	)	)
from	from	from
%	%	%
s	s	s
extend	extend	extend
beyond	beyond	beyond
the	the	the
80th	80th	80th
column	column	column
\	\	\
n	n	n
"	"	"
,	,	,
x	x	x
program	program	program
,	,	,
toolong	toolong	toolong
,	,	,
filename	filenam	filename
)	)	)
;	;	;
x	x	x
fprintf	fprintf	fprintf
(	(	(
stderr	stderr	stderr
,	,	,
x	x	x
"	"	"
%	%	%
s	s	s
:	:	:
this	this	this
is	is	is
ok	ok	ok
,	,	,
but	but	but
it	it	it
would	would	would
be	be	be
nice	nice	nice
to	to	to
avoid	avoid	avoid
\	\	\
n	n	n
\	\	\
n	n	n
"	"	"
,	,	,
x	x	x
program	program	program
)	)	)
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
note	note	note
non	non	non
-	-	-
indented	indent	indented
lines	line	line
,	,	,
if	if	if
needed	need	needed
*	*	*
/	/	/
x	x	x
if	if	if
(	(	(
non_indent	non_ind	non_indent
>	>	>
0	0	0
)	)	)
{	{	{
x	x	x
fprintf	fprintf	fprintf
(	(	(
stderr	stderr	stderr
,	,	,
x	x	x
"	"	"
%	%	%
s	s	s
:	:	:
warning	warn	warning
:	:	:
%	%	%
d	d	d
line	line	line
(	(	(
s	s	s
)	)	)
from	from	from
%	%	%
s	s	s
are	are	are
not	not	not
indented	indent	indented
by	by	by
4	4	4
spaces	space	space
\	\	\
n	n	n
"	"	"
,	,	,
x	x	x
program	program	program
,	,	,
non_indent	non_ind	non_indent
,	,	,
filename	filenam	filename
)	)	)
;	;	;
x	x	x
fprintf	fprintf	fprintf
(	(	(
stderr	stderr	stderr
,	,	,
x	x	x
"	"	"
%	%	%
s	s	s
:	:	:
this	this	this
is	is	is
ok	ok	ok
,	,	,
but	but	but
it	it	it
would	would	would
be	be	be
nice	nice	nice
to	to	to
avoid	avoid	avoid
\	\	\
n	n	n
\	\	\
n	n	n
"	"	"
,	,	,
x	x	x
program	program	program
)	)	)
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
return	return	return
the	the	the
open	open	open
file	file	file
*	*	*
/	/	/
x	x	x
rewind	rewind	rewind
(	(	(
stream	stream	stream
)	)	)
;	;	;
x	x	x
return	return	return
(	(	(
stream	stream	stream
)	)	)
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
open_build	open_build	open_build
-	-	-
open	open	open
/	/	/
check	check	check
the	the	the
build	build	build
file	file	file
x	x	x
*	*	*
x	x	x
*	*	*
the	the	the
how	how	how
to	to	to
build	build	build
file	file	file
must	must	must
not	not	not
be	be	be
longer	longer	longer
than	than	than
max_build_size	max_build_s	max_build_size
bytes	byte	byte
.	.	.

x	x	x
*	*	*
x	x	x
*	*	*
this	this	this
function	function	function
returns	return	return
null	null	null
on	on	on
i	i	i
/	/	/
o	o	o
or	or	or
size	size	size
error	error	error
.	.	.

x	x	x
*	*	*
/	/	/
xfile	xfile	xfile
*	*	*
xopen_build	xopen_build	xopen_build
(	(	(
filename	filenam	filename
)	)	)
x	x	x
char	char	char
*	*	*
filename	filenam	filename
;	;	;
x	x	x
{	{	{
x	x	x
file	file	file
*	*	*
stream	stream	stream
;	;	;
/	/	/
*	*	*
the	the	the
opened	open	opened
file	file	file
stream	stream	stream
*	*	*
/	/	/
x	x	x
struct	struct	struct
stat	stat	stat
statbuf	statbuf	statbuf
;	;	;
/	/	/
*	*	*
the	the	the
status	status	status
of	of	of
the	the	the
open	open	open
file	file	file
*	*	*
/	/	/
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
open	open	open
the	the	the
how	how	how
to	to	to
build	build	build
input	input	input
file	file	file
x	x	x
*	*	*
/	/	/
x	x	x
stream	stream	stream
=	=	=
fopen	fopen	fopen
(	(	(
filename	filenam	filename
,	,	,
"	"	"
r	r	r
"	"	"
)	)	)
;	;	;
x	x	x
if	if	if
(	(	(
stream	stream	stream
=	=	=
=	=	=
null	null	null
)	)	)
{	{	{
x	x	x
fprintf	fprintf	fprintf
(	(	(
stderr	stderr	stderr
,	,	,
"	"	"
%	%	%
s	s	s
:	:	:
cannot	cannot	cannot
open	open	open
how	how	how
to	to	to
build	build	build
file	file	file
:	:	:
%	%	%
s	s	s
:	:	:
"	"	"
,	,	,
x	x	x
program	program	program
,	,	,
filename	filenam	filename
)	)	)
;	;	;
x	x	x
perror	perror	perror
(	(	(
"	"	"
"	"	"
)	)	)
;	;	;
x	x	x
return	return	return
(	(	(
null	null	null
)	)	)
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
determine	determin	determine
the	the	the
size	size	size
of	of	of
the	the	the
file	file	file
x	x	x
*	*	*
/	/	/
x	x	x
if	if	if
(	(	(
fstat	fstat	fstat
(	(	(
fileno	fileno	fileno
(	(	(
stream	stream	stream
)	)	)
,	,	,
&	&	&
statbuf	statbuf	statbuf
)	)	)
<	<	<
0	0	0
)	)	)
{	{	{
x	x	x
fprintf	fprintf	fprintf
(	(	(
stderr	stderr	stderr
,	,	,
"	"	"
%	%	%
s	s	s
:	:	:
cannot	cannot	cannot
stat	stat	stat
how	how	how
to	to	to
build	build	build
file	file	file
:	:	:
%	%	%
s	s	s
:	:	:
"	"	"
,	,	,
x	x	x
program	program	program
,	,	,
filename	filenam	filename
)	)	)
;	;	;
x	x	x
perror	perror	perror
(	(	(
"	"	"
"	"	"
)	)	)
;	;	;
x	x	x
return	return	return
(	(	(
null	null	null
)	)	)
;	;	;
x	x	x
}	}	}
x	x	x
if	if	if
(	(	(
statbuf	statbuf	statbuf
.	.	.
st_size	st_size	st_size
>	>	>
max_build_size	max_build_s	max_build_size
)	)	)
{	{	{
x	x	x
fprintf	fprintf	fprintf
(	(	(
stderr	stderr	stderr
,	,	,
x	x	x
"	"	"
%	%	%
s	s	s
:	:	:
fatal	fatal	fatal
:	:	:
the	the	the
how	how	how
to	to	to
build	build	build
file	file	file
:	:	:
%	%	%
s	s	s
,	,	,
is	is	is
%	%	%
d	d	d
bytes	byte	byte
long	long	long
\	\	\
n	n	n
"	"	"
,	,	,
x	x	x
program	program	program
,	,	,
filename	filenam	filename
,	,	,
statbuf	statbuf	statbuf
.	.	.
st_size	st_size	st_size
)	)	)
;	;	;
x	x	x
fprintf	fprintf	fprintf
(	(	(
stderr	stderr	stderr
,	,	,
x	x	x
"	"	"
%	%	%
s	s	s
:	:	:
it	it	it
may	may	may
not	not	not
be	be	be
longer	longer	longer
than	than	than
%	%	%
d	d	d
bytes	byte	byte
\	\	\
n	n	n
"	"	"
,	,	,
x	x	x
program	program	program
,	,	,
max_build_size	max_build_s	max_build_size
)	)	)
;	;	;
x	x	x
return	return	return
(	(	(
null	null	null
)	)	)
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
return	return	return
the	the	the
open	open	open
file	file	file
*	*	*
/	/	/
x	x	x
return	return	return
(	(	(
stream	stream	stream
)	)	)
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
open_program	open_program	open_program
-	-	-
open	open	open
/	/	/
check	check	check
the	the	the
program	program	program
source	sourc	source
file	file	file
x	x	x
*	*	*
x	x	x
*	*	*
the	the	the
program	program	program
source	sourc	source
file	file	file
must	must	must
be	be	be
<	<	<
=	=	=
3217	3217	3217
bytes	byte	byte
.	.	.

the	the	the
number	number	number
of	of	of
x	x	x
*	*	*
non	non	non
-	-	-
whitespace	whitespac	whitespace
and	and	and
}	}	}
{	{	{
;	;	;
chars	char	char
not	not	not
followed	follow	followed
by	by	by
whitespace	whitespac	whitespace
must	must	must
x	x	x
*	*	*
be	be	be
<	<	<
=	=	=
1536	1536	1536
bytes	byte	byte
.	.	.

x	x	x
*	*	*
x	x	x
*	*	*
this	this	this
function	function	function
returns	return	return
null	null	null
on	on	on
i	i	i
/	/	/
o	o	o
or	or	or
size	size	size
error	error	error
.	.	.

x	x	x
*	*	*
/	/	/
xfile	xfile	xfile
*	*	*
xopen_program	xopen_program	xopen_program
(	(	(
filename	filenam	filename
)	)	)
x	x	x
char	char	char
*	*	*
filename	filenam	filename
;	;	;
x	x	x
{	{	{
x	x	x
file	file	file
*	*	*
stream	stream	stream
;	;	;
/	/	/
*	*	*
the	the	the
opened	open	opened
file	file	file
stream	stream	stream
*	*	*
/	/	/
x	x	x
struct	struct	struct
stat	stat	stat
statbuf	statbuf	statbuf
;	;	;
/	/	/
*	*	*
the	the	the
status	status	status
of	of	of
the	the	the
open	open	open
file	file	file
*	*	*
/	/	/
x	x	x
int	int	int
count	count	count
;	;	;
/	/	/
*	*	*
special	special	special
count	count	count
size	size	size
*	*	*
/	/	/
x	x	x
int	int	int
c	c	c
;	;	;
/	/	/
*	*	*
the	the	the
character	charact	character
read	read	read
*	*	*
/	/	/
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
open	open	open
the	the	the
program	program	program
source	sourc	source
input	input	input
file	file	file
x	x	x
*	*	*
/	/	/
x	x	x
stream	stream	stream
=	=	=
fopen	fopen	fopen
(	(	(
filename	filenam	filename
,	,	,
"	"	"
r	r	r
"	"	"
)	)	)
;	;	;
x	x	x
if	if	if
(	(	(
stream	stream	stream
=	=	=
=	=	=
null	null	null
)	)	)
{	{	{
x	x	x
fprintf	fprintf	fprintf
(	(	(
stderr	stderr	stderr
,	,	,
"	"	"
%	%	%
s	s	s
:	:	:
cannot	cannot	cannot
open	open	open
program	program	program
source	sourc	source
file	file	file
:	:	:
%	%	%
s	s	s
:	:	:
"	"	"
,	,	,
x	x	x
program	program	program
,	,	,
filename	filenam	filename
)	)	)
;	;	;
x	x	x
perror	perror	perror
(	(	(
"	"	"
"	"	"
)	)	)
;	;	;
x	x	x
exit	exit	exit
(	(	(
7	7	7
)	)	)
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
determine	determin	determine
the	the	the
size	size	size
of	of	of
the	the	the
file	file	file
x	x	x
*	*	*
/	/	/
x	x	x
if	if	if
(	(	(
fstat	fstat	fstat
(	(	(
fileno	fileno	fileno
(	(	(
stream	stream	stream
)	)	)
,	,	,
&	&	&
statbuf	statbuf	statbuf
)	)	)
<	<	<
0	0	0
)	)	)
{	{	{
x	x	x
fprintf	fprintf	fprintf
(	(	(
stderr	stderr	stderr
,	,	,
"	"	"
%	%	%
s	s	s
:	:	:
cannot	cannot	cannot
stat	stat	stat
program	program	program
source	sourc	source
file	file	file
:	:	:
%	%	%
s	s	s
:	:	:
"	"	"
,	,	,
x	x	x
program	program	program
,	,	,
filename	filenam	filename
)	)	)
;	;	;
x	x	x
perror	perror	perror
(	(	(
"	"	"
"	"	"
)	)	)
;	;	;
x	x	x
return	return	return
(	(	(
null	null	null
)	)	)
;	;	;
x	x	x
}	}	}
x	x	x
if	if	if
(	(	(
statbuf	statbuf	statbuf
.	.	.
st_size	st_size	st_size
>	>	>
max_program_size	max_program_s	max_program_size
)	)	)
{	{	{
x	x	x
fprintf	fprintf	fprintf
(	(	(
stderr	stderr	stderr
,	,	,
x	x	x
"	"	"
%	%	%
s	s	s
:	:	:
fatal	fatal	fatal
:	:	:
the	the	the
program	program	program
source	sourc	source
file	file	file
:	:	:
%	%	%
s	s	s
,	,	,
is	is	is
%	%	%
d	d	d
bytes	byte	byte
long	long	long
\	\	\
n	n	n
"	"	"
,	,	,
x	x	x
program	program	program
,	,	,
filename	filenam	filename
,	,	,
statbuf	statbuf	statbuf
.	.	.
st_size	st_size	st_size
)	)	)
;	;	;
x	x	x
fprintf	fprintf	fprintf
(	(	(
stderr	stderr	stderr
,	,	,
x	x	x
"	"	"
%	%	%
s	s	s
:	:	:
it	it	it
may	may	may
not	not	not
be	be	be
longer	longer	longer
than	than	than
%	%	%
d	d	d
bytes	byte	byte
\	\	\
n	n	n
"	"	"
,	,	,
x	x	x
program	program	program
,	,	,
max_program_size	max_program_s	max_program_size
)	)	)
;	;	;
x	x	x
return	return	return
(	(	(
null	null	null
)	)	)
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
count	count	count
the	the	the
non	non	non
-	-	-
whitespace	whitespac	whitespace
,	,	,
non	non	non
{	{	{
}	}	}
;	;	;
followed	follow	followed
by	by	by
whitespace	whitespac	whitespace
chars	char	char
x	x	x
*	*	*
/	/	/
x	x	x
count	count	count
=	=	=
0	0	0
;	;	;
x	x	x
c	c	c
=	=	=
0	0	0
;	;	;
x	x	x
while	while	while
(	(	(
(	(	(
c	c	c
=	=	=
fgetc	fgetc	fgetc
(	(	(
stream	stream	stream
)	)	)
)	)	)
!	!	!
=	=	=
eof	eof	eof
)	)	)
{	{	{
x	x	x
/	/	/
*	*	*
look	look	look
at	at	at
non	non	non
-	-	-
whitespace	whitespac	whitespace
*	*	*
/	/	/
x	x	x
if	if	if
(	(	(
!	!	!
isascii	isascii	isascii
(	(	(
c	c	c
)	)	)
|	|	|
|	|	|
!	!	!
isspace	isspac	isspace
(	(	(
c	c	c
)	)	)
)	)	)
{	{	{
x	x	x
switch	switch	switch
(	(	(
c	c	c
)	)	)
{	{	{
x	x	x
case	case	case
'	'	'
{	{	{
'	'	'
:	:	:
/	/	/
*	*	*
count	count	count
if	if	if
not	not	not
followed	follow	followed
by	by	by
eof	eof	eof
or	or	or
whitespace	whitespac	whitespace
*	*	*
/	/	/
x	x	x
case	case	case
'	'	'
}	}	}
'	'	'
:	:	:
x	x	x
case	case	case
'	'	'
;	;	;
'	'	'
:	:	:
x	x	x
/	/	/
*	*	*
peek	peek	peek
at	at	at
next	next	next
char	char	char
*	*	*
/	/	/
x	x	x
c	c	c
=	=	=
fgetc	fgetc	fgetc
(	(	(
stream	stream	stream
)	)	)
;	;	;
x	x	x
if	if	if
(	(	(
c	c	c
!	!	!
=	=	=
eof	eof	eof
&	&	&
&	&	&
isascii	isascii	isascii
(	(	(
c	c	c
)	)	)
&	&	&
&	&	&
!	!	!
isspace	isspac	isspace
(	(	(
c	c	c
)	)	)
)	)	)
{	{	{
x	x	x
/	/	/
*	*	*
not	not	not
followed	follow	followed
by	by	by
whitespace	whitespac	whitespace
or	or	or
eof	eof	eof
,	,	,
count	count	count
it	it	it
*	*	*
/	/	/
x	x	x
ungetc	ungetc	ungetc
(	(	(
c	c	c
,	,	,
stream	stream	stream
)	)	)
;	;	;
x	x	x
+	+	+
+	+	+
count	count	count
;	;	;
x	x	x
}	}	}
x	x	x
break	break	break
;	;	;
x	x	x
default	default	default
:	:	:
x	x	x
+	+	+
+	+	+
count	count	count
;	;	;
x	x	x
break	break	break
;	;	;
x	x	x
}	}	}
x	x	x
}	}	}
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
watch	watch	watch
for	for	for
i	i	i
/	/	/
o	o	o
errors	error	error
*	*	*
/	/	/
x	x	x
check_io	check_io	check_io
(	(	(
stream	stream	stream
,	,	,
filename	filenam	filename
,	,	,
eof_ok	eof_ok	eof_ok
)	)	)
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
look	look	look
at	at	at
the	the	the
special	special	special
size	size	size
*	*	*
/	/	/
x	x	x
if	if	if
(	(	(
count	count	count
>	>	>
max_program_size2	max_program_size2	max_program_size2
)	)	)
{	{	{
x	x	x
fprintf	fprintf	fprintf
(	(	(
stderr	stderr	stderr
,	,	,
x	x	x
"	"	"
%	%	%
s	s	s
:	:	:
fatal	fatal	fatal
:	:	:
the	the	the
number	number	number
of	of	of
bytes	byte	byte
that	that	that
are	are	are
non	non	non
-	-	-
whitespace	whitespac	whitespace
,	,	,
and	and	and
\	\	\
n	n	n
"	"	"
,	,	,
x	x	x
program	program	program
)	)	)
;	;	;
x	x	x
fprintf	fprintf	fprintf
(	(	(
stderr	stderr	stderr
,	,	,
x	x	x
"	"	"
%	%	%
s	s	s
:	:	:
that	that	that
are	are	are
not	not	not
'	'	'
{	{	{
'	'	'
,	,	,
'	'	'
}	}	}
'	'	'
,	,	,
'	'	'
;	;	;
'	'	'
followed	follow	followed
by	by	by
whitespace	whitespac	whitespace
\	\	\
n	n	n
"	"	"
,	,	,
x	x	x
program	program	program
)	)	)
;	;	;
x	x	x
fprintf	fprintf	fprintf
(	(	(
stderr	stderr	stderr
,	,	,
x	x	x
"	"	"
%	%	%
s	s	s
:	:	:
or	or	or
eof	eof	eof
must	must	must
be	be	be
<	<	<
=	=	=
%	%	%
d	d	d
bytes	byte	byte
\	\	\
n	n	n
"	"	"
,	,	,
x	x	x
program	program	program
,	,	,
max_program_size2	max_program_size2	max_program_size2
)	)	)
;	;	;
x	x	x
fprintf	fprintf	fprintf
(	(	(
stderr	stderr	stderr
,	,	,
x	x	x
"	"	"
%	%	%
s	s	s
:	:	:
in	in	in
%	%	%
s	s	s
,	,	,
%	%	%
d	d	d
bytes	byte	byte
were	were	were
found	found	found
\	\	\
n	n	n
"	"	"
,	,	,
x	x	x
program	program	program
,	,	,
filename	filenam	filename
,	,	,
count	count	count
)	)	)
;	;	;
x	x	x
return	return	return
(	(	(
null	null	null
)	)	)
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
return	return	return
the	the	the
open	open	open
file	file	file
*	*	*
/	/	/
x	x	x
rewind	rewind	rewind
(	(	(
stream	stream	stream
)	)	)
;	;	;
x	x	x
return	return	return
(	(	(
stream	stream	stream
)	)	)
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
open_output	open_output	open_output
-	-	-
open	open	open
/	/	/
check	check	check
the	the	the
entry	entri	entry
output	output	output
file	file	file
x	x	x
*	*	*
x	x	x
*	*	*
this	this	this
function	function	function
returns	return	return
null	null	null
on	on	on
open	open	open
error	error	error
.	.	.

x	x	x
*	*	*
/	/	/
xfile	xfile	xfile
*	*	*
xopen_output	xopen_output	xopen_output
(	(	(
filename	filenam	filename
)	)	)
x	x	x
char	char	char
*	*	*
filename	filenam	filename
;	;	;
x	x	x
{	{	{
x	x	x
file	file	file
*	*	*
stream	stream	stream
;	;	;
/	/	/
*	*	*
the	the	the
opened	open	opened
file	file	file
stream	stream	stream
*	*	*
/	/	/
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
open	open	open
the	the	the
ioccc	ioccc	ioccc
entry	entri	entry
output	output	output
file	file	file
x	x	x
*	*	*
/	/	/
x	x	x
stream	stream	stream
=	=	=
fopen	fopen	fopen
(	(	(
filename	filenam	filename
,	,	,
"	"	"
w	w	w
"	"	"
)	)	)
;	;	;
x	x	x
if	if	if
(	(	(
stream	stream	stream
=	=	=
=	=	=
null	null	null
)	)	)
{	{	{
x	x	x
fprintf	fprintf	fprintf
(	(	(
stderr	stderr	stderr
,	,	,
"	"	"
%	%	%
s	s	s
:	:	:
cannot	cannot	cannot
open	open	open
ioccc	ioccc	ioccc
entry	entri	entry
file	file	file
for	for	for
output	output	output
:	:	:
%	%	%
s	s	s
:	:	:
"	"	"
,	,	,
x	x	x
program	program	program
,	,	,
filename	filenam	filename
)	)	)
;	;	;
x	x	x
perror	perror	perror
(	(	(
"	"	"
"	"	"
)	)	)
;	;	;
x	x	x
exit	exit	exit
(	(	(
8	8	8
)	)	)
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
return	return	return
the	the	the
open	open	open
file	file	file
*	*	*
/	/	/
x	x	x
return	return	return
(	(	(
stream	stream	stream
)	)	)
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
output_entry	output_entri	output_entry
-	-	-
output	output	output
the	the	the
-	-	-
-	-	-
-	-	-
entry	entri	entry
-	-	-
-	-	-
-	-	-
section	section	section
x	x	x
*	*	*
x	x	x
*	*	*
read	read	read
the	the	the
needed	need	needed
information	inform	information
form	form	form
stdin	stdin	stdin
,	,	,
and	and	and
write	write	write
the	the	the
entry	entri	entry
section	section	section
.	.	.

x	x	x
*	*	*
/	/	/
xvoid	xvoid	xvoid
xoutput_entry	xoutput_entri	xoutput_entry
(	(	(
output	output	output
,	,	,
oname	onam	oname
)	)	)
x	x	x
file	file	file
*	*	*
output	output	output
;	;	;
/	/	/
*	*	*
entry	entri	entry
'	'	'
s	s	s
output	output	output
file	file	file
stream	stream	stream
*	*	*
/	/	/
x	x	x
char	char	char
*	*	*
oname	onam	oname
;	;	;
/	/	/
*	*	*
name	name	name
of	of	of
the	the	the
output	output	output
file	file	file
*	*	*
/	/	/
x	x	x
{	{	{
x	x	x
char	char	char
title	titl	title
[	[	[
max_title_len	max_title_len	max_title_len
+	+	+
1	1	1
+	+	+
1	1	1
]	]	]
;	;	;
/	/	/
*	*	*
the	the	the
entry	entri	entry
'	'	'
s	s	s
title	titl	title
*	*	*
/	/	/
x	x	x
char	char	char
buf	buf	buf
[	[	[
max_col	max_col	max_col
+	+	+
1	1	1
+	+	+
1	1	1
]	]	]
;	;	;
/	/	/
*	*	*
i	i	i
/	/	/
o	o	o
buffer	buffer	buffer
*	*	*
/	/	/
x	x	x
int	int	int
entry	entri	entry
=	=	=
0	0	0
;	;	;
/	/	/
*	*	*
entry	entri	entry
number	number	number
*	*	*
/	/	/
x	x	x
int	int	int
ret	ret	ret
;	;	;
/	/	/
*	*	*
fields	field	field
processed	process	processed
by	by	by
fscanf	fscanf	fscanf
*	*	*
/	/	/
x	x	x
int	int	int
ok_line	ok_lin	ok_line
=	=	=
0	0	0
;	;	;
/	/	/
*	*	*
0	0	0
=	=	=
>	>	>
the	the	the
line	line	line
is	is	is
not	not	not
ok	ok	ok
*	*	*
/	/	/
x	x	x
char	char	char
skip	skip	skip
;	;	;
/	/	/
*	*	*
input	input	input
to	to	to
skip	skip	skip
*	*	*
/	/	/
x	x	x
file	file	file
*	*	*
date_pipe	date_pip	date_pipe
;	;	;
/	/	/
*	*	*
pipe	pipe	pipe
to	to	to
a	a	a
date	date	date
command	command	command
*	*	*
/	/	/
x	x	x
time_t	time_t	time_t
epoch_sec	epoch_sec	epoch_sec
;	;	;
/	/	/
*	*	*
seconds	second	second
since	sinc	since
the	the	the
epoch	epoch	epoch
*	*	*
/	/	/
x	x	x
char	char	char
*	*	*
p	p	p
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
write	write	write
the	the	the
start	start	start
of	of	of
the	the	the
section	section	section
x	x	x
*	*	*
/	/	/
x	x	x
fprintf	fprintf	fprintf
(	(	(
output	output	output
,	,	,
"	"	"
-	-	-
-	-	-
-	-	-
entry	entri	entry
-	-	-
-	-	-
-	-	-
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
check_io	check_io	check_io
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
eof_not_ok	eof_not_ok	eof_not_ok
)	)	)
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
write	write	write
the	the	the
rule	rule	rule
year	year	year
x	x	x
*	*	*
/	/	/
x	x	x
fprintf	fprintf	fprintf
(	(	(
output	output	output
,	,	,
"	"	"
rule	rule	rule
:	:	:
\	\	\
t	t	t
%	%	%
d	d	d
\	\	\
n	n	n
"	"	"
,	,	,
rule_year	rule_year	rule_year
)	)	)
;	;	;
x	x	x
check_io	check_io	check_io
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
eof_not_ok	eof_not_ok	eof_not_ok
)	)	)
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
determine	determin	determine
if	if	if
this	this	this
is	is	is
a	a	a
fix	fix	fix
*	*	*
/	/	/
x	x	x
printf	printf	printf
(	(	(
"	"	"
is	is	is
this	this	this
a	a	a
fix	fix	fix
,	,	,
update	updat	update
or	or	or
resubmittion	resubmitt	resubmittion
to	to	to
a	a	a
"	"	"
)	)	)
;	;	;
x	x	x
printf	printf	printf
(	(	(
"	"	"
previous	previous	previous
entry	entri	entry
(	(	(
enter	enter	enter
y	y	y
or	or	or
n	n	n
)	)	)
?	?	?

"	"	"
)	)	)
;	;	;
x	x	x
while	while	while
(	(	(
get_line	get_lin	get_line
(	(	(
buf	buf	buf
,	,	,
1	1	1
+	+	+
1	1	1
,	,	,
0	0	0
)	)	)
<	<	<
=	=	=
0	0	0
|	|	|
|	|	|
!	!	!
(	(	(
buf	buf	buf
[	[	[
0	0	0
]	]	]
=	=	=
=	=	=
'	'	'
y	y	y
'	'	'
|	|	|
|	|	|
buf	buf	buf
[	[	[
0	0	0
]	]	]
=	=	=
=	=	=
'	'	'
n	n	n
'	'	'
)	)	)
)	)	)
{	{	{
x	x	x
printf	printf	printf
(	(	(
"	"	"
\	\	\
nplease	npleas	nplease
answer	answer	answer
y	y	y
or	or	or
n	n	n
:	:	:
"	"	"
)	)	)
;	;	;
x	x	x
}	}	}
x	x	x
if	if	if
(	(	(
buf	buf	buf
[	[	[
0	0	0
]	]	]
=	=	=
=	=	=
'	'	'
y	y	y
'	'	'
)	)	)
{	{	{
x	x	x
fprintf	fprintf	fprintf
(	(	(
output	output	output
,	,	,
"	"	"
fix	fix	fix
:	:	:
\	\	\
ty	ty	ty
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
check_io	check_io	check_io
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
eof_not_ok	eof_not_ok	eof_not_ok
)	)	)
;	;	;
x	x	x
printf	printf	printf
(	(	(
"	"	"
\	\	\
nbe	nbe	nbe
sure	sure	sure
that	that	that
the	the	the
title	titl	title
and	and	and
entry	entri	entry
number	number	number
that	that	that
you	you	you
give	give	give
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
printf	printf	printf
(	(	(
"	"	"
are	are	are
the	the	the
same	same	same
of	of	of
as	as	a
the	the	the
entry	entri	entry
you	you	you
are	are	are
replacing	replac	replacing
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
}	}	}
else	els	else
{	{	{
x	x	x
fprintf	fprintf	fprintf
(	(	(
output	output	output
,	,	,
"	"	"
fix	fix	fix
:	:	:
\	\	\
tn	tn	tn
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
check_io	check_io	check_io
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
eof_not_ok	eof_not_ok	eof_not_ok
)	)	)
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
write	write	write
the	the	the
title	titl	title
x	x	x
*	*	*
/	/	/
x	x	x
printf	printf	printf
(	(	(
"	"	"
\	\	\
nyour	nyour	nyour
title	titl	title
must	must	must
match	match	match
expression	express	expression
be	be	be
a	a	a
[	[	[
a	a	a
-	-	-
za	za	za
-	-	-
z0	z0	z0
-	-	-
9_	9_	9_
=	=	=
]	]	]
character	charact	character
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
printf	printf	printf
(	(	(
"	"	"
followed	follow	followed
by	by	by
0	0	0
to	to	to
%	%	%
d	d	d
more	more	more
[	[	[
a	a	a
-	-	-
za	za	za
-	-	-
z0	z0	z0
-	-	-
9_	9_	9_
=	=	=
+	+	+
-	-	-
]	]	]
characters	charact	character
.	.	.
\	\	\
n	n	n
\	\	\
n	n	n
"	"	"
,	,	,
x	x	x
max_title_len	max_title_len	max_title_len
-	-	-
1	1	1
)	)	)
;	;	;
x	x	x
printf	printf	printf
(	(	(
"	"	"
it	it	it
is	is	is
suggested	suggest	suggested
,	,	,
but	but	but
not	not	not
required	requir	required
,	,	,
that	that	that
the	the	the
title	titl	title
should	should	should
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
printf	printf	printf
(	(	(
"	"	"
incorporate	incorpor	incorporate
your	your	your
username	usernam	username
;	;	;
in	in	in
the	the	the
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
printf	printf	printf
(	(	(
"	"	"
case	case	case
of	of	of
multiple	multipl	multiple
authors	author	author
,	,	,
consider	consid	consider
using	use	using
parts	part	part
of	of	of
the	the	the
usernames	usernam	usernames
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
printf	printf	printf
(	(	(
"	"	"
of	of	of
the	the	the
authors	author	author
.	.	.
\	\	\
n	n	n
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
printf	printf	printf
(	(	(
"	"	"
enter	enter	enter
your	your	your
title	titl	title
:	:	:
"	"	"
)	)	)
;	;	;
x	x	x
do	do	do
{	{	{
x	x	x
/	/	/
*	*	*
prompt	prompt	prompt
and	and	and
read	read	read
a	a	a
line	line	line
*	*	*
/	/	/
x	x	x
if	if	if
(	(	(
(	(	(
ok_line	ok_lin	ok_line
=	=	=
get_line	get_lin	get_line
(	(	(
title	titl	title
,	,	,
max_title_len	max_title_len	max_title_len
+	+	+
1	1	1
,	,	,
max_col	max_col	max_col
-	-	-
9	9	9
)	)	)
)	)	)
<	<	<
=	=	=
0	0	0
)	)	)
{	{	{
x	x	x
printf	printf	printf
(	(	(
"	"	"
\	\	\
ntitle	ntitl	ntitle
is	is	is
too	too	too
long	long	long
,	,	,
please	pleas	please
re	re	re
-	-	-
enter	enter	enter
:	:	:
"	"	"
)	)	)
;	;	;
x	x	x
continue	continu	continue
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
verify	verifi	verify
the	the	the
pattern	pattern	pattern
,	,	,
not	not	not
everyone	everyon	everyone
has	has	ha
regexp	regexp	regexp
,	,	,
so	so	so
do	do	do
it	it	it
by	by	by
hand	hand	hand
*	*	*
/	/	/
x	x	x
if	if	if
(	(	(
!	!	!
isascii	isascii	isascii
(	(	(
(	(	(
int	int	int
)	)	)
title	titl	title
[	[	[
0	0	0
]	]	]
)	)	)
|	|	|
|	|	|
x	x	x
!	!	!
(	(	(
isalnum	isalnum	isalnum
(	(	(
(	(	(
int	int	int
)	)	)
title	titl	title
[	[	[
0	0	0
]	]	]
)	)	)
|	|	|
|	|	|
title	titl	title
[	[	[
0	0	0
]	]	]
=	=	=
=	=	=
'	'	'
_	_	_
'	'	'
|	|	|
|	|	|
title	titl	title
[	[	[
0	0	0
]	]	]
=	=	=
=	=	=
'	'	'
=	=	=
'	'	'
)	)	)
)	)	)
{	{	{
x	x	x
printf	printf	printf
(	(	(
"	"	"
\	\	\
ninvalid	ninvalid	ninvalid
first	first	first
character	charact	character
in	in	in
the	the	the
title	titl	title
\	\	\
n	n	n
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
printf	printf	printf
(	(	(
"	"	"
enter	enter	enter
your	your	your
title	titl	title
:	:	:
"	"	"
)	)	)
;	;	;
x	x	x
ok_line	ok_lin	ok_line
=	=	=
0	0	0
;	;	;
x	x	x
}	}	}
else	els	else
{	{	{
x	x	x
for	for	for
(	(	(
p	p	p
=	=	=
(	(	(
&	&	&
title	titl	title
[	[	[
1	1	1
]	]	]
)	)	)
;	;	;
*	*	*
p	p	p
!	!	!
=	=	=
'	'	'
\	\	\
0	0	0
'	'	'
&	&	&
&	&	&
*	*	*
p	p	p
!	!	!
=	=	=
'	'	'
\	\	\
n	n	n
'	'	'
;	;	;
+	+	+
+	+	+
p	p	p
)	)	)
{	{	{
x	x	x
if	if	if
(	(	(
!	!	!
isascii	isascii	isascii
(	(	(
(	(	(
int	int	int
)	)	)
*	*	*
p	p	p
)	)	)
|	|	|
|	|	|
x	x	x
!	!	!
(	(	(
isalnum	isalnum	isalnum
(	(	(
(	(	(
int	int	int
)	)	)
*	*	*
p	p	p
)	)	)
|	|	|
|	|	|
x	x	x
*	*	*
p	p	p
=	=	=
=	=	=
'	'	'
_	_	_
'	'	'
|	|	|
|	|	|
*	*	*
p	p	p
=	=	=
=	=	=
'	'	'
=	=	=
'	'	'
|	|	|
|	|	|
*	*	*
p	p	p
=	=	=
=	=	=
'	'	'
+	+	+
'	'	'
|	|	|
|	|	|
*	*	*
p	p	p
=	=	=
=	=	=
'	'	'
-	-	-
'	'	'
)	)	)
)	)	)
{	{	{
x	x	x
printf	printf	printf
(	(	(
"	"	"
\	\	\
ninvalid	ninvalid	ninvalid
character	charact	character
in	in	in
the	the	the
title	titl	title
\	\	\
n	n	n
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
printf	printf	printf
(	(	(
"	"	"
enter	enter	enter
your	your	your
title	titl	title
:	:	:
"	"	"
)	)	)
;	;	;
x	x	x
ok_line	ok_lin	ok_line
=	=	=
0	0	0
;	;	;
x	x	x
}	}	}
x	x	x
}	}	}
x	x	x
}	}	}
x	x	x
}	}	}
while	while	while
(	(	(
ok_line	ok_lin	ok_line
<	<	<
=	=	=
0	0	0
)	)	)
;	;	;
x	x	x
fprintf	fprintf	fprintf
(	(	(
output	output	output
,	,	,
"	"	"
title	titl	title
:	:	:
\	\	\
t	t	t
%	%	%
s	s	s
"	"	"
,	,	,
title	titl	title
)	)	)
;	;	;
x	x	x
check_io	check_io	check_io
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
eof_not_ok	eof_not_ok	eof_not_ok
)	)	)
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
write	write	write
the	the	the
entry	entri	entry
number	number	number
x	x	x
*	*	*
/	/	/
x	x	x
printf	printf	printf
(	(	(
"	"	"
\	\	\
neach	neach	neach
person	person	person
may	may	may
submit	submit	submit
up	up	up
to	to	to
%	%	%
d	d	d
entries	entri	entry
per	per	per
year	year	year
.	.	.
\	\	\
n	n	n
\	\	\
n	n	n
"	"	"
,	,	,
x	x	x
max_entry	max_entri	max_entry
)	)	)
;	;	;
x	x	x
printf	printf	printf
(	(	(
"	"	"
enter	enter	enter
an	an	an
entry	entri	entry
number	number	number
from	from	from
0	0	0
to	to	to
%	%	%
d	d	d
inclusive	inclus	inclusive
:	:	:
"	"	"
,	,	,
max_entry	max_entri	max_entry
-	-	-
1	1	1
)	)	)
;	;	;
x	x	x
do	do	do
{	{	{
x	x	x
/	/	/
*	*	*
get	get	get
a	a	a
valid	valid	valid
input	input	input
line	line	line
*	*	*
/	/	/
x	x	x
fflush	fflush	fflush
(	(	(
stdout	stdout	stdout
)	)	)
;	;	;
x	x	x
ret	ret	ret
=	=	=
fscanf	fscanf	fscanf
(	(	(
stdin	stdin	stdin
,	,	,
"	"	"
%	%	%
d	d	d
[	[	[
\	\	\
n	n	n
]	]	]
"	"	"
,	,	,
&	&	&
entry	entri	entry
)	)	)
;	;	;
x	x	x
check_io	check_io	check_io
(	(	(
stdin	stdin	stdin
,	,	,
"	"	"
stdin	stdin	stdin
"	"	"
,	,	,
eof_not_ok	eof_not_ok	eof_not_ok
)	)	)
;	;	;
x	x	x
/	/	/
*	*	*
skip	skip	skip
over	over	over
input	input	input
until	until	until
newline	newlin	newline
is	is	is
found	found	found
*	*	*
/	/	/
x	x	x
do	do	do
{	{	{
x	x	x
skip	skip	skip
=	=	=
fgetc	fgetc	fgetc
(	(	(
stdin	stdin	stdin
)	)	)
;	;	;
x	x	x
check_io	check_io	check_io
(	(	(
stdin	stdin	stdin
,	,	,
"	"	"
stdin	stdin	stdin
"	"	"
,	,	,
eof_not_ok	eof_not_ok	eof_not_ok
)	)	)
;	;	;
x	x	x
if	if	if
(	(	(
skip	skip	skip
!	!	!
=	=	=
'	'	'
\	\	\
n	n	n
'	'	'
)	)	)
{	{	{
x	x	x
/	/	/
*	*	*
bad	bad	bad
text	text	text
in	in	in
input	input	input
,	,	,
invalidate	invalid	invalidate
entry	entri	entry
number	number	number
*	*	*
/	/	/
x	x	x
entry	entri	entry
=	=	=
-	-	-
1	1	1
;	;	;
x	x	x
}	}	}
x	x	x
}	}	}
while	while	while
(	(	(
skip	skip	skip
!	!	!
=	=	=
'	'	'
\	\	\
n	n	n
'	'	'
)	)	)
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
check	check	check
if	if	if
we	we	we
have	have	have
a	a	a
number	number	number
,	,	,
and	and	and
if	if	if
it	it	it
is	is	is
in	in	in
range	rang	range
*	*	*
/	/	/
x	x	x
if	if	if
(	(	(
ret	ret	ret
!	!	!
=	=	=
1	1	1
|	|	|
|	|	|
entry	entri	entry
<	<	<
0	0	0
|	|	|
|	|	|
entry	entri	entry
>	>	>
max_entry	max_entri	max_entry
-	-	-
1	1	1
)	)	)
{	{	{
x	x	x
printf	printf	printf
(	(	(
x	x	x
"	"	"
\	\	\
nthe	nthe	nthe
entry	entri	entry
number	number	number
must	must	must
be	be	be
between	between	between
0	0	0
and	and	and
%	%	%
d	d	d
inclusive	inclus	inclusive
\	\	\
n	n	n
\	\	\
n	n	n
"	"	"
,	,	,
x	x	x
max_entry	max_entri	max_entry
-	-	-
1	1	1
)	)	)
;	;	;
x	x	x
printf	printf	printf
(	(	(
"	"	"
enter	enter	enter
the	the	the
entry	entri	entry
number	number	number
:	:	:
"	"	"
)	)	)
;	;	;
x	x	x
}	}	}
x	x	x
}	}	}
while	while	while
(	(	(
ret	ret	ret
!	!	!
=	=	=
1	1	1
|	|	|
|	|	|
entry	entri	entry
<	<	<
0	0	0
|	|	|
|	|	|
entry	entri	entry
>	>	>
max_entry	max_entri	max_entry
-	-	-
1	1	1
)	)	)
;	;	;
x	x	x
fprintf	fprintf	fprintf
(	(	(
output	output	output
,	,	,
"	"	"
entry	entri	entry
:	:	:
\	\	\
t	t	t
%	%	%
d	d	d
\	\	\
n	n	n
"	"	"
,	,	,
entry	entri	entry
)	)	)
;	;	;
x	x	x
check_io	check_io	check_io
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
eof_not_ok	eof_not_ok	eof_not_ok
)	)	)
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
write	write	write
the	the	the
submission	submiss	submission
date	date	date
x	x	x
*	*	*
/	/	/
x	x	x
/	/	/
*	*	*
returns	return	return
a	a	a
newline	newlin	newline
*	*	*
/	/	/
x	x	x
epoch_sec	epoch_sec	epoch_sec
=	=	=
time	time	time
(	(	(
null	null	null
)	)	)
;	;	;
x	x	x
fprintf	fprintf	fprintf
(	(	(
output	output	output
,	,	,
"	"	"
date	date	date
:	:	:
\	\	\
t	t	t
%	%	%
s	s	s
"	"	"
,	,	,
asctime	asctim	asctime
(	(	(
gmtime	gmtime	gmtime
(	(	(
&	&	&
epoch_sec	epoch_sec	epoch_sec
)	)	)
)	)	)
)	)	)
;	;	;
x	x	x
check_io	check_io	check_io
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
eof_not_ok	eof_not_ok	eof_not_ok
)	)	)
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
write	write	write
the	the	the
os	os	o
/	/	/
machine	machin	machine
host	host	host
information	inform	information
x	x	x
*	*	*
/	/	/
x	x	x
printf	printf	printf
(	(	(
x	x	x
"	"	"
\	\	\
nenter	nenter	nenter
the	the	the
machine	machin	machine
(	(	(
s	s	s
)	)	)
and	and	and
os	os	o
(	(	(
s	s	s
)	)	)
under	under	under
which	which	which
your	your	your
entry	entri	entry
was	was	wa
tested	test	tested
.	.	.
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
output_till_dot	output_till_dot	output_till_dot
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
"	"	"
host	host	host
:	:	:
"	"	"
)	)	)
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
output_remark	output_remark	output_remark
-	-	-
output	output	output
the	the	the
-	-	-
-	-	-
-	-	-
remark	remark	remark
-	-	-
-	-	-
-	-	-
section	section	section
x	x	x
*	*	*
x	x	x
*	*	*
read	read	read
the	the	the
needed	need	needed
information	inform	information
form	form	form
stdin	stdin	stdin
,	,	,
and	and	and
write	write	write
the	the	the
entry	entri	entry
section	section	section
.	.	.

x	x	x
*	*	*
/	/	/
xvoid	xvoid	xvoid
xoutput_remark	xoutput_remark	xoutput_remark
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
remark	remark	remark
,	,	,
rname	rname	rname
)	)	)
x	x	x
file	file	file
*	*	*
output	output	output
;	;	;
/	/	/
*	*	*
entry	entri	entry
'	'	'
s	s	s
output	output	output
file	file	file
stream	stream	stream
*	*	*
/	/	/
x	x	x
char	char	char
*	*	*
oname	onam	oname
;	;	;
/	/	/
*	*	*
name	name	name
of	of	of
the	the	the
output	output	output
file	file	file
*	*	*
/	/	/
x	x	x
file	file	file
*	*	*
remark	remark	remark
;	;	;
/	/	/
*	*	*
stream	stream	stream
to	to	to
the	the	the
file	file	file
containing	contain	containing
remark	remark	remark
text	text	text
*	*	*
/	/	/
x	x	x
char	char	char
*	*	*
rname	rname	rname
;	;	;
/	/	/
*	*	*
name	name	name
of	of	of
the	the	the
remark	remark	remark
file	file	file
*	*	*
/	/	/
x	x	x
{	{	{
x	x	x
char	char	char
buf	buf	buf
[	[	[
bufsiz	bufsiz	bufsiz
+	+	+
1	1	1
]	]	]
;	;	;
/	/	/
*	*	*
input	input	input
/	/	/
output	output	output
buffer	buffer	buffer
*	*	*
/	/	/
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
write	write	write
the	the	the
start	start	start
of	of	of
the	the	the
section	section	section
x	x	x
*	*	*
/	/	/
x	x	x
fprintf	fprintf	fprintf
(	(	(
output	output	output
,	,	,
"	"	"
-	-	-
-	-	-
-	-	-
remark	remark	remark
-	-	-
-	-	-
-	-	-
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
check_io	check_io	check_io
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
eof_not_ok	eof_not_ok	eof_not_ok
)	)	)
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
copy	copi	copy
the	the	the
remark	remark	remark
file	file	file
to	to	to
the	the	the
section	section	section
x	x	x
*	*	*
/	/	/
x	x	x
while	while	while
(	(	(
fgets	fget	fgets
(	(	(
buf	buf	buf
,	,	,
bufsiz	bufsiz	bufsiz
,	,	,
remark	remark	remark
)	)	)
!	!	!
=	=	=
null	null	null
)	)	)
{	{	{
x	x	x
fputs	fput	fputs
(	(	(
buf	buf	buf
,	,	,
output	output	output
)	)	)
;	;	;
x	x	x
check_io	check_io	check_io
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
eof_not_ok	eof_not_ok	eof_not_ok
)	)	)
;	;	;
x	x	x
}	}	}
x	x	x
check_io	check_io	check_io
(	(	(
remark	remark	remark
,	,	,
rname	rname	rname
,	,	,
eof_ok	eof_ok	eof_ok
)	)	)
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
be	be	be
sure	sure	sure
that	that	that
the	the	the
remark	remark	remark
section	section	section
ends	end	end
with	with	with
a	a	a
newline	newlin	newline
*	*	*
/	/	/
x	x	x
if	if	if
(	(	(
buf	buf	buf
[	[	[
strlen	strlen	strlen
(	(	(
buf	buf	buf
)	)	)
-	-	-
1	1	1
]	]	]
!	!	!
=	=	=
'	'	'
\	\	\
n	n	n
'	'	'
)	)	)
{	{	{
x	x	x
fputc	fputc	fputc
(	(	(
'	'	'
\	\	\
n	n	n
'	'	'
,	,	,
output	output	output
)	)	)
;	;	;
x	x	x
check_io	check_io	check_io
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
eof_not_ok	eof_not_ok	eof_not_ok
)	)	)
;	;	;
x	x	x
}	}	}
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
output_author	output_author	output_author
-	-	-
output	output	output
the	the	the
-	-	-
-	-	-
-	-	-
author	author	author
-	-	-
-	-	-
-	-	-
section	section	section
x	x	x
*	*	*
x	x	x
*	*	*
read	read	read
the	the	the
needed	need	needed
information	inform	information
from	from	from
stdin	stdin	stdin
,	,	,
and	and	and
write	write	write
the	the	the
author	author	author
section	section	section
.	.	.

x	x	x
*	*	*
if	if	if
multiple	multipl	multiple
authors	author	author
exist	exist	exist
,	,	,
multiple	multipl	multiple
author	author	author
sections	section	section
will	will	will
be	be	be
written	written	written
.	.	.

x	x	x
*	*	*
/	/	/
xvoid	xvoid	xvoid
xoutput_author	xoutput_author	xoutput_author
(	(	(
output	output	output
,	,	,
oname	onam	oname
)	)	)
x	x	x
file	file	file
*	*	*
output	output	output
;	;	;
/	/	/
*	*	*
entry	entri	entry
'	'	'
s	s	s
output	output	output
file	file	file
stream	stream	stream
*	*	*
/	/	/
x	x	x
char	char	char
*	*	*
oname	onam	oname
;	;	;
/	/	/
*	*	*
name	name	name
of	of	of
the	the	the
output	output	output
file	file	file
*	*	*
/	/	/
x	x	x
{	{	{
x	x	x
char	char	char
buf	buf	buf
[	[	[
max_col	max_col	max_col
+	+	+
1	1	1
+	+	+
1	1	1
]	]	]
;	;	;
/	/	/
*	*	*
i	i	i
/	/	/
o	o	o
buffer	buffer	buffer
*	*	*
/	/	/
x	x	x
int	int	int
more_auths	more_auth	more_auths
;	;	;
/	/	/
*	*	*
true	true	true
=	=	=
>	>	>
more	more	more
authors	author	author
to	to	to
note	note	note
*	*	*
/	/	/
x	x	x
int	int	int
auth_cnt	auth_cnt	auth_cnt
=	=	=
0	0	0
;	;	;
/	/	/
*	*	*
number	number	number
of	of	of
authors	author	author
processed	process	processed
*	*	*
/	/	/
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
prompt	prompt	prompt
the	the	the
user	user	user
for	for	for
the	the	the
author	author	author
section	section	section
x	x	x
*	*	*
/	/	/
x	x	x
printf	printf	printf
(	(	(
"	"	"
\	\	\
nenter	nenter	nenter
information	inform	information
about	about	about
each	each	each
author	author	author
.	.	.

if	if	if
your	your	your
entry	entri	entry
is	is	is
after	after	after
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
printf	printf	printf
(	(	(
"	"	"
%	%	%
s	s	s
and	and	and
before	befor	before
the	the	the
contest	contest	contest
deadline	deadlin	deadline
,	,	,
the	the	the
judges	judg	judge
\	\	\
n	n	n
"	"	"
,	,	,
start_date	start_dat	start_date
)	)	)
;	;	;
x	x	x
printf	printf	printf
(	(	(
"	"	"
will	will	will
attempt	attempt	attempt
to	to	to
email	email	email
back	back	back
a	a	a
confirmation	confirm	confirmation
to	to	to
the	the	the
first	first	first
author	author	author
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
place	place	place
author	author	author
information	inform	information
for	for	for
each	each	each
author	author	author
in	in	in
an	an	an
individual	individu	individual
section	section	section
x	x	x
*	*	*
/	/	/
x	x	x
do	do	do
{	{	{
x	x	x
x	x	x
/	/	/
*	*	*
write	write	write
the	the	the
start	start	start
of	of	of
the	the	the
section	section	section
*	*	*
/	/	/
x	x	x
fprintf	fprintf	fprintf
(	(	(
output	output	output
,	,	,
"	"	"
-	-	-
-	-	-
-	-	-
author	author	author
-	-	-
-	-	-
-	-	-
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
check_io	check_io	check_io
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
eof_not_ok	eof_not_ok	eof_not_ok
)	)	)
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
write	write	write
the	the	the
author	author	author
*	*	*
/	/	/
x	x	x
printf	printf	printf
(	(	(
"	"	"
\	\	\
nauthor	nauthor	nauthor
#	#	#
%	%	%
d	d	d
name	name	name
:	:	:
"	"	"
,	,	,
+	+	+
+	+	+
auth_cnt	auth_cnt	auth_cnt
)	)	)
;	;	;
x	x	x
while	while	while
(	(	(
get_line	get_lin	get_line
(	(	(
buf	buf	buf
,	,	,
max_col	max_col	max_col
+	+	+
1	1	1
,	,	,
max_col	max_col	max_col
-	-	-
9	9	9
)	)	)
<	<	<
=	=	=
0	0	0
)	)	)
{	{	{
x	x	x
printf	printf	printf
(	(	(
"	"	"
\	\	\
nname	nname	nname
too	too	too
long	long	long
,	,	,
please	pleas	please
re	re	re
-	-	-
enter	enter	enter
:	:	:
"	"	"
)	)	)
;	;	;
x	x	x
}	}	}
x	x	x
fprintf	fprintf	fprintf
(	(	(
output	output	output
,	,	,
"	"	"
name	name	name
:	:	:
\	\	\
t	t	t
%	%	%
s	s	s
"	"	"
,	,	,
buf	buf	buf
)	)	)
;	;	;
x	x	x
check_io	check_io	check_io
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
eof_not_ok	eof_not_ok	eof_not_ok
)	)	)
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
write	write	write
the	the	the
organization	organ	organization
*	*	*
/	/	/
x	x	x
printf	printf	printf
(	(	(
"	"	"
\	\	\
nenter	nenter	nenter
the	the	the
school	school	school
/	/	/
company	compani	company
/	/	/
organization	organ	organization
of	of	of
author	author	author
#	#	#
%	%	%
d	d	d
\	\	\
n	n	n
"	"	"
,	,	,
x	x	x
auth_cnt	auth_cnt	auth_cnt
)	)	)
;	;	;
x	x	x
printf	printf	printf
(	(	(
"	"	"
\	\	\
nauthor	nauthor	nauthor
#	#	#
%	%	%
d	d	d
org	org	org
:	:	:
"	"	"
,	,	,
auth_cnt	auth_cnt	auth_cnt
)	)	)
;	;	;
x	x	x
while	while	while
(	(	(
get_line	get_lin	get_line
(	(	(
buf	buf	buf
,	,	,
max_col	max_col	max_col
+	+	+
1	1	1
,	,	,
max_col	max_col	max_col
-	-	-
9	9	9
)	)	)
<	<	<
=	=	=
0	0	0
)	)	)
{	{	{
x	x	x
printf	printf	printf
(	(	(
"	"	"
\	\	\
nline	nline	nline
too	too	too
long	long	long
,	,	,
please	pleas	please
re	re	re
-	-	-
enter	enter	enter
:	:	:
"	"	"
)	)	)
;	;	;
x	x	x
}	}	}
x	x	x
fprintf	fprintf	fprintf
(	(	(
output	output	output
,	,	,
"	"	"
org	org	org
:	:	:
\	\	\
t	t	t
%	%	%
s	s	s
"	"	"
,	,	,
buf	buf	buf
)	)	)
;	;	;
x	x	x
check_io	check_io	check_io
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
eof_not_ok	eof_not_ok	eof_not_ok
)	)	)
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
write	write	write
the	the	the
address	address	address
*	*	*
/	/	/
x	x	x
printf	printf	printf
(	(	(
x	x	x
"	"	"
\	\	\
nenter	nenter	nenter
the	the	the
postal	postal	postal
address	address	address
for	for	for
author	author	author
#	#	#
%	%	%
d	d	d
.	.	.

be	be	be
sure	sure	sure
to	to	to
include	includ	include
\	\	\
n	n	n
"	"	"
,	,	,
x	x	x
auth_cnt	auth_cnt	auth_cnt
)	)	)
;	;	;
x	x	x
printf	printf	printf
(	(	(
"	"	"
your	your	your
country	countri	country
and	and	and
do	do	do
not	not	not
include	includ	include
your	your	your
name	name	name
.	.	.
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
output_till_dot	output_till_dot	output_till_dot
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
"	"	"
addr	addr	addr
:	:	:
"	"	"
)	)	)
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
write	write	write
the	the	the
email	email	email
address	address	address
*	*	*
/	/	/
x	x	x
printf	printf	printf
(	(	(
x	x	x
"	"	"
\	\	\
nenter	nenter	nenter
the	the	the
email	email	email
address	address	address
for	for	for
author	author	author
#	#	#
%	%	%
d	d	d
.	.	.

use	use	use
an	an	an
address	address	address
from	from	from
\	\	\
n	n	n
"	"	"
,	,	,
x	x	x
auth_cnt	auth_cnt	auth_cnt
)	)	)
;	;	;
x	x	x
printf	printf	printf
(	(	(
x	x	x
"	"	"
a	a	a
registered	regist	registered
domain	domain	domain
or	or	or
well	well	well
known	known	known
site	site	site
.	.	.

if	if	if
you	you	you
give	give	give
several	sever	several
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
printf	printf	printf
(	(	(
"	"	"
forms	form	form
,	,	,
list	list	list
them	them	them
one	one	one
per	per	per
line	line	line
.	.	.
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
output_till_dot	output_till_dot	output_till_dot
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
"	"	"
email	email	email
:	:	:
"	"	"
)	)	)
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
write	write	write
the	the	the
anonymous	anonym	anonymous
status	status	status
*	*	*
/	/	/
x	x	x
printf	printf	printf
(	(	(
"	"	"
\	\	\
nshould	nshould	nshould
author	author	author
#	#	#
%	%	%
d	d	d
remain	remain	remain
anonymous	anonym	anonymous
(	(	(
enter	enter	enter
y	y	y
or	or	or
n	n	n
)	)	)
?	?	?

"	"	"
,	,	,
x	x	x
auth_cnt	auth_cnt	auth_cnt
)	)	)
;	;	;
x	x	x
while	while	while
(	(	(
get_line	get_lin	get_line
(	(	(
buf	buf	buf
,	,	,
1	1	1
+	+	+
1	1	1
,	,	,
0	0	0
)	)	)
<	<	<
=	=	=
0	0	0
|	|	|
|	|	|
!	!	!
(	(	(
buf	buf	buf
[	[	[
0	0	0
]	]	]
=	=	=
=	=	=
'	'	'
y	y	y
'	'	'
|	|	|
|	|	|
buf	buf	buf
[	[	[
0	0	0
]	]	]
=	=	=
=	=	=
'	'	'
n	n	n
'	'	'
)	)	)
)	)	)
{	{	{
x	x	x
printf	printf	printf
(	(	(
"	"	"
\	\	\
nplease	npleas	nplease
answer	answer	answer
y	y	y
or	or	or
n	n	n
:	:	:
"	"	"
)	)	)
;	;	;
x	x	x
}	}	}
x	x	x
fprintf	fprintf	fprintf
(	(	(
output	output	output
,	,	,
"	"	"
anon	anon	anon
:	:	:
\	\	\
t	t	t
%	%	%
s	s	s
"	"	"
,	,	,
buf	buf	buf
)	)	)
;	;	;
x	x	x
check_io	check_io	check_io
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
eof_not_ok	eof_not_ok	eof_not_ok
)	)	)
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
determine	determin	determine
if	if	if
there	there	there
is	is	is
another	anoth	another
author	author	author
*	*	*
/	/	/
x	x	x
printf	printf	printf
(	(	(
"	"	"
\	\	\
nis	nis	ni
there	there	there
another	anoth	another
author	author	author
(	(	(
enter	enter	enter
y	y	y
or	or	or
n	n	n
)	)	)
?	?	?

"	"	"
)	)	)
;	;	;
x	x	x
while	while	while
(	(	(
get_line	get_lin	get_line
(	(	(
buf	buf	buf
,	,	,
1	1	1
+	+	+
1	1	1
,	,	,
0	0	0
)	)	)
<	<	<
=	=	=
0	0	0
|	|	|
|	|	|
!	!	!
(	(	(
buf	buf	buf
[	[	[
0	0	0
]	]	]
=	=	=
=	=	=
'	'	'
y	y	y
'	'	'
|	|	|
|	|	|
buf	buf	buf
[	[	[
0	0	0
]	]	]
=	=	=
=	=	=
'	'	'
n	n	n
'	'	'
)	)	)
)	)	)
{	{	{
x	x	x
printf	printf	printf
(	(	(
"	"	"
\	\	\
nplease	npleas	nplease
answer	answer	answer
y	y	y
or	or	or
n	n	n
:	:	:
"	"	"
)	)	)
;	;	;
x	x	x
}	}	}
x	x	x
if	if	if
(	(	(
buf	buf	buf
[	[	[
0	0	0
]	]	]
=	=	=
=	=	=
'	'	'
y	y	y
'	'	'
)	)	)
{	{	{
x	x	x
more_auths	more_auth	more_auths
=	=	=
true	true	true
;	;	;
x	x	x
}	}	}
else	els	else
{	{	{
x	x	x
more_auths	more_auth	more_auths
=	=	=
false	fals	false
;	;	;
x	x	x
}	}	}
x	x	x
}	}	}
while	while	while
(	(	(
more_auths	more_auth	more_auths
=	=	=
=	=	=
true	true	true
)	)	)
;	;	;
x	x	x
return	return	return
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
output_info	output_info	output_info
-	-	-
output	output	output
the	the	the
-	-	-
-	-	-
-	-	-
info	info	info
-	-	-
-	-	-
-	-	-
section	section	section
(	(	(
s	s	s
)	)	)
x	x	x
*	*	*
x	x	x
*	*	*
read	read	read
the	the	the
needed	need	needed
information	inform	information
from	from	from
stdin	stdin	stdin
,	,	,
and	and	and
write	write	write
the	the	the
info	info	info
section	section	section
.	.	.

x	x	x
*	*	*
if	if	if
multiple	multipl	multiple
info	info	info
files	file	file
exist	exist	exist
,	,	,
multiple	multipl	multiple
info	info	info
sections	section	section
will	will	will
be	be	be
written	written	written
.	.	.

x	x	x
*	*	*
/	/	/
xvoid	xvoid	xvoid
xoutput_info	xoutput_info	xoutput_info
(	(	(
output	output	output
,	,	,
oname	onam	oname
)	)	)
x	x	x
file	file	file
*	*	*
output	output	output
;	;	;
/	/	/
*	*	*
entry	entri	entry
'	'	'
s	s	s
output	output	output
file	file	file
stream	stream	stream
*	*	*
/	/	/
x	x	x
char	char	char
*	*	*
oname	onam	oname
;	;	;
/	/	/
*	*	*
name	name	name
of	of	of
the	the	the
output	output	output
file	file	file
*	*	*
/	/	/
x	x	x
{	{	{
x	x	x
char	char	char
infoname	infonam	infoname
[	[	[
max_file_len	max_file_len	max_file_len
+	+	+
1	1	1
]	]	]
;	;	;
/	/	/
*	*	*
filename	filenam	filename
buffer	buffer	buffer
*	*	*
/	/	/
x	x	x
char	char	char
yorn	yorn	yorn
[	[	[
1	1	1
+	+	+
1	1	1
]	]	]
;	;	;
/	/	/
*	*	*
y	y	y
or	or	or
n	n	n
answer	answer	answer
*	*	*
/	/	/
x	x	x
char	char	char
*	*	*
uuname	uunam	uuname
;	;	;
/	/	/
*	*	*
name	name	name
to	to	to
uuencode	uuencod	uuencode
as	as	a
*	*	*
/	/	/
x	x	x
file	file	file
*	*	*
infile	infil	infile
;	;	;
/	/	/
*	*	*
info	info	info
file	file	file
stream	stream	stream
*	*	*
/	/	/
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
prompt	prompt	prompt
the	the	the
user	user	user
for	for	for
info	info	info
information	inform	information
x	x	x
*	*	*
/	/	/
x	x	x
printf	printf	printf
(	(	(
"	"	"
\	\	\
ninfo	ninfo	ninfo
files	file	file
should	should	should
be	be	be
used	use	used
only	onli	only
to	to	to
supplement	supplement	supplement
your	your	your
entry	entri	entry
.	.	.
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
printf	printf	printf
(	(	(
"	"	"
for	for	for
example	exampl	example
,	,	,
info	info	info
files	file	file
may	may	may
provide	provid	provide
sample	sampl	sample
input	input	input
or	or	or
detailed	detail	detailed
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
printf	printf	printf
(	(	(
"	"	"
information	inform	information
about	about	about
your	your	your
entry	entri	entry
.	.	.

because	becaus	because
they	they	they
are	are	are
supplemental	supplement	supplemental
,	,	,
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
printf	printf	printf
(	(	(
"	"	"
the	the	the
entry	entri	entry
should	should	should
not	not	not
require	requir	require
them	them	them
to	to	to
exist	exist	exist
.	.	.
\	\	\
n	n	n
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
while	while	while
there	there	there
is	is	is
another	anoth	another
info	info	info
file	file	file
to	to	to
save	save	save
,	,	,
uuencode	uuencod	uuencode
it	it	it
x	x	x
*	*	*
/	/	/
x	x	x
printf	printf	printf
(	(	(
"	"	"
do	do	do
you	you	you
have	have	have
a	a	a
info	info	info
file	file	file
to	to	to
include	includ	include
(	(	(
enter	enter	enter
y	y	y
or	or	or
n	n	n
)	)	)
?	?	?

"	"	"
)	)	)
;	;	;
x	x	x
while	while	while
(	(	(
get_line	get_lin	get_line
(	(	(
yorn	yorn	yorn
,	,	,
1	1	1
+	+	+
1	1	1
,	,	,
0	0	0
)	)	)
<	<	<
=	=	=
0	0	0
|	|	|
|	|	|
!	!	!
(	(	(
yorn	yorn	yorn
[	[	[
0	0	0
]	]	]
=	=	=
=	=	=
'	'	'
y	y	y
'	'	'
|	|	|
|	|	|
yorn	yorn	yorn
[	[	[
0	0	0
]	]	]
=	=	=
=	=	=
'	'	'
n	n	n
'	'	'
)	)	)
)	)	)
{	{	{
x	x	x
printf	printf	printf
(	(	(
"	"	"
\	\	\
nplease	npleas	nplease
answer	answer	answer
y	y	y
or	or	or
n	n	n
:	:	:
"	"	"
)	)	)
;	;	;
x	x	x
}	}	}
x	x	x
while	while	while
(	(	(
yorn	yorn	yorn
[	[	[
0	0	0
]	]	]
=	=	=
=	=	=
'	'	'
y	y	y
'	'	'
)	)	)
{	{	{
x	x	x
x	x	x
/	/	/
*	*	*
read	read	read
the	the	the
filename	filenam	filename
*	*	*
/	/	/
x	x	x
printf	printf	printf
(	(	(
"	"	"
\	\	\
nenter	nenter	nenter
the	the	the
info	info	info
filename	filenam	filename
:	:	:
"	"	"
)	)	)
;	;	;
x	x	x
while	while	while
(	(	(
get_line	get_lin	get_line
(	(	(
infoname	infonam	infoname
,	,	,
max_file_len	max_file_len	max_file_len
+	+	+
1	1	1
,	,	,
0	0	0
)	)	)
<	<	<
=	=	=
0	0	0
)	)	)
{	{	{
x	x	x
printf	printf	printf
(	(	(
"	"	"
\	\	\
ninfo	ninfo	ninfo
filename	filenam	filename
too	too	too
long	long	long
,	,	,
please	pleas	please
re	re	re
-	-	-
enter	enter	enter
:	:	:
"	"	"
)	)	)
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
compute	comput	compute
the	the	the
basename	basenam	basename
of	of	of
the	the	the
info	info	info
filename	filenam	filename
*	*	*
/	/	/
x	x	x
/	/	/
*	*	*
remove	remov	remove
the	the	the
trailing	trail	trailing
newline	newlin	newline
*	*	*
/	/	/
x	x	x
uuname	uunam	uuname
=	=	=
&	&	&
infoname	infonam	infoname
[	[	[
strlen	strlen	strlen
(	(	(
infoname	infonam	infoname
)	)	)
-	-	-
1	1	1
]	]	]
;	;	;
x	x	x
*	*	*
uuname	uunam	uuname
=	=	=
'	'	'
\	\	\
0	0	0
'	'	'
;	;	;
x	x	x
/	/	/
*	*	*
avoid	avoid	avoid
rindex	rindex	rindex
/	/	/
shrrchr	shrrchr	shrrchr
compat	compat	compat
issues	issu	issue
,	,	,
do	do	do
it	it	it
by	by	by
hand	hand	hand
*	*	*
/	/	/
x	x	x
for	for	for
(	(	(
-	-	-
-	-	-
uuname	uunam	uuname
;	;	;
uuname	uunam	uuname
>	>	>
infoname	infonam	infoname
;	;	;
-	-	-
-	-	-
uuname	uunam	uuname
)	)	)
{	{	{
x	x	x
if	if	if
(	(	(
*	*	*
uuname	uunam	uuname
=	=	=
=	=	=
'	'	'
/	/	/
'	'	'
)	)	)
{	{	{
x	x	x
+	+	+
+	+	+
uuname	uunam	uuname
;	;	;
x	x	x
break	break	break
;	;	;
x	x	x
}	}	}
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
attempt	attempt	attempt
to	to	to
open	open	open
the	the	the
info	info	info
file	file	file
*	*	*
/	/	/
x	x	x
infile	infil	infile
=	=	=
fopen	fopen	fopen
(	(	(
infoname	infonam	infoname
,	,	,
"	"	"
r	r	r
"	"	"
)	)	)
;	;	;
x	x	x
if	if	if
(	(	(
infile	infil	infile
=	=	=
=	=	=
null	null	null
)	)	)
{	{	{
x	x	x
fprintf	fprintf	fprintf
(	(	(
stderr	stderr	stderr
,	,	,
"	"	"
\	\	\
n	n	n
%	%	%
s	s	s
:	:	:
cannot	cannot	cannot
open	open	open
info	info	info
file	file	file
:	:	:
%	%	%
s	s	s
:	:	:
"	"	"
,	,	,
x	x	x
program	program	program
,	,	,
infoname	infonam	infoname
)	)	)
;	;	;
x	x	x
perror	perror	perror
(	(	(
"	"	"
"	"	"
)	)	)
;	;	;
x	x	x
continue	continu	continue
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
write	write	write
the	the	the
start	start	start
of	of	of
the	the	the
section	section	section
x	x	x
*	*	*
/	/	/
x	x	x
fprintf	fprintf	fprintf
(	(	(
output	output	output
,	,	,
"	"	"
-	-	-
-	-	-
-	-	-
info	info	info
-	-	-
-	-	-
-	-	-
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
check_io	check_io	check_io
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
eof_not_ok	eof_not_ok	eof_not_ok
)	)	)
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
uuencode	uuencod	uuencode
the	the	the
info	info	info
file	file	file
*	*	*
/	/	/
x	x	x
uuencode	uuencod	uuencode
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
infile	infil	infile
,	,	,
infoname	infonam	infoname
,	,	,
uuinfo_mode	uuinfo_mod	uuinfo_mode
,	,	,
uuname	uunam	uuname
)	)	)
;	;	;
x	x	x
x	x	x
printf	printf	printf
(	(	(
"	"	"
\	\	\
ndo	ndo	ndo
you	you	you
have	have	have
another	anoth	another
info	info	info
file	file	file
to	to	to
include	includ	include
(	(	(
enter	enter	enter
y	y	y
or	or	or
n	n	n
)	)	)
?	?	?

"	"	"
)	)	)
;	;	;
x	x	x
while	while	while
(	(	(
get_line	get_lin	get_line
(	(	(
yorn	yorn	yorn
,	,	,
1	1	1
+	+	+
1	1	1
,	,	,
0	0	0
)	)	)
<	<	<
=	=	=
0	0	0
|	|	|
|	|	|
!	!	!
(	(	(
yorn	yorn	yorn
[	[	[
0	0	0
]	]	]
=	=	=
=	=	=
'	'	'
y	y	y
'	'	'
|	|	|
|	|	|
yorn	yorn	yorn
[	[	[
0	0	0
]	]	]
=	=	=
=	=	=
'	'	'
n	n	n
'	'	'
)	)	)
)	)	)
{	{	{
x	x	x
printf	printf	printf
(	(	(
"	"	"
\	\	\
nplease	npleas	nplease
answer	answer	answer
y	y	y
or	or	or
n	n	n
:	:	:
"	"	"
)	)	)
;	;	;
x	x	x
}	}	}
x	x	x
}	}	}
;	;	;
x	x	x
return	return	return
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
output_build	output_build	output_build
-	-	-
output	output	output
the	the	the
-	-	-
-	-	-
-	-	-
build	build	build
-	-	-
-	-	-
-	-	-
section	section	section
x	x	x
*	*	*
x	x	x
*	*	*
read	read	read
the	the	the
needed	need	needed
information	inform	information
from	from	from
stdin	stdin	stdin
,	,	,
and	and	and
write	write	write
the	the	the
build	build	build
section	section	section
.	.	.

x	x	x
*	*	*
/	/	/
xvoid	xvoid	xvoid
xoutput_build	xoutput_build	xoutput_build
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
build	build	build
,	,	,
bname	bname	bname
)	)	)
x	x	x
file	file	file
*	*	*
output	output	output
;	;	;
/	/	/
*	*	*
entry	entri	entry
'	'	'
s	s	s
output	output	output
file	file	file
stream	stream	stream
*	*	*
/	/	/
x	x	x
char	char	char
*	*	*
oname	onam	oname
;	;	;
/	/	/
*	*	*
name	name	name
of	of	of
the	the	the
output	output	output
file	file	file
*	*	*
/	/	/
x	x	x
file	file	file
*	*	*
build	build	build
;	;	;
/	/	/
*	*	*
open	open	open
build	build	build
file	file	file
stream	stream	stream
*	*	*
/	/	/
x	x	x
char	char	char
*	*	*
bname	bname	bname
;	;	;
/	/	/
*	*	*
name	name	name
of	of	of
the	the	the
build	build	build
file	file	file
*	*	*
/	/	/
x	x	x
{	{	{
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
write	write	write
the	the	the
start	start	start
of	of	of
the	the	the
section	section	section
x	x	x
*	*	*
/	/	/
x	x	x
fprintf	fprintf	fprintf
(	(	(
output	output	output
,	,	,
"	"	"
-	-	-
-	-	-
-	-	-
build	build	build
-	-	-
-	-	-
-	-	-
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
check_io	check_io	check_io
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
eof_not_ok	eof_not_ok	eof_not_ok
)	)	)
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
uuencode	uuencod	uuencode
the	the	the
program	program	program
file	file	file
x	x	x
*	*	*
/	/	/
x	x	x
uuencode	uuencod	uuencode
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
build	build	build
,	,	,
bname	bname	bname
,	,	,
uubuild_mode	uubuild_mod	uubuild_mode
,	,	,
uubuild_name	uubuild_nam	uubuild_name
)	)	)
;	;	;
x	x	x
return	return	return
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
output_program	output_program	output_program
-	-	-
output	output	output
the	the	the
-	-	-
-	-	-
-	-	-
program	program	program
-	-	-
-	-	-
-	-	-
section	section	section
x	x	x
*	*	*
x	x	x
*	*	*
read	read	read
the	the	the
needed	need	needed
information	inform	information
form	form	form
stdin	stdin	stdin
,	,	,
and	and	and
write	write	write
the	the	the
program	program	program
section	section	section
.	.	.

x	x	x
*	*	*
/	/	/
xvoid	xvoid	xvoid
xoutput_program	xoutput_program	xoutput_program
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
prog	prog	prog
,	,	,
pname	pname	pname
)	)	)
x	x	x
file	file	file
*	*	*
output	output	output
;	;	;
/	/	/
*	*	*
entry	entri	entry
'	'	'
s	s	s
output	output	output
file	file	file
stream	stream	stream
*	*	*
/	/	/
x	x	x
char	char	char
*	*	*
oname	onam	oname
;	;	;
/	/	/
*	*	*
name	name	name
of	of	of
the	the	the
output	output	output
file	file	file
*	*	*
/	/	/
x	x	x
file	file	file
*	*	*
prog	prog	prog
;	;	;
/	/	/
*	*	*
open	open	open
program	program	program
stream	stream	stream
*	*	*
/	/	/
x	x	x
char	char	char
*	*	*
pname	pname	pname
;	;	;
/	/	/
*	*	*
name	name	name
of	of	of
program	program	program
file	file	file
*	*	*
/	/	/
x	x	x
{	{	{
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
write	write	write
the	the	the
start	start	start
of	of	of
the	the	the
section	section	section
x	x	x
*	*	*
/	/	/
x	x	x
fprintf	fprintf	fprintf
(	(	(
output	output	output
,	,	,
"	"	"
-	-	-
-	-	-
-	-	-
program	program	program
-	-	-
-	-	-
-	-	-
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
check_io	check_io	check_io
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
eof_not_ok	eof_not_ok	eof_not_ok
)	)	)
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
uuencode	uuencod	uuencode
the	the	the
program	program	program
file	file	file
x	x	x
*	*	*
/	/	/
x	x	x
uuencode	uuencod	uuencode
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
prog	prog	prog
,	,	,
pname	pname	pname
,	,	,
uuprog_mode	uuprog_mod	uuprog_mode
,	,	,
uuprog_name	uuprog_nam	uuprog_name
)	)	)
;	;	;
x	x	x
return	return	return
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
output_end	output_end	output_end
-	-	-
output	output	output
the	the	the
-	-	-
-	-	-
-	-	-
end	end	end
-	-	-
-	-	-
-	-	-
section	section	section
x	x	x
*	*	*
x	x	x
*	*	*
read	read	read
the	the	the
needed	need	needed
information	inform	information
form	form	form
stdin	stdin	stdin
,	,	,
and	and	and
write	write	write
the	the	the
'	'	'
end	end	end
section	section	section
'	'	'
.	.	.

x	x	x
*	*	*
/	/	/
xvoid	xvoid	xvoid
xoutput_end	xoutput_end	xoutput_end
(	(	(
output	output	output
,	,	,
oname	onam	oname
)	)	)
x	x	x
file	file	file
*	*	*
output	output	output
;	;	;
/	/	/
*	*	*
entry	entri	entry
'	'	'
s	s	s
output	output	output
file	file	file
stream	stream	stream
*	*	*
/	/	/
x	x	x
char	char	char
*	*	*
oname	onam	oname
;	;	;
/	/	/
*	*	*
name	name	name
of	of	of
the	the	the
output	output	output
file	file	file
*	*	*
/	/	/
x	x	x
{	{	{
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
write	write	write
the	the	the
final	final	final
section	section	section
terminator	termin	terminator
x	x	x
*	*	*
/	/	/
x	x	x
fprintf	fprintf	fprintf
(	(	(
output	output	output
,	,	,
"	"	"
-	-	-
-	-	-
-	-	-
end	end	end
-	-	-
-	-	-
-	-	-
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
check_io	check_io	check_io
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
eof_not_ok	eof_not_ok	eof_not_ok
)	)	)
;	;	;
x	x	x
return	return	return
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
get_line	get_lin	get_line
-	-	-
get	get	get
an	an	an
answer	answer	answer
from	from	from
stdin	stdin	stdin
x	x	x
*	*	*
x	x	x
*	*	*
this	this	this
function	function	function
will	will	will
flush	flush	flush
stdout	stdout	stdout
,	,	,
in	in	in
case	case	case
a	a	a
prompt	prompt	prompt
is	is	is
pending	pend	pending
,	,	,
and	and	and
x	x	x
*	*	*
read	read	read
in	in	in
the	the	the
answer	answer	answer
.	.	.

x	x	x
*	*	*
x	x	x
*	*	*
this	this	this
function	function	function
returns	return	return
0	0	0
if	if	if
the	the	the
line	line	line
is	is	is
too	too	too
long	long	long
,	,	,
of	of	of
the	the	the
length	length	length
of	of	of
the	the	the
x	x	x
*	*	*
line	line	line
(	(	(
including	includ	including
the	the	the
newline	newlin	newline
)	)	)
of	of	of
the	the	the
line	line	line
was	was	wa
ok	ok	ok
.	.	.

this	this	this
function	function	function
does	doe	doe
x	x	x
*	*	*
not	not	not
return	return	return
if	if	if
error	error	error
or	or	or
eof	eof	eof
.	.	.

x	x	x
*	*	*
/	/	/
xint	xint	xint
xget_line	xget_lin	xget_line
(	(	(
buf	buf	buf
,	,	,
siz	siz	siz
,	,	,
maxcol	maxcol	maxcol
)	)	)
x	x	x
char	char	char
*	*	*
buf	buf	buf
;	;	;
/	/	/
*	*	*
input	input	input
buffer	buffer	buffer
*	*	*
/	/	/
x	x	x
int	int	int
siz	siz	siz
;	;	;
/	/	/
*	*	*
length	length	length
of	of	of
input	input	input
,	,	,
including	includ	including
the	the	the
newline	newlin	newline
*	*	*
/	/	/
x	x	x
int	int	int
maxcol	maxcol	maxcol
;	;	;
/	/	/
*	*	*
max	max	max
col	col	col
allowed	allow	allowed
,	,	,
0	0	0
=	=	=
>	>	>
disable	disabl	disable
check	check	check
*	*	*
/	/	/
x	x	x
{	{	{
x	x	x
int	int	int
length	length	length
;	;	;
/	/	/
*	*	*
the	the	the
length	length	length
of	of	of
the	the	the
input	input	input
line	line	line
*	*	*
/	/	/
x	x	x
x	x	x
/	/	/
*	*	*
flush	flush	flush
terminal	termin	terminal
output	output	output
*	*	*
/	/	/
x	x	x
fflush	fflush	fflush
(	(	(
stdout	stdout	stdout
)	)	)
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
read	read	read
the	the	the
line	line	line
*	*	*
/	/	/
x	x	x
if	if	if
(	(	(
fgets	fget	fgets
(	(	(
buf	buf	buf
,	,	,
siz	siz	siz
+	+	+
1	1	1
,	,	,
stdin	stdin	stdin
)	)	)
=	=	=
=	=	=
null	null	null
)	)	)
{	{	{
x	x	x
/	/	/
*	*	*
report	report	report
the	the	the
problem	problem	problem
*	*	*
/	/	/
x	x	x
check_io	check_io	check_io
(	(	(
stdin	stdin	stdin
,	,	,
"	"	"
stdin	stdin	stdin
"	"	"
,	,	,
eof_not_ok	eof_not_ok	eof_not_ok
)	)	)
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
look	look	look
for	for	for
the	the	the
newline	newlin	newline
*	*	*
/	/	/
x	x	x
length	length	length
=	=	=
strlen	strlen	strlen
(	(	(
buf	buf	buf
)	)	)
;	;	;
x	x	x
if	if	if
(	(	(
buf	buf	buf
[	[	[
length	length	length
-	-	-
1	1	1
]	]	]
!	!	!
=	=	=
'	'	'
\	\	\
n	n	n
'	'	'
)	)	)
{	{	{
x	x	x
int	int	int
eatchar	eatchar	eatchar
;	;	;
/	/	/
*	*	*
the	the	the
char	char	char
being	be	being
eaten	eaten	eaten
*	*	*
/	/	/
x	x	x
x	x	x
/	/	/
*	*	*
no	no	no
newline	newlin	newline
found	found	found
,	,	,
line	line	line
must	must	must
be	be	be
too	too	too
long	long	long
,	,	,
eat	eat	eat
the	the	the
rest	rest	rest
of	of	of
the	the	the
line	line	line
*	*	*
/	/	/
x	x	x
do	do	do
{	{	{
x	x	x
eatchar	eatchar	eatchar
=	=	=
fgetc	fgetc	fgetc
(	(	(
stdin	stdin	stdin
)	)	)
;	;	;
x	x	x
}	}	}
while	while	while
(	(	(
eatchar	eatchar	eatchar
!	!	!
=	=	=
eof	eof	eof
&	&	&
&	&	&
eatchar	eatchar	eatchar
!	!	!
=	=	=
'	'	'
\	\	\
n	n	n
'	'	'
)	)	)
;	;	;
x	x	x
check_io	check_io	check_io
(	(	(
stdin	stdin	stdin
,	,	,
"	"	"
stdin	stdin	stdin
"	"	"
,	,	,
eof_not_ok	eof_not_ok	eof_not_ok
)	)	)
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
report	report	report
the	the	the
situation	situat	situation
*	*	*
/	/	/
x	x	x
return	return	return
0	0	0
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
watch	watch	watch
for	for	for
long	long	long
lines	line	line
,	,	,
if	if	if
needed	need	needed
*	*	*
/	/	/
x	x	x
if	if	if
(	(	(
maxcol	maxcol	maxcol
>	>	>
0	0	0
&	&	&
&	&	&
(	(	(
length	length	length
>	>	>
maxcol	maxcol	maxcol
|	|	|
|	|	|
col_len	col_len	col_len
(	(	(
buf	buf	buf
)	)	)
>	>	>
maxcol	maxcol	maxcol
)	)	)
)	)	)
{	{	{
x	x	x
/	/	/
*	*	*
report	report	report
the	the	the
situation	situat	situation
*	*	*
/	/	/
x	x	x
return	return	return
0	0	0
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
return	return	return
length	length	length
*	*	*
/	/	/
x	x	x
return	return	return
length	length	length
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
output_till_dot	output_till_dot	output_till_dot
-	-	-
output	output	output
a	a	a
set	set	set
of	of	of
lines	line	line
until	until	until
'	'	'
.	.	.
'	'	'
by	by	by
itself	itself	itself
is	is	is
read	read	read
x	x	x
*	*	*
x	x	x
*	*	*
this	this	this
routine	routin	routine
will	will	will
read	read	read
a	a	a
set	set	set
of	of	of
lines	line	line
until	until	until
(	(	(
but	but	but
not	not	not
including	includ	including
)	)	)
x	x	x
*	*	*
a	a	a
single	singl	single
line	line	line
with	with	with
'	'	'
.	.	.
'	'	'
is	is	is
read	read	read
.	.	.

the	the	the
format	format	format
of	of	of
the	the	the
output	output	output
is	is	is
:	:	:

x	x	x
*	*	*

x	x	x
*	*	*
leader	leader	leader
:	:	:
\	\	\
tfirst	tfirst	tfirst
line	line	line

x	x	x
*	*	*
\	\	\
tnext	tnext	tnext
line	line	line

x	x	x
*	*	*
\	\	\
tnext	tnext	tnext
line	line	line

x	x	x
*	*	*
.	.	.
.	.	.
.	.	.

x	x	x
*	*	*
x	x	x
*	*	*
this	this	this
routine	routin	routine
will	will	will
not	not	not
return	return	return
if	if	if
i	i	i
/	/	/
o	o	o
error	error	error
or	or	or
eof	eof	eof
.	.	.

x	x	x
*	*	*
/	/	/
xvoid	xvoid	xvoid
xoutput_till_dot	xoutput_till_dot	xoutput_till_dot
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
leader	leader	leader
)	)	)
x	x	x
file	file	file
*	*	*
output	output	output
;	;	;
/	/	/
*	*	*
entry	entri	entry
'	'	'
s	s	s
output	output	output
file	file	file
stream	stream	stream
*	*	*
/	/	/
x	x	x
char	char	char
*	*	*
oname	onam	oname
;	;	;
/	/	/
*	*	*
name	name	name
of	of	of
the	the	the
output	output	output
file	file	file
*	*	*
/	/	/
x	x	x
char	char	char
*	*	*
leader	leader	leader
;	;	;
/	/	/
*	*	*
the	the	the
lead	lead	lead
text	text	text
for	for	for
the	the	the
first	first	first
line	line	line
*	*	*
/	/	/
x	x	x
{	{	{
x	x	x
char	char	char
buf	buf	buf
[	[	[
bufsiz	bufsiz	bufsiz
+	+	+
1	1	1
]	]	]
;	;	;
/	/	/
*	*	*
input	input	input
buffer	buffer	buffer
*	*	*
/	/	/
x	x	x
int	int	int
count	count	count
;	;	;
/	/	/
*	*	*
lines	line	line
read	read	read
*	*	*
/	/	/
x	x	x
int	int	int
done	done	done
=	=	=
false	fals	false
;	;	;
/	/	/
*	*	*
true	true	true
=	=	=
>	>	>
finished	finish	finished
reading	read	reading
input	input	input
*	*	*
/	/	/
x	x	x
x	x	x
/	/	/
*	*	*
instruct	instruct	instruct
the	the	the
user	user	user
on	on	on
how	how	how
to	to	to
input	input	input
*	*	*
/	/	/
x	x	x
printf	printf	printf
(	(	(
"	"	"
\	\	\
nto	nto	nto
end	end	end
input	input	input
,	,	,
enter	enter	enter
a	a	a
line	line	line
with	with	with
a	a	a
single	singl	single
period	period	period
.	.	.
\	\	\
n	n	n
"	"	"
)	)	)
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
read	read	read
lines	line	line
until	until	until
'	'	'
.	.	.
'	'	'
or	or	or
eof	eof	eof
*	*	*
/	/	/
x	x	x
count	count	count
=	=	=
0	0	0
;	;	;
x	x	x
while	while	while
(	(	(
!	!	!
done	done	done
)	)	)
{	{	{
x	x	x
/	/	/
*	*	*
issue	issu	issue
the	the	the
prompt	prompt	prompt
*	*	*
/	/	/
x	x	x
printf	printf	printf
(	(	(
"	"	"
%	%	%
s	s	s
\	\	\
t	t	t
"	"	"
,	,	,
(	(	(
count	count	count
>	>	>
0	0	0
)	)	)
?	?	?

"	"	"
"	"	"
:	:	:
leader	leader	leader
)	)	)
;	;	;
x	x	x
fflush	fflush	fflush
(	(	(
stdout	stdout	stdout
)	)	)
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
get	get	get
the	the	the
line	line	line
*	*	*
/	/	/
x	x	x
if	if	if
(	(	(
get_line	get_lin	get_line
(	(	(
buf	buf	buf
,	,	,
bufsiz	bufsiz	bufsiz
,	,	,
max_col	max_col	max_col
-	-	-
9	9	9
)	)	)
<	<	<
=	=	=
0	0	0
)	)	)
{	{	{
x	x	x
printf	printf	printf
(	(	(
"	"	"
\	\	\
nline	nline	nline
too	too	too
long	long	long
,	,	,
please	pleas	please
re	re	re
-	-	-
enter	enter	enter
:	:	:
\	\	\
n	n	n
\	\	\
t	t	t
"	"	"
)	)	)
;	;	;
x	x	x
continue	continu	continue
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
note	note	note
if	if	if
'	'	'
.	.	.
'	'	'
was	was	wa
read	read	read
*	*	*
/	/	/
x	x	x
if	if	if
(	(	(
strcmp	strcmp	strcmp
(	(	(
buf	buf	buf
,	,	,
"	"	"
.	.	.
\	\	\
n	n	n
"	"	"
)	)	)
=	=	=
=	=	=
0	0	0
)	)	)
{	{	{
x	x	x
done	done	done
=	=	=
true	true	true
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
write	write	write
line	line	line
if	if	if
we	we	we
read	read	read
something	someth	something
*	*	*
/	/	/
x	x	x
if	if	if
(	(	(
!	!	!
done	done	done
)	)	)
{	{	{
x	x	x
fprintf	fprintf	fprintf
(	(	(
output	output	output
,	,	,
"	"	"
%	%	%
s	s	s
\	\	\
t	t	t
%	%	%
s	s	s
"	"	"
,	,	,
(	(	(
count	count	count
+	+	+
+	+	+
>	>	>
0	0	0
)	)	)
?	?	?

"	"	"
"	"	"
:	:	:
leader	leader	leader
,	,	,
buf	buf	buf
)	)	)
;	;	;
x	x	x
check_io	check_io	check_io
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
eof_not_ok	eof_not_ok	eof_not_ok
)	)	)
;	;	;
x	x	x
}	}	}
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
if	if	if
no	no	no
lines	line	line
read	read	read
,	,	,
at	at	at
least	least	least
output	output	output
something	someth	something
*	*	*
/	/	/
x	x	x
if	if	if
(	(	(
count	count	count
<	<	<
=	=	=
0	0	0
)	)	)
{	{	{
x	x	x
fprintf	fprintf	fprintf
(	(	(
output	output	output
,	,	,
"	"	"
%	%	%
s	s	s
\	\	\
t	t	t
.	.	.
\	\	\
n	n	n
"	"	"
,	,	,
leader	leader	leader
)	)	)
;	;	;
x	x	x
check_io	check_io	check_io
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
eof_not_ok	eof_not_ok	eof_not_ok
)	)	)
;	;	;
x	x	x
}	}	}
x	x	x
return	return	return
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
col_len	col_len	col_len
-	-	-
determine	determin	determine
the	the	the
highest	highest	highest
that	that	that
a	a	a
string	string	string
would	would	would
reach	reach	reach
x	x	x
*	*	*
x	x	x
*	*	*
given	given	given
a	a	a
string	string	string
,	,	,
this	this	this
routine	routin	routine
returns	return	return
that	that	that
a	a	a
string	string	string
would	would	would
reach	reach	reach
x	x	x
*	*	*
if	if	if
the	the	the
string	string	string
were	were	were
printed	print	printed
at	at	at
column	column	column
1	1	1
.	.	.

tab	tab	tab
stops	stop	stop
are	are	are
assumed	assum	assumed
x	x	x
*	*	*
to	to	to
start	start	start
at	at	at
9	9	9
,	,	,
17	17	17
,	,	,
25	25	25
,	,	,
33	33	33
,	,	,
.	.	.
.	.	.
.	.	.

x	x	x
*	*	*
/	/	/
xint	xint	xint
xcol_len	xcol_len	xcol_len
(	(	(
string	string	string
)	)	)
x	x	x
char	char	char
*	*	*
string	string	string
;	;	;
/	/	/
*	*	*
the	the	the
string	string	string
to	to	to
examine	examin	examine
*	*	*
/	/	/
x	x	x
{	{	{
x	x	x
int	int	int
col	col	col
;	;	;
/	/	/
*	*	*
current	current	current
column	column	column
*	*	*
/	/	/
x	x	x
char	char	char
*	*	*
p	p	p
;	;	;
/	/	/
*	*	*
current	current	current
char	char	char
*	*	*
/	/	/
x	x	x
x	x	x
/	/	/
*	*	*
scan	scan	scan
the	the	the
string	string	string
*	*	*
/	/	/
x	x	x
for	for	for
(	(	(
col	col	col
=	=	=
0	0	0
,	,	,
p	p	p
=	=	=
string	string	string
;	;	;
*	*	*
p	p	p
!	!	!
=	=	=
'	'	'
\	\	\
0	0	0
'	'	'
&	&	&
&	&	&
*	*	*
p	p	p
!	!	!
=	=	=
'	'	'
\	\	\
n	n	n
'	'	'
;	;	;
+	+	+
+	+	+
p	p	p
)	)	)
{	{	{
x	x	x
/	/	/
*	*	*
note	note	note
the	the	the
column	column	column
shift	shift	shift
*	*	*
/	/	/
x	x	x
col	col	col
=	=	=
(	(	(
*	*	*
p	p	p
=	=	=
=	=	=
'	'	'
\	\	\
t	t	t
'	'	'
)	)	)
?	?	?

1	1	1
+	+	+
(	(	(
(	(	(
col	col	col
+	+	+
8	8	8
)	)	)
/	/	/
8	8	8
*	*	*
8	8	8
)	)	)
:	:	:
col	col	col
+	+	+
1	1	1
;	;	;
x	x	x
}	}	}
x	x	x
if	if	if
(	(	(
*	*	*
p	p	p
=	=	=
=	=	=
'	'	'
\	\	\
n	n	n
'	'	'
)	)	)
{	{	{
x	x	x
-	-	-
-	-	-
col	col	col
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
return	return	return
the	the	the
highest	highest	highest
column	column	column
*	*	*
/	/	/
x	x	x
return	return	return
col	col	col
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
check_io	check_io	check_io
-	-	-
check	check	check
for	for	for
eof	eof	eof
or	or	or
i	i	i
/	/	/
o	o	o
error	error	error
on	on	on
a	a	a
stream	stream	stream
x	x	x
*	*	*
x	x	x
*	*	*
does	doe	doe
not	not	not
return	return	return
if	if	if
eof	eof	eof
or	or	or
i	i	i
/	/	/
o	o	o
error	error	error
.	.	.

x	x	x
*	*	*
/	/	/
xvoid	xvoid	xvoid
xcheck_io	xcheck_io	xcheck_io
(	(	(
stream	stream	stream
,	,	,
name	name	name
,	,	,
eof_ok	eof_ok	eof_ok
)	)	)
x	x	x
file	file	file
*	*	*
stream	stream	stream
;	;	;
/	/	/
*	*	*
the	the	the
stream	stream	stream
to	to	to
check	check	check
*	*	*
/	/	/
x	x	x
char	char	char
*	*	*
name	name	name
;	;	;
/	/	/
*	*	*
the	the	the
name	name	name
of	of	of
this	this	this
stream	stream	stream
*	*	*
/	/	/
x	x	x
int	int	int
eof_ok	eof_ok	eof_ok
;	;	;
/	/	/
*	*	*
eof_ok	eof_ok	eof_ok
or	or	or
eof_not_ok	eof_not_ok	eof_not_ok
*	*	*
/	/	/
x	x	x
{	{	{
x	x	x
/	/	/
*	*	*
test	test	test
for	for	for
i	i	i
/	/	/
o	o	o
error	error	error
*	*	*
/	/	/
x	x	x
if	if	if
(	(	(
ferror	ferror	ferror
(	(	(
stream	stream	stream
)	)	)
)	)	)
{	{	{
x	x	x
fprintf	fprintf	fprintf
(	(	(
stderr	stderr	stderr
,	,	,
"	"	"
%	%	%
s	s	s
:	:	:
error	error	error
on	on	on
%	%	%
s	s	s
:	:	:
"	"	"
,	,	,
program	program	program
,	,	,
name	name	name
)	)	)
;	;	;
x	x	x
perror	perror	perror
(	(	(
"	"	"
"	"	"
)	)	)
;	;	;
x	x	x
exit	exit	exit
(	(	(
1	1	1
)	)	)
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
test	test	test
for	for	for
eof	eof	eof
*	*	*
/	/	/
x	x	x
}	}	}
else	els	else
if	if	if
(	(	(
eof_ok	eof_ok	eof_ok
=	=	=
=	=	=
eof_not_ok	eof_not_ok	eof_not_ok
&	&	&
&	&	&
feof	feof	feof
(	(	(
stream	stream	stream
)	)	)
)	)	)
{	{	{
x	x	x
fprintf	fprintf	fprintf
(	(	(
stderr	stderr	stderr
,	,	,
"	"	"
%	%	%
s	s	s
:	:	:
eof	eof	eof
on	on	on
%	%	%
s	s	s
\	\	\
n	n	n
"	"	"
,	,	,
program	program	program
,	,	,
name	name	name
)	)	)
;	;	;
x	x	x
exit	exit	exit
(	(	(
1	1	1
)	)	)
;	;	;
x	x	x
}	}	}
x	x	x
return	return	return
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
uuencode	uuencod	uuencode
-	-	-
uuencode	uuencod	uuencode
a	a	a
file	file	file
x	x	x
*	*	*
x	x	x
*	*	*
perform	perform	perform
the	the	the
uuencoding	uuencod	uuencoding
process	process	process
identical	ident	identical
to	to	to
the	the	the
process	process	process
performed	perform	performed
x	x	x
*	*	*
by	by	by
the	the	the
uuencode	uuencod	uuencode
(	(	(
1	1	1
)	)	)
utility	util	utility
.	.	.

x	x	x
*	*	*
x	x	x
*	*	*
this	this	this
routine	routin	routine
implements	implement	implement
the	the	the
algorithm	algorithm	algorithm
described	describ	described
in	in	in
the	the	the
uuencode	uuencod	uuencode
(	(	(
5	5	5
)	)	)
x	x	x
*	*	*
4	4	4
.	.	.
3bsd	3bsd	3bsd
reno	reno	reno
man	man	man
page	page	page
.	.	.

x	x	x
*	*	*
/	/	/
xvoid	xvoid	xvoid
xuuencode	xuuencod	xuuencode
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
infile	infil	infile
,	,	,
iname	inam	iname
,	,	,
umode	umod	umode
,	,	,
uname	unam	uname
)	)	)
x	x	x
file	file	file
*	*	*
output	output	output
;	;	;
/	/	/
*	*	*
output	output	output
file	file	file
stream	stream	stream
*	*	*
/	/	/
x	x	x
char	char	char
*	*	*
oname	onam	oname
;	;	;
/	/	/
*	*	*
output	output	output
filename	filenam	filename
*	*	*
/	/	/
x	x	x
file	file	file
*	*	*
infile	infil	infile
;	;	;
/	/	/
*	*	*
input	input	input
file	file	file
stream	stream	stream
*	*	*
/	/	/
x	x	x
char	char	char
*	*	*
iname	inam	iname
;	;	;
/	/	/
*	*	*
input	input	input
filename	filenam	filename
*	*	*
/	/	/
x	x	x
int	int	int
umode	umod	umode
;	;	;
/	/	/
*	*	*
the	the	the
mode	mode	mode
to	to	to
put	put	put
on	on	on
the	the	the
uuencode	uuencod	uuencode
file	file	file
*	*	*
/	/	/
x	x	x
char	char	char
*	*	*
uname	unam	uname
;	;	;
/	/	/
*	*	*
name	name	name
to	to	to
put	put	put
on	on	on
the	the	the
uuencode	uuencod	uuencode
file	file	file
*	*	*
/	/	/
x	x	x
{	{	{
x	x	x
char	char	char
buf	buf	buf
[	[	[
uuencode_len	uuencode_len	uuencode_len
+	+	+
1	1	1
]	]	]
;	;	;
/	/	/
*	*	*
the	the	the
uuencode	uuencod	uuencode
buffer	buffer	buffer
*	*	*
/	/	/
x	x	x
int	int	int
read_len	read_len	read_len
;	;	;
/	/	/
*	*	*
actual	actual	actual
number	number	number
of	of	of
chars	char	char
read	read	read
*	*	*
/	/	/
x	x	x
int	int	int
val	val	val
;	;	;
/	/	/
*	*	*
6	6	6
bit	bit	bit
chunk	chunk	chunk
from	from	from
buf	buf	buf
*	*	*
/	/	/
x	x	x
char	char	char
filler	filler	filler
=	=	=
'	'	'
\	\	\
0	0	0
'	'	'
;	;	;
/	/	/
*	*	*
filler	filler	filler
uuencode	uuencod	uuencode
pad	pad	pad
text	text	text
*	*	*
/	/	/
x	x	x
char	char	char
*	*	*
p	p	p
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
output	output	output
the	the	the
initial	initi	initial
uuencode	uuencod	uuencode
header	header	header
x	x	x
*	*	*
/	/	/
x	x	x
fprintf	fprintf	fprintf
(	(	(
output	output	output
,	,	,
"	"	"
begin	begin	begin
%	%	%
o	o	o
%	%	%
s	s	s
\	\	\
n	n	n
"	"	"
,	,	,
umode	umod	umode
,	,	,
uname	unam	uname
)	)	)
;	;	;
x	x	x
check_io	check_io	check_io
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
eof_not_ok	eof_not_ok	eof_not_ok
)	)	)
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
clear	clear	clear
out	out	out
the	the	the
input	input	input
buffer	buffer	buffer
x	x	x
*	*	*
/	/	/
x	x	x
for	for	for
(	(	(
p	p	p
=	=	=
buf	buf	buf
;	;	;
p	p	p
<	<	<
&	&	&
buf	buf	buf
[	[	[
sizeof	sizeof	sizeof
(	(	(
buf	buf	buf
)	)	)
/	/	/
sizeof	sizeof	sizeof
(	(	(
buf	buf	buf
[	[	[
0	0	0
]	]	]
)	)	)
]	]	]
;	;	;
+	+	+
+	+	+
p	p	p
)	)	)
{	{	{
x	x	x
*	*	*
p	p	p
=	=	=
'	'	'
\	\	\
0	0	0
'	'	'
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
we	we	we
will	will	will
process	process	process
uuencode_len	uuencode_len	uuencode_len
chars	char	char
at	at	at
a	a	a
time	time	time
,	,	,
forming	form	forming
x	x	x
*	*	*
a	a	a
single	singl	single
output	output	output
line	line	line
each	each	each
time	time	time
.	.	.

x	x	x
*	*	*
/	/	/
x	x	x
while	while	while
(	(	(
(	(	(
read_len	read_len	read_len
=	=	=
fread	fread	fread
(	(	(
buf	buf	buf
,	,	,
sizeof	sizeof	sizeof
(	(	(
buf	buf	buf
[	[	[
0	0	0
]	]	]
)	)	)
,	,	,
uuencode_len	uuencode_len	uuencode_len
,	,	,
infile	infil	infile
)	)	)
)	)	)
>	>	>
0	0	0
)	)	)
{	{	{
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
the	the	the
first	first	first
character	charact	character
is	is	is
the	the	the
length	length	length
character	charact	character
x	x	x
*	*	*
/	/	/
x	x	x
fputc	fputc	fputc
(	(	(
uuencode	uuencod	uuencode
(	(	(
read_len	read_len	read_len
)	)	)
,	,	,
output	output	output
)	)	)
;	;	;
x	x	x
check_io	check_io	check_io
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
eof_not_ok	eof_not_ok	eof_not_ok
)	)	)
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
we	we	we
will	will	will
convert	convert	convert
24	24	24
bits	bit	bit
at	at	at
a	a	a
time	time	time
.	.	.

thus	thus	thus
we	we	we
will	will	will
convert	convert	convert
x	x	x
*	*	*
3	3	3
sets	set	set
of	of	of
8	8	8
bits	bit	bit
into	into	into
4	4	4
sets	set	set
of	of	of
uuencoded	uuencod	uuencoded
6	6	6
bits	bit	bit
.	.	.

x	x	x
*	*	*
/	/	/
x	x	x
for	for	for
(	(	(
p	p	p
=	=	=
buf	buf	buf
;	;	;
read_len	read_len	read_len
>	>	>
0	0	0
;	;	;
read_len	read_len	read_len
-	-	-
=	=	=
3	3	3
,	,	,
p	p	p
+	+	+
=	=	=
3	3	3
)	)	)
{	{	{
x	x	x
x	x	x
/	/	/
*	*	*
bits	bit	bit
0	0	0
to	to	to
5	5	5
*	*	*
/	/	/
x	x	x
val	val	val
=	=	=
(	(	(
p	p	p
[	[	[
0	0	0
]	]	]
>	>	>
>	>	>
2	2	2
)	)	)
&	&	&
0x3f	0x3f	0x3f
;	;	;
x	x	x
fputc	fputc	fputc
(	(	(
uuencode	uuencod	uuencode
(	(	(
val	val	val
)	)	)
,	,	,
output	output	output
)	)	)
;	;	;
x	x	x
check_io	check_io	check_io
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
eof_not_ok	eof_not_ok	eof_not_ok
)	)	)
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
bits	bit	bit
6	6	6
to	to	to
11	11	11
*	*	*
/	/	/
x	x	x
val	val	val
=	=	=
(	(	(
(	(	(
p	p	p
[	[	[
0	0	0
]	]	]
<	<	<
<	<	<
4	4	4
)	)	)
&	&	&
0x30	0x30	0x30
)	)	)
|	|	|
(	(	(
(	(	(
p	p	p
[	[	[
1	1	1
]	]	]
>	>	>
>	>	>
4	4	4
)	)	)
&	&	&
0x0f	0x0f	0x0f
)	)	)
;	;	;
x	x	x
fputc	fputc	fputc
(	(	(
uuencode	uuencod	uuencode
(	(	(
val	val	val
)	)	)
,	,	,
output	output	output
)	)	)
;	;	;
x	x	x
check_io	check_io	check_io
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
eof_not_ok	eof_not_ok	eof_not_ok
)	)	)
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
bits	bit	bit
12	12	12
to	to	to
17	17	17
*	*	*
/	/	/
x	x	x
val	val	val
=	=	=
(	(	(
(	(	(
p	p	p
[	[	[
1	1	1
]	]	]
<	<	<
<	<	<
2	2	2
)	)	)
&	&	&
0x3c	0x3c	0x3c
)	)	)
|	|	|
(	(	(
(	(	(
p	p	p
[	[	[
2	2	2
]	]	]
>	>	>
>	>	>
6	6	6
)	)	)
&	&	&
0x03	0x03	0x03
)	)	)
;	;	;
x	x	x
fputc	fputc	fputc
(	(	(
uuencode	uuencod	uuencode
(	(	(
val	val	val
)	)	)
,	,	,
output	output	output
)	)	)
;	;	;
x	x	x
check_io	check_io	check_io
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
eof_not_ok	eof_not_ok	eof_not_ok
)	)	)
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
bits	bit	bit
18	18	18
to	to	to
23	23	23
*	*	*
/	/	/
x	x	x
val	val	val
=	=	=
p	p	p
[	[	[
2	2	2
]	]	]
&	&	&
0x3f	0x3f	0x3f
;	;	;
x	x	x
fputc	fputc	fputc
(	(	(
uuencode	uuencod	uuencode
(	(	(
val	val	val
)	)	)
,	,	,
output	output	output
)	)	)
;	;	;
x	x	x
check_io	check_io	check_io
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
eof_not_ok	eof_not_ok	eof_not_ok
)	)	)
;	;	;
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
end	end	end
of	of	of
uuencode_len	uuencode_len	uuencode_len
line	line	line
*	*	*
/	/	/
x	x	x
fputc	fputc	fputc
(	(	(
'	'	'
\	\	\
n	n	n
'	'	'
,	,	,
output	output	output
)	)	)
;	;	;
x	x	x
check_io	check_io	check_io
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
eof_not_ok	eof_not_ok	eof_not_ok
)	)	)
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
x	x	x
*	*	*
clear	clear	clear
out	out	out
the	the	the
input	input	input
buffer	buffer	buffer
(	(	(
don	don	don
'	'	'
t	t	t
depend	depend	depend
on	on	on
bzero	bzero	bzero
(	(	(
)	)	)
or	or	or
memset	memset	memset
(	(	(
)	)	)
)	)	)
x	x	x
*	*	*
/	/	/
x	x	x
for	for	for
(	(	(
p	p	p
=	=	=
buf	buf	buf
;	;	;
p	p	p
<	<	<
&	&	&
buf	buf	buf
[	[	[
sizeof	sizeof	sizeof
(	(	(
buf	buf	buf
)	)	)
/	/	/
sizeof	sizeof	sizeof
(	(	(
buf	buf	buf
[	[	[
0	0	0
]	]	]
)	)	)
]	]	]
;	;	;
+	+	+
+	+	+
p	p	p
)	)	)
{	{	{
x	x	x
*	*	*
p	p	p
=	=	=
'	'	'
\	\	\
0	0	0
'	'	'
;	;	;
x	x	x
}	}	}
x	x	x
}	}	}
x	x	x
x	x	x
/	/	/
*	*	*
check	check	check
the	the	the
last	last	last
read	read	read
on	on	on
the	the	the
input	input	input
file	file	file
*	*	*
/	/	/
x	x	x
check_io	check_io	check_io
(	(	(
infile	infil	infile
,	,	,
iname	inam	iname
,	,	,
eof_ok	eof_ok	eof_ok
)	)	)
;	;	;
x	x	x
x	x	x
/	/	/
*	*	*
write	write	write
end	end	end
of	of	of
uuencode	uuencod	uuencode
file	file	file
*	*	*
/	/	/
x	x	x
fprintf	fprintf	fprintf
(	(	(
output	output	output
,	,	,
"	"	"
%	%	%
c	c	c
\	\	\
nend	nend	nend
\	\	\
n	n	n
"	"	"
,	,	,
uuencode	uuencod	uuencode
(	(	(
filler	filler	filler
)	)	)
)	)	)
;	;	;
x	x	x
check_io	check_io	check_io
(	(	(
output	output	output
,	,	,
oname	onam	oname
,	,	,
eof_not_ok	eof_not_ok	eof_not_ok
)	)	)
;	;	;
x	x	x
}	}	}
shar_eof	shar_eof	shar_eof
chmod	chmod	chmod
0444	0444	0444
mkentry	mkentri	mkentry
.	.	.
c	c	c
|	|	|
|	|	|
echo	echo	echo
"	"	"
restore	restor	restore
of	of	of
mkentry	mkentri	mkentry
.	.	.
c	c	c
failed	fail	failed
"	"	"
set	set	set
`	`	`
wc	wc	wc
-	-	-
c	c	c
mkentry	mkentri	mkentry
.	.	.
c	c	c
`	`	`
;	;	;
wc_c	wc_c	wc_c
=	=	=
$	$	$
1	1	1
if	if	if
test	test	test
"	"	"
$	$	$
wc_c	wc_c	wc_c
"	"	"
!	!	!
=	=	=
"	"	"
34482	34482	34482
"	"	"
;	;	;
then	then	then

echo	echo	echo
original	origin	original
size	size	size
34482	34482	34482
,	,	,
current	current	current
size	size	size
$	$	$
wc_c	wc_c	wc_c
fi	fi	fi

#	#	#
=	=	=
=	=	=
=	=	=
=	=	=
=	=	=
=	=	=
=	=	=
=	=	=
=	=	=
=	=	=
=	=	=
=	=	=
=	=	=
obfuscate	obfusc	obfuscate
.	.	.
info	info	info
=	=	=
=	=	=
=	=	=
=	=	=
=	=	=
=	=	=
=	=	=
=	=	=
=	=	=
=	=	=
=	=	=
=	=	=
=	=	=
=	=	=
echo	echo	echo
"	"	"
x	x	x
-	-	-
extracting	extract	extracting
obfuscate	obfusc	obfuscate
.	.	.
info	info	info
(	(	(
text	text	text
)	)	)
"	"	"
sed	sed	sed
'	'	'
s	s	s
/	/	/
^	^	^
x	x	x
/	/	/
/	/	/
'	'	'
<	<	<
<	<	<
'	'	'
shar_eof	shar_eof	shar_eof
'	'	'
>	>	>
obfuscate	obfusc	obfuscate
.	.	.
info	info	info
&	&	&
&	&	&
x1993	x1993	x1993
obfuscated	obfusc	obfuscated
contest	contest	contest
information	inform	information
x	x	x
xcopyright	xcopyright	xcopyright
(	(	(
c	c	c
)	)	)
landon	landon	landon
curt	curt	curt
noll	noll	noll
&	&	&
larry	larri	larry
bassel	bassel	bassel
,	,	,
1993	1993	1993
.	.	.

xall	xall	xall
rights	right	right
reserved	reserv	reserved
.	.	.

permission	permiss	permission
for	for	for
personal	person	personal
,	,	,
education	educ	education
or	or	or
non	non	non
-	-	-
profit	profit	profit
use	use	use
is	is	is
xgranted	xgrant	xgranted
provided	provid	provided
this	this	this
this	this	this
copyright	copyright	copyright
and	and	and
notice	notic	notice
are	are	are
included	includ	included
in	in	in
its	it	it
entirety	entireti	entirety
xand	xand	xand
remains	remain	remains
unaltered	unalt	unaltered
.	.	.

all	all	all
other	other	other
uses	use	us
must	must	must
receive	receiv	receive
prior	prior	prior
permission	permiss	permission
in	in	in
writing	write	writing
xfrom	xfrom	xfrom
both	both	both
landon	landon	landon
curt	curt	curt
noll	noll	noll
and	and	and
larry	larri	larry
bassel	bassel	bassel
.	.	.

x	x	x
xthe	xthe	xthe
international	intern	international
obfuscated	obfusc	obfuscated
c	c	c
code	code	code
contest	contest	contest
(	(	(
ioccc	ioccc	ioccc
)	)	)
,	,	,
in	in	in
the	the	the
sprit	sprit	sprit
of	of	of
xco	xco	xco
-	-	-
operation	oper	operation
,	,	,
is	is	is
willing	will	willing
mention	mention	mention
other	other	other
programming	program	programming
contents	content	content
,	,	,
as	as	a
space	space	space
xpermits	xpermit	xpermits
.	.	.

x	x	x
xhow	xhow	xhow
to	to	to
have	have	have
your	your	your
contest	contest	contest
included	includ	included
in	in	in
this	this	this
file	file	file
:	:	:
x	x	x
x	x	x
if	if	if
you	you	you
wish	wish	wish
the	the	the
ioccc	ioccc	ioccc
judges	judg	judge
to	to	to
include	includ	include
your	your	your
contest	contest	contest
in	in	in
this	this	this
file	file	file
,	,	,
x	x	x
send	send	send
a	a	a
request	request	request
to	to	to
:	:	:
x	x	x
x	x	x
judges@toad.com	judges@toad.com	judges@toad.com
x	x	x
x	x	x
we	we	we
request	request	request
that	that	that
contest	contest	contest
descriptions	descript	description
be	be	be
limited	limit	limited
to	to	to
50	50	50
lines	line	line
and	and	and
to	to	to
x	x	x
not	not	not
exceed	exceed	exceed
2500	2500	2500
bytes	byte	byte
.	.	.

we	we	we
typically	typic	typically
request	request	request
that	that	that
your	your	your
contest	contest	contest
x	x	x
include	includ	include
a	a	a
current	current	current
description	descript	description
of	of	of
the	the	the
ioccc	ioccc	ioccc
.	.	.

x	x	x
x	x	x
in	in	in
order	order	order
to	to	to
be	be	be
included	includ	included
in	in	in
this	this	this
file	file	file
for	for	for
given	given	given
year	year	year
,	,	,
we	we	we
must	must	must
x	x	x
receive	receiv	receive
a	a	a
current	current	current
description	descript	description
no	no	no
earlier	earlier	earlier
than	than	than
jan	jan	jan
1	1	1
00	00	00
:	:	:
00	00	00
:	:	:
00	00	00
utc	utc	utc
and	and	and
x	x	x
no	no	no
later	later	later
than	than	than
feb	feb	feb
15	15	15
00	00	00
:	:	:
00	00	00
:	:	:
00	00	00
utc	utc	utc
.	.	.

agreement	agreement	agreement
to	to	to
publish	publish	publish
your	your	your
x	x	x
contest	contest	contest
must	must	must
also	also	also
be	be	be
obtained	obtain	obtained
prior	prior	prior
to	to	to
feb	feb	feb
15	15	15
.	.	.

annual	annual	annual
contests	contest	contest
x	x	x
that	that	that
fail	fail	fail
to	to	to
submit	submit	submit
a	a	a
new	new	new
entry	entri	entry
will	will	will
be	be	be
dropped	drop	dropped
from	from	from
this	this	this
file	file	file
.	.	.

x	x	x
xofficial	xoffici	xofficial
disclaimer	disclaim	disclaimer
:	:	:
(	(	(
pardon	pardon	pardon
the	the	the
officialese	officiales	officialese
)	)	)
x	x	x
x	x	x
the	the	the
contents	content	content
noted	note	noted
below	below	below
,	,	,
other	other	other
than	than	than
the	the	the
ioccc	ioccc	ioccc
,	,	,
are	are	are
not	not	not
affiliated	affili	affiliated
x	x	x
with	with	with
the	the	the
ioccc	ioccc	ioccc
,	,	,
nor	nor	nor
are	are	are
they	they	they
endorsed	endors	endorsed
by	by	by
the	the	the
ioccc	ioccc	ioccc
.	.	.

we	we	we
reserve	reserv	reserve
the	the	the
x	x	x
right	right	right
to	to	to
refuse	refus	refuse
to	to	to
print	print	print
information	inform	information
about	about	about
a	a	a
given	given	given
contest	contest	contest
.	.	.

x	x	x
x	x	x
the	the	the
information	inform	information
below	below	below
was	was	wa
provided	provid	provided
by	by	by
the	the	the
particular	particular	particular
contest	contest	contest
x	x	x
organizer	organ	organizer
(	(	(
s	s	s
)	)	)
and	and	and
printed	print	printed
by	by	by
permission	permiss	permission
.	.	.

please	pleas	please
contact	contact	contact
the	the	the
x	x	x
contest	contest	contest
organizer	organ	organizer
(	(	(
s	s	s
)	)	)
directly	direct	directly
regarding	regard	regarding
their	their	their
contents	content	content
.	.	.

x	x	x
xwith	xwith	xwith
that	that	that
official	offici	official
notice	notic	notice
given	given	given
,	,	,
we	we	we
present	present	present
for	for	for
your	your	your
enjoyment	enjoy	enjoyment
,	,	,
the	the	the
following	follow	following
xinformation	xinform	xinformation
about	about	about
contents	content	content
:	:	:
x	x	x
x	x	x
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
x	x	x
x	x	x
10th	10th	10th
international	intern	international
obfuscated	obfusc	obfuscated
c	c	c
contest	contest	contest
x	x	x
x	x	x
"	"	"
the	the	the
original	origin	original
obfuscated	obfusc	obfuscated
contest	contest	contest
"	"	"
x	x	x
x	x	x
obfuscate	obfusc	obfuscate
:	:	:
tr	tr	tr
.	.	.
v	v	v
.	.	.
-	-	-
cated	cate	cated
,	,	,
-	-	-
cating	cate	cating
,	,	,
-	-	-
cates	cate	cates
.	.	.

1	1	1
.	.	.

a	a	a
.	.	.
to	to	to
render	render	render
obscure	obscur	obscure
.	.	.

x	x	x
b	b	b
.	.	.

to	to	to
darken	darken	darken
.	.	.

2	2	2
.	.	.

to	to	to
confuse	confus	confuse
:	:	:
their	their	their
emotions	emot	emotion
obfuscated	obfusc	obfuscated

x	x	x
their	their	their
judgment	judgment	judgment
.	.	.

[	[	[
llat	llat	llat
.	.	.

obfuscare	obfuscar	obfuscare
,	,	,
to	to	to
darken	darken	darken
:	:	:
ob	ob	ob
(	(	(
intensive	intens	intensive
)	)	)
+	+	+
x	x	x
lat	lat	lat
.	.	.

fuscare	fuscar	fuscare
,	,	,
to	to	to
darken	darken	darken
<	<	<
fuscus	fuscus	fuscus
,	,	,
dark	dark	dark
.	.	.
]	]	]
-	-	-
obfuscation	obfusc	obfuscation
n	n	n
.	.	.

x	x	x
obfuscatory	obfuscatori	obfuscatory
adj	adj	adj
.	.	.

x	x	x
x	x	x
goals	goal	goal
of	of	of
the	the	the
contest	contest	contest
:	:	:
x	x	x
x	x	x
*	*	*
to	to	to
write	write	write
the	the	the
most	most	most
obscure	obscur	obscure
/	/	/
obfuscated	obfusc	obfuscated
c	c	c
program	program	program
under	under	under
the	the	the
rules	rule	rule
below	below	below
.	.	.

x	x	x
*	*	*
to	to	to
show	show	show
the	the	the
importance	import	importance
of	of	of
programming	program	programming
style	style	style
,	,	,
in	in	in
an	an	an
ironic	iron	ironic
way	way	way
.	.	.

x	x	x
*	*	*
to	to	to
stress	stress	stress
c	c	c
compilers	compil	compiler
with	with	with
unusual	unusu	unusual
code	code	code
.	.	.

x	x	x
*	*	*
to	to	to
illustrate	illustr	illustrate
some	some	some
of	of	of
the	the	the
subtleties	subtleti	subtlety
of	of	of
the	the	the
c	c	c
language	languag	language
.	.	.

x	x	x
*	*	*
to	to	to
provide	provid	provide
a	a	a
safe	safe	safe
forum	forum	forum
for	for	for
poor	poor	poor
c	c	c
code	code	code
.	.	.

:	:	:
-	-	-
)	)	)
x	x	x
x	x	x
the	the	the
ioccc	ioccc	ioccc
is	is	is
the	the	the
grandfather	grandfath	grandfather
of	of	of
usenet	usenet	usenet
programming	program	programming
contests	contest	contest
.	.	.

since	sinc	since
x	x	x
1984	1984	1984
,	,	,
this	this	this
contest	contest	contest
demonstrated	demonstr	demonstrated
that	that	that
a	a	a
program	program	program
that	that	that
simply	simpli	simply
works	work	work
x	x	x
correctly	correct	correctly
is	is	is
not	not	not
sufficient	suffici	sufficient
.	.	.

the	the	the
ioccc	ioccc	ioccc
has	has	ha
also	also	also
done	done	done
much	much	much
to	to	to
add	add	add
x	x	x
the	the	the
arcane	arcan	arcane
word	word	word
'	'	'
obfuscated	obfusc	obfuscated
'	'	'
back	back	back
into	into	into
the	the	the
english	english	english
language	languag	language
.	.	.

x	x	x
(	(	(
see	see	see
"	"	"
the	the	the
new	new	new
hacker	hacker	hacker
'	'	'
s	s	s
dictionary	dictionari	dictionary
"	"	"
by	by	by
eric	eric	eric
raymond	raymond	raymond
)	)	)
x	x	x
x	x	x
you	you	you
are	are	are
strongly	strong	strongly
encouraged	encourag	encouraged
to	to	to
read	read	read
the	the	the
new	new	new
contest	contest	contest
rules	rule	rule
before	befor	before
x	x	x
sending	send	sending
any	ani	any
entries	entri	entry
.	.	.

the	the	the
rules	rule	rule
,	,	,
and	and	and
sometimes	sometim	sometimes
the	the	the
contest	contest	contest
email	email	email
x	x	x
address	address	address
itself	itself	itself
,	,	,
change	chang	change
over	over	over
time	time	time
.	.	.

a	a	a
valid	valid	valid
entry	entri	entry
one	one	one
year	year	year
may	may	may
x	x	x
be	be	be
rejected	reject	rejected
in	in	in
a	a	a
later	later	later
year	year	year
due	due	due
to	to	to
changes	chang	change
in	in	in
the	the	the
rules	rule	rule
.	.	.

the	the	the
typical	typic	typical
x	x	x
start	start	start
date	date	date
for	for	for
contests	contest	contest
is	is	is
in	in	in
early	earli	early
march	march	march
.	.	.

contest	contest	contest
rules	rule	rule
are	are	are
normally	normal	normally
not	not	not
x	x	x
finalized	final	finalized
and	and	and
posted	post	posted
until	until	until
the	the	the
beginning	begin	beginning
of	of	of
the	the	the
contest	contest	contest
.	.	.

the	the	the
typical	typic	typical
x	x	x
closing	close	closing
date	date	date
for	for	for
contests	contest	contest
are	are	are
in	in	in
early	earli	early
may	may	may
.	.	.

x	x	x
x	x	x
the	the	the
rules	rule	rule
and	and	and
the	the	the
guidelines	guidelin	guideline
may	may	may
(	(	(
and	and	and
often	often	often
do	do	do
)	)	)
change	chang	change
from	from	from
year	year	year
to	to	to
x	x	x
year	year	year
.	.	.

you	you	you
should	should	should
be	be	be
sure	sure	sure
you	you	you
have	have	have
the	the	the
current	current	current
rules	rule	rule
and	and	and
guidelines	guidelin	guideline
x	x	x
prior	prior	prior
to	to	to
submitting	submit	submitting
entries	entri	entry
.	.	.

to	to	to
obtain	obtain	obtain
them	them	them
,	,	,
send	send	send
email	email	email
to	to	to
the	the	the
address	address	address
x	x	x
above	abov	above
and	and	and
use	use	use
the	the	the
subject	subject	subject
'	'	'
send	send	send
rules	rule	rule
'	'	'
.	.	.

x	x	x
x	x	x
one	one	one
may	may	may
obtain	obtain	obtain
winners	winner	winner
of	of	of
previous	previous	previous
contests	contest	contest
(	(	(
1984	1984	1984
to	to	to
date	date	date
)	)	)
,	,	,
via	via	via
ftp	ftp	ftp
from	from	from
:	:	:
x	x	x
x	x	x
host	host	host
:	:	:
ftp	ftp	ftp
.	.	.
uu	uu	uu
.	.	.
net	net	net
(	(	(
192	192	192
.	.	.
48	48	48
.	.	.
96	96	96
.	.	.
9	9	9
)	)	)
x	x	x
user	user	user
:	:	:
anonymous	anonym	anonymous
x	x	x
pass	pass	pas
:	:	:
yourname	yournam	yourname
@	@	@
yourhost	yourhost	yourhost
x	x	x
dir	dir	dir
:	:	:
~	~	~
/	/	/
pub	pub	pub
/	/	/
ioccc	ioccc	ioccc
x	x	x
x	x	x
as	as	a
a	a	a
last	last	last
resort	resort	resort
,	,	,
previous	previous	previous
winners	winner	winner
may	may	may
be	be	be
obtained	obtain	obtained
by	by	by
sending	send	sending
email	email	email
x	x	x
to	to	to
the	the	the
above	abov	above
address	address	address
.	.	.

please	pleas	please
use	use	use
the	the	the
subject	subject	subject
'	'	'
send	send	send
year	year	year
winners	winner	winner
'	'	'
,	,	,
x	x	x
where	where	where
year	year	year
is	is	is
a	a	a
single	singl	single
4	4	4
digit	digit	digit
year	year	year
,	,	,
a	a	a
year	year	year
range	rang	range
,	,	,
or	or	or
'	'	'
all	all	all
'	'	'
.	.	.

x	x	x
x	x	x
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
x	x	x
x	x	x
0th	0th	0th
international	intern	international
obfuscated	obfusc	obfuscated
perl	perl	perl
contest	contest	contest
x	x	x
by	by	by
:	:	:
landon	landon	landon
noll	noll	noll
&	&	&
larry	larri	larry
wall	wall	wall
x	x	x
x	x	x
this	this	this
content	content	content
is	is	is
being	be	being
planned	plan	planned
.	.	.

someday	someday	someday
when	when	when
landon	landon	landon
&	&	&
larry	larri	larry
are	are	are
not	not	not
too	too	too
x	x	x
busy	busi	busy
,	,	,
they	they	they
will	will	will
actually	actual	actually
get	get	get
around	around	around
to	to	to
posting	post	posting
the	the	the
first	first	first
set	set	set
of	of	of
rules	rule	rule
!	!	!

x	x	x
x	x	x
landon	landon	landon
says	say	say
:	:	:
"	"	"
yes	yes	yes
,	,	,
i	i	i
know	know	know
that	that	that
i	i	i
said	said	said
we	we	we
would	would	would
have	have	have
a	a	a
contest	contest	contest
in	in	in
1993	1993	1993
,	,	,
x	x	x
but	but	but
other	other	other
existing	exist	existing
projects	project	project
got	got	got
in	in	in
the	the	the
way	way	way
.	.	.

hopefully	hope	hopefully
x	x	x
something	someth	something
will	will	will
be	be	be
developed	develop	developed
after	after	after
nov	nov	nov
1993	1993	1993
.	.	.
"	"	"
x	x	x
x	x	x
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
-	-	-
x	x	x
x	x	x
2nd	2nd	2nd
international	intern	international
obfuscated	obfusc	obfuscated
postscript	postscript	postscript
contest	contest	contest
x	x	x
jonathan	jonathan	jonathan
monsarrat	monsarrat	monsarrat
(	(	(
jgm@cs.brown.edu	jgm@cs.brown.edu	jgm@cs.brown.edu
)	)	)
x	x	x
alena	alena	alena
lacova	lacova	lacova
(	(	(
alena@nikhef.nl	alena@nikhef.nl	alena@nikhef.nl
)	)	)
x	x	x
x	x	x
a	a	a
contest	contest	contest
of	of	of
programming	program	programming
skills	skill	skill
and	and	and
knowledge	knowledg	knowledge
,	,	,
exclusively	exclus	exclusively
for	for	for
the	the	the
x	x	x
postscript	postscript	postscript
programming	program	programming
language	languag	language
.	.	.

its	it	it
purpose	purpos	purpose
:	:	:

x	x	x

x	x	x
*	*	*
to	to	to
spread	spread	spread
knowledge	knowledg	knowledge
of	of	of
postscript	postscript	postscript
and	and	and
its	it	it
details	detail	detail
.	.	.

x	x	x
*	*	*
to	to	to
applaud	applaud	applaud
those	those	those
with	with	with
the	the	the
best	best	best
tricks	trick	trick
.	.	.

x	x	x
*	*	*
to	to	to
prove	prove	prove
that	that	that
humans	human	human
can	can	can
beat	beat	beat
those	those	those
damnable	damnabl	damnable
machine	machin	machine
generators	generat	generator
at	at	at
x	x	x
their	their	their
own	own	own
game	game	game
by	by	by
writing	write	writing
the	the	the
most	most	most
obscure	obscur	obscure
and	and	and
mysterious	mysteri	mysterious
postscript	postscript	postscript
x	x	x
programs	program	program
ever	ever	ever
.	.	.

x	x	x
x	x	x
winners	winner	winner
will	will	will
receive	receiv	receive
the	the	the
fame	fame	fame
and	and	and
attention	attent	attention
that	that	that
goes	goe	go
with	with	with
having	have	having
their	their	their
x	x	x
program	program	program
entry	entri	entry
posted	post	posted
as	as	a
a	a	a
winner	winner	winner
to	to	to
programmers	programm	programmer
world	world	world
-	-	-
wide	wide	wide
.	.	.

x	x	x
x	x	x
the	the	the
1993	1993	1993
contest	contest	contest
rules	rule	rule
and	and	and
results	result	result
are	are	are
available	avail	available
by	by	by
ftp	ftp	ftp
as	as	a
x	x	x
`	`	`
`	`	`
wilma	wilma	wilma
.	.	.
cs	cs	c
.	.	.
brown	brown	brown
.	.	.
edu	edu	edu
:	:	:
pub	pub	pub
/	/	/
postscript	postscript	postscript
/	/	/
obfuscated	obfusc	obfuscated
*	*	*
.	.	.
shar	shar	shar
'	'	'
'	'	'
,	,	,
or	or	or
individually	individu	individually
x	x	x
in	in	in
the	the	the
obfuscated	obfusc	obfuscated
directory	directori	directory
.	.	.

the	the	the
judges	judg	judge
will	will	will
post	post	post
the	the	the
1994	1994	1994
rules	rule	rule
x	x	x
in	in	in
november	novemb	november
to	to	to
comp	comp	comp
.	.	.
lang	lang	lang
.	.	.
postscript	postscript	postscript
on	on	on
usenet	usenet	usenet
,	,	,
and	and	and
other	other	other
places	place	place
.	.	.

x	x	x
send	send	send
questions	question	question
to	to	to
jgm@cs.brown.edu	jgm@cs.brown.edu	jgm@cs.brown.edu
.	.	.

x	x	x
x	x	x
categories	categori	category
include	includ	include
:	:	:
best	best	best
obfuscated	obfusc	obfuscated
postscript	postscript	postscript
,	,	,
best	best	best
artwork	artwork	artwork
,	,	,
x	x	x
most	most	most
compact	compact	compact
,	,	,
best	best	best
interactive	interact	interactive
program	program	program
,	,	,
most	most	most
useful	use	useful
,	,	,
and	and	and
x	x	x
anything	anyth	anything
so	so	so
unusual	unusu	unusual
and	and	and
creative	creativ	creative
that	that	that
it	it	it
deserves	deserv	deserves
an	an	an
award	award	award
.	.	.

x	x	x
x	x	x
the	the	the
judges	judg	judge
will	will	will
choose	choos	choose
the	the	the
winners	winner	winner
of	of	of
each	each	each
category	categori	category
.	.	.

x	x	x
x	x	x
alena	alena	alena
lacova	lacova	lacova
is	is	is
a	a	a
system	system	system
administrator	administr	administrator
at	at	at
nikhef	nikhef	nikhef
(	(	(
institute	institut	institute
for	for	for
high	high	high
x	x	x
energy	energi	energy
and	and	and
nuclear	nuclear	nuclear
physics	physic	physic
)	)	)
in	in	in
the	the	the
netherlands	netherland	netherlands
.	.	.

she	she	she
is	is	is
the	the	the
author	author	author
of	of	of
x	x	x
the	the	the
postscript	postscript	postscript
chaos	chao	chaos
programs	program	program
,	,	,
which	which	which
draw	draw	draw
julia	julia	julia
sets	set	set
,	,	,
mandelbrot	mandelbrot	mandelbrot
sets	set	set
x	x	x
and	and	and
other	other	other
kinds	kind	kind
of	of	of
fractal	fractal	fractal
functions	function	function
.	.	.

x	x	x
x	x	x
jonathan	jonathan	jonathan
monsarrat	monsarrat	monsarrat
is	is	is
a	a	a
graduate	graduat	graduate
student	student	student
from	from	from
mit	mit	mit
and	and	and
brown	brown	brown
university	univers	university
x	x	x
in	in	in
the	the	the
u	u	u
.	.	.
s	s	s
.	.	.
a	a	a
.	.	.
he	he	he
is	is	is
the	the	the
faq	faq	faq
maintainer	maintain	maintainer
for	for	for
the	the	the
usenet	usenet	usenet
newsgroup	newsgroup	newsgroup
x	x	x
comp	comp	comp
.	.	.
lang	lang	lang
.	.	.
postscript	postscript	postscript
and	and	and
the	the	the
author	author	author
of	of	of
the	the	the
postscript	postscript	postscript
zone	zone	zone
and	and	and
lametex	lametex	lametex
.	.	.

x	x	x
.	.	.

x	x	x
shar_eof	shar_eof	shar_eof
chmod	chmod	chmod
0444	0444	0444
obfuscate	obfusc	obfuscate
.	.	.
info	info	info
|	|	|
|	|	|
echo	echo	echo
"	"	"
restore	restor	restore
of	of	of
obfuscate	obfusc	obfuscate
.	.	.
info	info	info
failed	fail	failed
"	"	"
set	set	set
`	`	`
wc	wc	wc
-	-	-
c	c	c
obfuscate	obfusc	obfuscate
.	.	.
info	info	info
`	`	`
;	;	;
wc_c	wc_c	wc_c
=	=	=
$	$	$
1	1	1
if	if	if
test	test	test
"	"	"
$	$	$
wc_c	wc_c	wc_c
"	"	"
!	!	!
=	=	=
"	"	"
6418	6418	6418
"	"	"
;	;	;
then	then	then

echo	echo	echo
original	origin	original
size	size	size
6418	6418	6418
,	,	,
current	current	current
size	size	size
$	$	$
wc_c	wc_c	wc_c
fi	fi	fi
exit	exit	exit
0	0	0

-	-	-
-	-	-
sunnyvale	sunnyval	sunnyvale
residents	resid	resident
:	:	:
vote	vote	vote
landon	landon	landon
noll	noll	noll
for	for	for
sunnyvale	sunnyval	sunnyvale
city	citi	city
council	council	council
seat	seat	seat
1	1	1
.	.	.